! sample inputs file containing the defaults found in the namelists

&probin_common

  ! Problem specification
  !----------------------
  dim_in = 3                       ! 2D or 3D
  prob_lo(1:3) = 0.d0 0.d0 0.d0    ! physical lo coordinate
  prob_hi(1:3) = 16.d0 16.d0 16.d0 ! physical hi coordinate
  n_cells(1:3) = 16 16 16          ! number of cells in domain
  max_grid_size(1:3) = 8 8 8       ! max number of cells in a box

  prob_type = 0                    ! sets the problem type (initial condition)
                                   ! 0 thermodynamic equilibrium
                                   ! 1 Gaussian distribution
                                   ! 2 constant gradient
                                   ! 3 1+sin^2(pi*x)*sin^2(pi*y)*sin^2(pi*z)
                                   ! 4 vertical stripe
                                   ! 5 bubble

  ! Time-step control
  !----------------------
  fixed_dt = 0.5d0                ! time step (if positive, fixed)
  cfl = 0.5d0                      ! cfl number (used if fixed_dt<0) to determine time step

  ! Controls for number of steps between actions (for HydroGrid see below)
  !----------------------
  max_step = 100000                ! maximum number of time steps
  plot_int = 0                     ! interval for writing a plotfile (for visit/amrvis)
                                   ! (no plot files for plot_int<=0)
  chk_int = -1                     ! interval for writing a checkpoint
                                   ! (no checkpoint files for chk_int<=0)
  restart = -1                     ! checkpoint restart number
                                   ! (no restart for restart<0)
  print_int = 10000                ! how often to output diagnostics to screen
                                   ! (no screen output for print_int<=0)

  ! stochastic forcing amplitudes (1 for physical values, 0 to run them off)
  variance_coef_mass = 1.d0        ! global scaling epsilon for stochastic mass forcing

  ! Algorithm control / selection
  !----------------------

  ! Random number generator
  !----------------------
  use_bl_rng = T                   ! if T, use F_BaseLib/bl_random RNGs
                                   ! if F, use HydroGrid RNGs

  ! random number seed (for HydroGrid RNGs: check use_bl_rng below in probin_reactdiff)
  ! 0        = unpredictable seed based on clock
  ! positive = fixed seed
  seed = 0 

  ! if use_bl_rng=T, assign random number seeds for each physical process
  ! (if use_bl_rng=F, use seed option above in probin_common)
  ! for positive value, the value is assigned as seed value
  ! for 0, a positive value is randomly chosen
  ! if -1 (only for restart), RNGs status is restored from checkpoint data
  seed_diffusion = 0 
  seed_reaction = 0
  seed_init_mass = 0

  ! Initial conditions
  !----------------------
  perturb_width = 0.d0             ! scale factor for perturbed part in initial profile (for prob_type=4,5)
  smoothing_width = 1.d0           ! scale factor for smoothing initial profile (for prob_type=4,5)
  initial_variance_mass = -1.d0          ! multiplicative factor for initial fluctuations
                                   ! if negative, total mass fluctuation is set to zero (for integer_populations=F)

  ! Boundary conditions
  !----------------------
  ! BC specifications:
  ! -1 = periodic
  ! 100 = no-slip wall      (Dir condition for normal vel; Dir velocity condition for trans vel)
  ! 101 = no-slip reservoir (Dir condition for normal vel; Dir velocity condition for trans vel)
  ! 200 = slip wall         (Dir condition for normal vel; Dir traction condition for trans vel)
  ! 201 = slip reservoir    (Dir condition for normal vel; Dir traction condition for trans vel)
  ! For a complete list see bc.f90
  bc_lo(1:3) = -1 -1 -1
  bc_hi(1:3) = -1 -1 -1

  ! Control for analyze_spectra.90 for calling HydroGrid
  !----------------------
  hydro_grid_int = 0    ! How often to call updateHydroGrid
                        ! 0 if never
                    	! negative for projectHydroGrid custom analysis
                        ! positive for updateHydroGrid

  project_dir = 0       ! Projection direction (1=x, 2=y, 3=z)
  ! Meaning: 0=analyze 3D data only (no projection needed for HydroGrid, 
  !          but still need projection if stats_int>0)
  ! +dim=project along dim then analyze 2D only,
  ! -dim=analyze 3D and then project along dim so we also analyze 2D data
  ! It is better to use the conserved variables but it does not quite work for staggered

  max_grid_projection(1:2) = 128 128 ! parallelization parameters
  stats_int = -1                     ! Project grid for analysis
                                     ! If positive, how often to compute mean and 
                                     ! standard deviation over reduced dimensions
  n_steps_save_stats = -1            ! How often to dump HydroGrid output files
  n_steps_skip = 0                   ! How many steps to skip
  analyze_conserved = T   ! T = analyze n, F=analyze mole fractions x
  center_snapshots = F               ! Should we use cell-centered momenta for the analysis
                                     ! (will smooth fluctuations)
                                               
  histogram_unit = -1                ! If positive, write the values of the densities
                                     ! to a file for histogramming

/

&probin_reactdiff

  ! Problem description
  !----------------------
  nspecies = 3                     ! number of species
  nreactions = 2                   ! number of reactions
  
  ! Control of algorithm
  !----------------------
  temporal_integrator = 2          ! 0=D + R (first-order splitting)
                                   ! 1=(1/2)R + D + (1/2)R (Strang option 1)
                                   ! 2=(1/2)D + R + (1/2)D (Strang option 2)
                                   ! -1=unsplitting forward Euler
                                   ! -2=unsplitting explicit midpoint
                                   ! -3=unsplit multinomial diffusion
                                   ! -4=unsplit implicit midpoint

  diffusion_type = 3               ! only used for splitting schemes (temporal_integrator>=0)
                                   ! 0=explicit trapezoidal predictor/corrector
                                   ! 1=Crank-Nicolson semi-implicit
                                   ! 2=explicit midpoint
                                   ! 3=multinomial diffusion
                                   ! 4=forward Euler

  midpoint_stoch_flux_type = 3     ! only used for midpoint diffusion schemes (split as well as unsplit)
                                   ! corrector formulation of noise
                                   ! 1=K(nold) * W1 + K(nold)         * W2
                                   ! 2=K(nold) * W1 + K(npred)        * W2
                                   ! 3=K(nold) * W1 + K(2*npred-nold) * W2

  reaction_type = 0                ! only used for splitting schemes (temporal_integrator>=0)
                                   ! 0=first-order (deterministic, tau leaping, CLE, or SSA)
                                   ! 1=second-order (deterministic, tau leaping, or CLE only)

  use_Poisson_rng = 2              ! how to calculate chemical production rates
                                   ! 2=SSA
                                   ! 1=do tau leaping (Poisson increments)
                                   ! 0= do CLE (Gaussian increments)
                                   ! -1=do deterministic chemistry

  inhomogeneous_bc_fix = F         ! use the Einkemmer boundary condition fix (split schemes only)

  avg_type = 1                     ! how to compute n on faces for stochastic weighting
                                   ! 1=arithmetic (with C0-Heaviside), 2=geometric, 3=harmonic
                                   ! 10=arithmetic average with discontinuous Heaviside function
                                   ! 11=arithmetic average with C1-smoothed Heaviside function
                                   ! 12=arithmetic average with C2-smoothed Heaviside function
  
  ! Initial and boundary conditions
  !----------------------
  n_init_in(1,1:3) = 0.2387324146d0 0.2387324146d0 0.2387324146d0     ! initial values to be used in init_n.f90

  model_file_init = 0                  ! initialize from model files:
                                       ! 0=no, 1=usual order (Fortran), -1=transpose order (C)
  !model_file(1)="./init1.dat"         ! one model file for each species
  !model_file(2)="./init2.dat"

  integer_populations = T              ! initialize with all number of molecules strictly integer

  ! Diffusion     
  !----------------------                          
  D_Fick(1:3) = 0.3254919019d-1 0.3254919019d-1 0.3254919019d-1              ! Fickian diffusion coeffs
  diffusion_stencil_order = 1          ! diffusion boundary stencil order
  mg_verbose = 0                       ! implicit diffusion solve verbosity
  cg_verbose = 0                       ! implicit diffusion solve bottom solver verbosity
  implicit_diffusion_rel_eps = 1.d-10  ! relative eps for implicit diffusion solve
  implicit_diffusion_abs_eps = -1.d0   ! absolute eps for implicit diffusion solve
  
  ! Chemical reactions
  !----------------------
  cross_section = 1.d0                 ! in 2D, thickness of cell
                                       ! in general, dv = product(dx(1,1:dm))*cross_section

  ! whether to compute chemical rates using classical LMA or integer-based one
  include_discrete_LMA_correction = T

  ! LMA chemical reaction rate for each reaction (assuming Law of Mass holds)
  rate_const(1:2) = 1.d0  0.2387324146d0
  rate_multiplier = 1.0d0

  ! stoichiometric factors for each reaction (species,LHS(1)/RHS(2),reaction)
  ! Example: For N1 + 2*N2 -> N3 use
  ! stoichiometric_factors(1:3,1,1) = 1 2 0
  ! stoichiometric_factors(1:3,2,1) = 0 0 1
  stoichiometric_factors(1:3,1,1) = 1 1 0
  stoichiometric_factors(1:3,2,1) = 0 0 1
  stoichiometric_factors(1:3,1,2) = 0 0 1
  stoichiometric_factors(1:3,2,2) = 1 1 0

  ! controlling output:
  n_steps_write_avg = 2                ! if non-zero, its absolute value tells how many steps before writing total densites
                                       ! if positive, it writes average number densities in the system (fort.9)
                                       ! if negative, it writes the total number of molecules in the system (fort.21)

/


! HydroGrid spectral and other analysis
!---------------------------------------
! The variables are numbered as:
! 3D: 1=rho, 2-4=v, 5=T, 6 onward=n_k or x_k
! 2D: 1=rho, 2-3=v, 4=T, 5 onward=n_k or x_k
! Means file:
! 1=y, 2=rho, 3-5=v, 6=T, 7+=n's or x's in 3D
! 1=y, 2=rho, 3-4=v, 5=T, 6+=n's or x's in 2D

&hydroAnalysisOptions
! 2D full grid data
! NOTE: This namelist will be ignored if project_dir>0

   storeConserved = F ! We are not using conserved variables here

   ! Save the flow to a VTK file:
   writeMeansVTK = F ! Save the means over the averaging interval
   writeSnapshotVTK = F ! Save snapshots of the instantaneous fields

   ! Variances
   writeVariancesVTK = T ! Should we save a VTK file
   nVariances = 4
   variancePairs = "0 5 0 5, 0 7 0 7, 0 5 0 6, 0 5 0 7" ! Variances in each cell
      ! species1 variable1 species2 variable2
   !variancePairs = "0 -5 0 5" ! Correlations with the central cell
   !correlationCell = 5 5 1 ! The index of the special cell, if calculating correlations in real space
      ! If so, then use a negative integer for the first variable in variancePairs
      ! By default correlationCell is the cell in the center of the domain

   ! Static structure factors
   writeSpectrumVTK = T
   subtractMeanFT = F ! The means are trivial here so no need to estimate them
   writeAbsValue = T ! Only write absolute values of complex values to VTK file?
   writeTheory = -1 ! Write the theoretical prediction (-1=none, 0==continuum or 1=MAC)
   nStructureFactors = 4
   structureFactorPairs = "0 5 0 5, 0 7 0 7, 0 5 0 6, 0 5 0 7"

   ! Dynamic structure factors:
   nWavenumbers=0
   ! Shape (2,nWavenumbers):
   selectedWavenumbers=""
   nSavedSnapshots=128
      
   outputFolder = "."
   filePrefix = "ABC_3D"
   axisToPrint = 2 ! 1=x, 2=y, 3=z axis
   periodic = T ! Is the system periodic along the y axes
/

