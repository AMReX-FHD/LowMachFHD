! This is a test of thermodiffusion for 2 species
! Theory is:
! c=rho1/rho=1/(1+.1*exp(.15*y))
! Solution to diff(c(y),y)=-K*c(y)*(1-c(y))
! Here K=grad(T)*S_T=0.15
! Height of domain H=32, rho=1
! And average <rho1>=.4830852506

&probin_common
 
 dim_in = 2                       ! problem dimension
 plot_int = 10000                  ! plot interval
 max_step = 10000                   ! total number of computational step
 max_grid_size(1:2) = 16 16       ! individual box size 
 n_steps_skip = 0              ! when to start analyzing data
 k_B      = 1                  ! Boltzmann constant
 cfl     = 0.2                   ! CFL number
 prob_type = 6 ! initprob:0=equilibrium,1=bubble,2=constgrad,3=gaussian,4=2specie-mansol,5=3specie-mansol

 ! Grid size
 prob_lo(1:2) = 0 0
 prob_hi(1:2) = 1 32             ! physical systemsize = (prob_lo-prob_hi)
 n_cells(1:2) = 1 32             ! to set dx = systemsize/n_cells

 diff_coef      = 1.0                   ! max eigenvalue of diffusionmatrix Dbar_bc 

 molmass(1:2) = 1.0 0.75   ! molar mass of n-species

 ! allowable options for this example are
 !PERIODIC = -1
 !NO_SLIP_WALL        = 100 ! No mass flux or specified drho/dn
 !NO_SLIP_RESERVOIR   = 101 ! Specified rho
 bc_lo(1:2) = -1 100
 bc_hi(1:2) = -1 100

 ! random number seed
 ! 0        = unpredictable seed based on clock
 ! positive = fixed seed
 seed = 0

 ! Analysis of projections along or perpendicular to the gradient
 stats_int = 1000 ! If positive, how often to dump mean/std statistics
 project_dir = 2 ! Direction of projection (projection axes, x=1, y=2, z=3)
   ! Negative if you also want the full grid to be analyzed not just projections
 hydro_grid_int=0 ! How often to take HydroGrid snapshots (if positive, zero for no HydroGrid)
 center_snapshots=T ! Average momenta to cell-centers or shift them?
 analyze_conserved=T ! Use densities or mass fractions for analysis?
 n_steps_save_stats=0 ! How often to dump HydroGrid statistics (if positive, otherwise at end only)
 max_grid_projection(1) = 32 ! Parallelization distribution for projections
 variance_coef = 1e-6 ! This should be the same as variance_coef_mass below
 
/

&probin_multispecies
 
 nspecies = 2                     ! number of species
 ! Special init code for this test:

 variance_coef_mass = 1e-6        ! parameter to set variance (=1/thickness and =1 ideal) 
 fraction_tolerance = 1e-12       ! to prevent division by zero 
 start_time  = 0                  ! For manufactured solutions
 inverse_type = 1                 ! LAPACK inverse type: 1=inverse, 2=pseudo inverse 
 timeinteg_type = 3               ! integrator type: 1=Euler,2=predictor-corrector,3=midpoint,4=RK3
 correct_flux = .true.            ! correct flux to numeric roundoff
 use_stoch = .false.               ! use stochastic flux 
 print_error_norms = .false.      ! check L1/L2/Linf norm 
 is_ideal_mixture  = .true.       ! false=Bdag*Gama, true=Bdag 
 use_lapack  = .false.            ! false=iterative methods, true=inverse/pseudoinverse 

 ! Fluid parameters:
 Dbar(1) = 1.0 ! SM diffusion constant arranged in lower-triangle
 Dtherm(1:2) = 0.0 4800    ! thermo-diffusion constant (sums to zero)
 Press    = 1.0                   ! Pressure

 ! BCs:
 
 ! Thermodiffusion
 ! BC = -1 100
 is_nonisothermal  = .true.       ! true=include grad(T), false= no grad(T)  
 T_init(1:2) = 1.0 1.001 ! Temperature at bottom and top boundaries
 ! Bad initial guess
 !rho_init(1,1:2) = 0.4830852506 0.5169147494      ! bottom   
 !rho_init(2,1:2) = 0.4830852506 0.5169147494      ! top
 ! Good initial guess
 ! This is not used if prob_type=6, only for prob_type=2
 rho_init(1,1:2) = 0.903 0.097      ! bottom   
 rho_init(2,1:2) = 0.063 0.937      ! top
 
 ! Neumann (is_nonisothermal=F):
 ! BC = -1 100
 !is_nonisothermal  = .false.       ! true=include grad(T), false= no grad(T)  
 !rho_init(1,1:2) = 0.04 0.66       ! bottom
 !rho_init(2,1:2) = 0.36 0.34      ! top
 !rho_bc(2,1,1:2) = 0.01 -0.01 ! Desired slopes at y=0 
 !rho_bc(2,2,1:2) = 0.01 -0.01 ! Desired slopes at y=H 
 
 ! Dirichlet:
 ! BC = -1 101
 !is_nonisothermal  = .false.       ! true=include grad(T), false= no grad(T)  
 !rho_init(1,1:2) = 0.2 0.8      ! bottom   
 !rho_init(2,1:2) = 0.8 0.2      ! top
 !rho_bc(2,1,1:2) = 0.2 0.8 ! Desired densities at y=0 
 !rho_bc(2,2,1:2) = 0.8 0.2 ! Desired densities at y=H
/

! HydroGrid spectral and other analysis
!---------------------------------------
! The variables are numbered as:
! 3D: 1=rho, 2-4=v, 5=T, 6 onward=rho_1-rho_n or w_1-w_n
! 2D: 1=rho, 2-3=v, 4=T, 5 onward=rho_1-rho_n or w_1-w_n
! Means file:
! 1=y, 2=rho, 3-5=v, 6=T, 7+=rho's or w's in 3D
! 1=y, 2=rho, 3-4=v, 5=T, 6+=rho's or w's in 2D
! Variance file:
! 1=y, 2=w1-w2, 3=w1-w3, 4=w2-w3
! Structure factor numbering:
! 1=w1-w2, 2=w1-w3, 3=w2-w3

&hydroAnalysisOptions
! 2D full grid data
! NOTE: This namelist will be ignored if project_dir>0

   staggeredVelocities = 0 ! Are velocities on a staggered grid or not, (0, +1, or -1)*h/2
   storeConserved = F ! We are not using conserved variables here due to staggering

   ! Save the flow to a VTK file:
   writeMeansVTK = F ! Save the means over the averaging interval
   writeSnapshotVTK = F ! Save snapshots of the instantaneous fields

   ! Variances
   writeVariancesVTK = T ! Should we save a VTK file
   nVariances = 3
   variancePairs = "0 5 0 6, 0 5 0 7, 0 6 0 7"
      ! species1 variable1 species2 variable2

   ! Static structure factors
   writeSpectrumVTK = T
   subtractMeanFT = T ! The means are trivial here so no need to estimate them
   writeAbsValue = T ! Only write absolute values of complex values to VTK file?
   writeTheory = -1 ! Write the theoretical prediction (-1=none, 0==continuum or 1=MAC)
   nStructureFactors = 3
   structureFactorPairs = "0 5 0 6, 0 5 0 7, 0 6 0 7"

   ! Dynamic structure factors:
   nWavenumbers=0
   ! Shape (2,nWavenumbers):
   selectedWavenumbers="2 0, 2 2, 4 0, 2 4, 4 4, 8 0, 4 8, 8 8"
   nSavedSnapshots=32
      
   outputFolder = "."
   filePrefix = "3species_xy-mid-cfl_0.05"
   axisToPrint = 2 ! 1=x, 2=y, 3=z axis
   periodic = T ! Is the system periodic along the y axes
/

&hydroAnalysisOptions
! 1D projection onto direction perpendicular to project_dir
! This is only updated and saved every stats_int steps

   staggeredVelocities = 0 ! Are velocities on a staggered grid or not, (0, +1, or -1)*h/2
   storeConserved = F ! We are not using conserved variables here due to staggering

   ! Save the flow to a VTK file:
   writeMeansVTK = F ! Save the means over the averaging interval
   writeSnapshotVTK = F ! Save snapshots of the instantaneous fields

   ! Variances
   writeVariancesVTK = F ! Should we save a VTK file
   nVariances = 3
   variancePairs = "0 5 0 6, 0 5 0 7, 0 6 0 7"
      ! species1 variable1 species2 variable2
   
   ! Static structure factors
   writeSpectrumVTK = F
   subtractMeanFT = T ! The means are trivial here so no need to estimate them
   writeAbsValue = T ! Only write absolute values of complex values to VTK file?
   writeTheory = -1 ! Write the theoretical prediction (-1=none, 0==continuum or 1=MAC)
   nStructureFactors = 3
   structureFactorPairs = "0 5 0 6, 0 5 0 7, 0 6 0 7"

   ! Dynamic structure factors:
   nWavenumbers=0
   ! Shape (2,nWavenumbers):
   selectedWavenumbers="1 0, 2 0, 3 0, 4 0, 5 0, 6 0, 7 0, 8 0, 9 0"
   nSavedSnapshots=32
      
   outputFolder = "."
   filePrefix = "3species_x"
   axisToPrint = 1 ! 1=x, 2=y, 3=z axis
   periodic = T ! Is the system periodic along the y axes
/

&hydroAnalysisOptions
! 1D projection along hyperplane perpendicular to project_dir
   staggeredVelocities = 0 ! Are velocities on a staggered grid or not, (0, +1, or -1)*h/2
   storeConserved = F ! We are not using conserved variables here due to staggering

   ! Save the flow to a VTK file:
   writeMeansVTK = F ! Save the means over the averaging interval
   writeSnapshotVTK = F ! Save snapshots of the instantaneous fields

   ! Variances
   writeVariancesVTK = F ! Should we save a VTK file
   nVariances = 3
   variancePairs = "0 5 0 6, 0 5 0 7, 0 6 0 7"
      ! species1 variable1 species2 variable2
   
   ! Static structure factors
   writeSpectrumVTK = F
   subtractMeanFT = T ! The means are trivial here so no need to estimate them
   writeAbsValue = T ! Only write absolute values of complex values to VTK file?
   writeTheory = -1 ! Write the theoretical prediction (-1=none, 0==continuum or 1=MAC)
   nStructureFactors = 3
   structureFactorPairs = "0 5 0 6, 0 5 0 7, 0 6 0 7"
      
   outputFolder = "."
   filePrefix = "3species_y"
   axisToPrint = 2 ! 1=x, 2=y, 3=z axis
   periodic = T ! Is the system periodic along the y axes
/
