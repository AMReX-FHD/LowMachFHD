! Input corresponding to hard disk molecular dynamics (2d) simulations (phi=0.6) by Yifei Sun, mass ratio = 4
! About 1.25M particles

&probin_binarylm

  ! problem setup
  smoothing_width = 1.d0     ! scale factor for smoothing initial profile
  c_init(1:2) = 0.d0 1.d0    ! controls initial concentration range

  ! fluid properties
  temperature = 1.d0                  ! temperature

  material_properties(1,1) = 0.d0 ! Diffusion is independent of concentration

  ! Kinematic viscosity is linear in concentration:
  material_properties(1,2) = 1.d0        !(sqrt(R)-1)
  material_properties(2,2) = 3.d0        !R - 1
  
  ! stochastic properties
  conc_scal = 1.d0           ! Scaling for concentration stochastic forcing is variance_coef*conc_scal

  barodiffusion_type = 0  ! 0=none, 1=fixed from init, 2=update each timestep
  algorithm_type = 0	  ! enable overdamped (infinite Sc) algorithm

/

&probin_common

  ! Problem specification
  !----------------------
  dim_in = 2                 ! 2D or 3D  
  prob_lo(1:2) = 0.d0 0.d0   ! physical lo coordinate
  prob_hi(1:2) = 640.d0 640.d0   ! physical hi coordinate
  n_cells(1:2) = 64 64       ! number of cells in domain
  max_grid_size(1:2) = 32 32 ! max number of cells in a box
  fixed_dt = 1.45d0          ! time step
  plot_int = 100             ! Interval for writing a plotfile (for visit/amrvis)
  prob_type = 2              ! sets scalars, m, coefficients (see init.f90)
  max_step = 4000            ! maximum number of time steps
  print_int = 1              ! how often to output EOS drift and sum of conserved quantities
  project_eos_int = 1        ! how often to call project_onto_eos

  ! Algorithm control / selection
  !----------------------

  ! random number seed
  ! 0        = unpredictable seed based on clock
  ! positive = fixed seed
  seed = 1

  ! L phi operator
  ! if abs(visc_type) = 1, L = div beta grad
  ! if abs(visc_type) = 2, L = div [ beta (grad + grad^T) ]
  ! if abs(visc_type) = 3, L = div [ beta (grad + grad^T) + I (gamma - (2/3)*beta) div ]
  ! positive = assume constant coefficients
  ! negative = assume spatially-varying coefficients
  visc_type = -2
  visc_coef = 5.0            ! momentum diffusion coefficient 'eta'  

  ! 1 = constant coefficients
  ! -1 = spatially-varing coefficients
  diff_type = -1
  diff_coef = 0.086963       ! concentration diffusion coefficient 'chi'

  rhobar(1:2) = 0.763944 3.05578  ! rho1bar and rho2bar 
  molmass(1:2) = 1.d0 4.d0  ! molar mass of species

  advection_type = 0         ! 0 = centered, 1 = unlimited bds, 2 = limited bds

  ! Boundary conditions
  !----------------------
  ! BC specifications:
  ! -1  = periodic
  ! 100 = no-slip (Dirichlet velocity condition for normal; Dirichlet velocity condition for trans)
  ! 200 = slip    (Dirichlet velocity condition for normal; Dirichlet traction condition for trans)
  bc_lo(1:2) = -1 -1
  bc_hi(1:2) = -1 -1

  variance_coef = 1.d0       ! global scaling epsilon for stochastic forcing
  k_B = 1.d0                 ! Boltzmann's constant
  filtering_width = 4        ! If positive the random numbers will be filtered to smooth out the fields
  stoch_stress_form = 1      ! 0=nonsymmetric (div(v)=0), 1=symmetric (no bulk)

/

&probin_gmres

  ! preconditioner type
  ! 1 = projection preconditioner
  !-1 = projection preconditioner with expensive pressure update
  ! 2 = lower triangular preconditioner
  !-2 = lower triangular preconditioner with negative sign
  ! 3 = upper triangular preconditioner
  !-3 = upper triangular preconditioner with negative sign
  ! 4 = Block diagonal preconditioner
  !-4 = Block diagonal preconditioner with negative sign
  precon_type = 1

  ! weighting of pressure when computing norms and inner products
  p_norm_weight = 1.d0

  ! MAC projection solver parameters:
  mg_verbose = 0               ! multigrid verbosity
  cg_verbose = 0               ! BiCGStab (mg_bottom_solver=1) verbosity
  mg_max_vcycles = 1           ! maximum number of V-cycles
  mg_minwidth = 2              ! length of box at coarsest multigrid level
  mg_bottom_solver = 0         ! bottom solver type
                               ! 0 = smooths only, controlled by mg_nsmooths_bottom
                               ! 1 = BiCGStab
                               ! 4 = Fancy bottom solve that coarsens down additionally
                               !     and then applies mg_nsmooths_bottom smooths
  mg_nsmooths_down = 2         ! number of smooths at each level on the way down
  mg_nsmooths_up = 2           ! number of smooths at each level on the way up
  mg_nsmooths_bottom = 8       ! number of smooths at the bottom (only if mg_bottom_solver=0)
  mg_max_bottom_nlevels = 1000 ! for mg_bottom_solver=4, number of additional levels of multigrid
  mg_rel_tol = 1.d-9           ! relative tolerance stopping criteria

  ! Staggered multigrid solver parameters
  stag_mg_verbosity = 0        ! verbosity
  stag_mg_max_vcycles = 1      ! max number of v-cycles
  stag_mg_minwidth = 2         ! length of box at coarsest multigrid level
  stag_mg_bottom_solver = 0    ! bottom solver type
                               ! 0 = smooths only, controlled by mg_nsmooths_bottom
                               ! 4 = Fancy bottom solve that coarsens additionally
                               !     and then applies stag_mg_nsmooths_bottom smooths
  stag_mg_nsmooths_down = 2    ! number of smooths at each level on the way down
  stag_mg_nsmooths_up = 2      ! number of smooths at each level on the way up
  stag_mg_nsmooths_bottom = 8  ! number of smooths at the bottom
  stag_mg_max_bottom_nlevels = 10 ! for stag_mg_bottom_solver=4, 
                                  ! number of additional levels of multigrid
  stag_mg_omega = 1.d0         ! weighted-jacobi omega coefficient
  stag_mg_smoother = 1         ! 0 = jacobi; 1 = 2*dm-color Gauss-Seidel
  stag_mg_rel_tol = 1.d-9      ! relative tolerance stopping criteria

  ! GMRES solver parameters
  gmres_rel_tol = 1.d-9        ! relative tolerance stopping criteria
  gmres_abs_tol = 0.d0         ! absolute tolerance stopping criteria
  gmres_verbose = 1            ! gmres verbosity; if greater than 1, more residuals will be printed out
  gmres_max_outer = 20         ! max number of outer iterations
  gmres_max_inner = 5          ! max number of inner iterations, or restart number
  gmres_max_iter = 100         ! max number of gmres iterations
  gmres_min_iter = 1           ! min number of gmres iterations

/

&hydroAnalysisOptions
! 2D full grid data
! NOTE: This namelist will be ignored if project_dir>0

   ! 3D: 1=rho, 2-4=v, 5=T, 6=c
   ! 2D: 1=rho, 2-3=v, 4=T, 5=c
   staggeredVelocities = 0 ! Are velocities on a staggered grid or not, (0, +1, or -1)*h/2
   storeConserved = F ! We are not using conserved variables here due to staggering

   ! Means file:
   ! 1=y, 2=rho, 3-5=v, 6=T, 7=c in 3D
   ! 1=y, 2=rho, 3-4=v, 5=T, 6=c in 2D

   ! Save the flow to a VTK file:
   writeMeansVTK = F ! Save the means over the averaging interval
   writeSnapshotVTK = F ! Save snapshots of the instantaneous fields

   ! Variances
   writeVariancesVTK = F ! Should we save a VTK file
   nVariances = 0
   ! Variance file:
   ! 1=y, 2=c-c, 3=rho-rho, 4=c-rho
   variancePairs = "0 5 0 5, 0 1 0 1, 0 5 0 1"
      ! species1 variable1 species2 variable2
      
   outputFolder = "."
   filePrefix = "Mixing2D"
   axisToPrint = 2 ! 1=x, 2=y, 3=z axis
   periodic = T ! Is the system periodic along the y axes
/

&hydroAnalysisOptions
! 1D projection onto direction perpendicular to project_dir
! This is only updated and saved every stats_int steps

   ! 3D: 1=rho, 2-4=v, 5=c center of mass, 6=c
   ! 2D: 1=rho, 2-3=v, 4=c center of mass, 5=c
   staggeredVelocities = 0 ! Are velocities on a staggered grid or not, (0, +1, or -1)*h/2
   storeConserved = F ! We are not using conserved variables here due to staggering

   ! Means file:
   ! 1=y, 2=rho, 3-5=v, 6=T, 7=c in 3D
   ! 1=y, 2=rho, 3-4=v, 5=T, 6=c in 2D

   ! Save the flow to a VTK file:
   writeMeansVTK = F ! Save the means over the averaging interval
   writeSnapshotVTK = F ! Save snapshots of the instantaneous fields

   ! Variances
   writeVariancesVTK = F ! Should we save a VTK file
   nVariances = 0
   ! Variance file:
   ! 1=y, 2=c-c, 3=c_cm-c_cm, 4=c_cm-c
   variancePairs = "0 6 0 6, 0 5 0 5, 0 5 0 6"
      ! species1 variable1 species2 variable2
   
   ! Static structure factors
   writeSpectrumVTK = F
   subtractMeanFT = F ! The means are trivial here so no need to estimate them
   writeAbsValue = T ! Only write absolute values of complex values to VTK file?
   writeTheory = -1 ! Write the theoretical prediction (-1=none, 0==continuum or 1=MAC)
   nStructureFactors = 3
   ! 1=c-c, 2=c_cm-c_cm, 3=c_cm-c
   structureFactorPairs = "0 5 0 5, 0 4 0 4, 0 4 0 5"

   ! Dynamic structure factors:
   nWavenumbers=0
   ! Shape (2,nWavenumbers):
   selectedWavenumbers="1 0, 2 0, 3 0, 4 0, 5 0, 6 0, 7 0, 8 0, 9 0"
   nSavedSnapshots=32
      
   outputFolder = "."
   filePrefix = "Mixing2DPerp"
   axisToPrint = 1 ! 1=x, 2=y, 3=z axis
   periodic = T ! Is the system periodic along the y axes
/

&hydroAnalysisOptions
! 1D projection along hyperplane perpendicular to project_dir
   ! 3D: 1=rho, 2-4=v, 5=T, 6=c
   ! 2D: 1=rho, 2-3=v, 4=T, 5=c
   staggeredVelocities = 0 ! Are velocities on a staggered grid or not, (0, +1, or -1)*h/2
   storeConserved = F ! We are not using conserved variables here due to staggering

   ! Means file:
   ! 1=y, 2=rho, 3-5=v, 6=T, 7=c in 3D
   ! 1=y, 2=rho, 3-4=v, 5=T, 6=c in 2D

   ! Save the flow to a VTK file:
   writeMeansVTK = F ! Save the means over the averaging interval
   writeSnapshotVTK = F ! Save snapshots of the instantaneous fields

   ! Variances
   writeVariancesVTK = F ! Should we save a VTK file
   nVariances = 3
   ! Variance file:
   ! 1=y, 2=c-c, 3=rho-rho, 4=c-rho
   variancePairs = "0 5 0 5, 0 1 0 1, 0 5 0 1"
      ! species1 variable1 species2 variable2
      
   outputFolder = "."
   filePrefix = "Mixing2DPar"
   axisToPrint = 2 ! 1=x, 2=y, 3=z axis
   periodic = T ! Is the system periodic along the y axes
/
