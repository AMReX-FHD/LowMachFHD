(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    720382,      14422]
NotebookOptionsPosition[    712616,      14166]
NotebookOutlinePosition[    712951,      14181]
CellTagsIndexPosition[    712908,      14178]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Linearized Equation Analysis (Structure Factor)", "Title",
 CellChangeTimes->{{3.676928322338253*^9, 3.676928350762638*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Basic Settings", "Section",
 CellChangeTimes->{{3.676928390362578*^9, 3.6769284109780397`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"dimensionless", " ", 
      RowBox[{"variables", ":", " ", "a"}]}], "=", "alpha"}], ",", " ", 
    RowBox[{"b", "=", "beta"}], ",", " ", "C", ",", " ", "xi", ",", " ", 
    RowBox[{"g", "=", 
     RowBox[{"G", "[", "xi", "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"quantities", " ", "having", " ", 
     RowBox[{"units", ":", " ", "nb"}]}], ",", " ", "r", ",", " ", "dt", ",", 
    " ", 
    RowBox[{"Sk", "[", "xi", "]"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.676855047583304*^9, 3.6768551716496983`*^9}, {
  3.676855446618886*^9, 3.676855479156762*^9}, {3.676855509353703*^9, 
  3.676855510751793*^9}, {3.676929869683941*^9, 3.676929870763102*^9}, {
  3.6778528266772413`*^9, 3.677852827878387*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"diffusion", " ", 
     RowBox[{"operators", ":", " ", 
      RowBox[{"dn", "/", "dt"}]}]}], "=", 
    RowBox[{
     RowBox[{"LD", "*", "n"}], "+", 
     RowBox[{"KD", "*", "Wt"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LD", "=", 
     RowBox[{
      RowBox[{"-", "r"}], " ", "g", " ", 
      RowBox[{"xi", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KDsq", "=", 
     RowBox[{"2", " ", "nb", " ", "r", " ", "g", " ", 
      RowBox[{"xi", "^", "2"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.676856165097303*^9, 3.676856251108691*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"reaction", " ", 
     RowBox[{"operators", ":", " ", 
      RowBox[{"dn", "/", "dt"}]}]}], "=", 
    RowBox[{
     RowBox[{"LR", "*", "n"}], "+", 
     RowBox[{"KR", "*", "Wt"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LR", "=", 
     RowBox[{"-", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KRsq", "=", 
     RowBox[{"2", "nb", " ", "r", " ", "C"}]}], ";"}], " "}]}]], "Input",
 CellChangeTimes->{{3.6768562543666697`*^9, 3.67685631207609*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"exact", " ", 
     RowBox[{"solution", ":", " ", 
      RowBox[{"n", 
       RowBox[{"(", "dt", ")"}]}]}]}], "=", 
    RowBox[{
     RowBox[{"M", "*", "n", 
      RowBox[{"(", "0", ")"}]}], "+", 
     RowBox[{"N", "*", "Y"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mex", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"LD", "+", "LR"}], ")"}], "dt"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nsqex", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"KDsq", "+", "KRsq"}], ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"LD", "+", "LR"}], ")"}], "dt"}], "]"}]}], ")"}], "/", 
        "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"LD", "+", "LR"}], ")"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.676857512636877*^9, 3.676857691406412*^9}, 
   3.676858440273961*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"true", " ", "structure", " ", "factor"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SkExact", "[", "xi_", "]"}], ":=", 
   RowBox[{"nb", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"C", "+", 
       RowBox[{"xi", "^", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"xi", "^", "2"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.661283989707342*^9, 3.661284001777125*^9}, {
  3.676855034331064*^9, 3.67685504300329*^9}, {3.67685554744162*^9, 
  3.6768555491841307`*^9}, {3.676856262420484*^9, 3.676856262523836*^9}, {
  3.676858132075396*^9, 3.676858148964183*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "correction", " ", "factor", " ", "for", " ", "spatial", " ", 
    "descretization"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"G", "[", "xi_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"a", "/", "b"}], "]"}], 
       RowBox[{"xi", "/", "2"}]}], "]"}], "^", "2"}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"a", "/", "b"}], "]"}], 
       RowBox[{"xi", "/", "2"}]}], ")"}], "^", "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6612837806504393`*^9, 3.661283846186314*^9}, {
  3.661283936544437*^9, 3.661283940491723*^9}, {3.676855188922942*^9, 
  3.6768551969951897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"exact", " ", 
     RowBox[{"reaction", ":", " ", "R"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "r"}], "*", "tau"}], "]"}], "-", "1"}], ")"}], "n"}], 
     "+", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "*", "r", "*", "tau"}], "]"}]}], ")"}], "nb", 
        "*", "C"}], "]"}], "Y"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"n_", ",", "tau_", ",", "Y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"LR", " ", "tau"}], "]"}], "-", "1"}], ")"}], "n"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"-", "KRsq"}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"2", "LR", " ", "tau"}], "]"}]}], ")"}], "/", "2"}], "/", 
        "LR"}]}], "]"}], "Y"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6768563279081306`*^9, 3.676856414788434*^9}, {
  3.676856479926456*^9, 3.6768564887723637`*^9}, {3.676858013852489*^9, 
  3.6768581054203987`*^9}, {3.6768995179799013`*^9, 3.676899534081409*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "st"}], "-", 
     RowBox[{"order", " ", 
      RowBox[{"reaction", ":", " ", "R"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "r"}], "*", "tau", "*", "n"}], "+", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", "r", "*", "tau", "*", "nb", "*", "C"}], "]"}], 
      "Y"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"R1", "[", 
    RowBox[{"n_", ",", "tau_", ",", "Y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"LR", " ", "tau", " ", "n"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", "tau"}], "]"}], "Y"}]}]}]}]], "Input",
 CellChangeTimes->{{3.676899459763797*^9, 3.676899571790358*^9}, {
  3.676899607639738*^9, 3.6768996530306177`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"multinomial", " ", "diffusion"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mmn", "[", "tau_", "]"}], ":=", 
    RowBox[{"1", "+", 
     RowBox[{"LD", " ", "tau"}]}]}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nmnsq", "[", "tau_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"Mmn", "[", "tau", "]"}], "^", "2"}]}], ")"}], "nb"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dmn", "[", 
     RowBox[{"n_", ",", "tau_", ",", "Y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Mmn", "[", "tau", "]"}], "-", "1"}], ")"}], "n"}], "+", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"Nmnsq", "[", "tau", "]"}], "]"}], "Y"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6772485591093607`*^9, 3.677248592465271*^9}, {
   3.677254875859128*^9, 3.6772548814194403`*^9}, {3.677254914507221*^9, 
   3.677254970170575*^9}, 3.677255048325041*^9, {3.677255138210166*^9, 
   3.677255143754142*^9}, {3.67725522868311*^9, 3.677255263881222*^9}, {
   3.677255654793704*^9, 3.677255658263515*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculation of S(k) from Each Second-Order Scheme", "Section",
 CellChangeTimes->{{3.67692842565056*^9, 3.676928461241817*^9}, {
  3.676929926347941*^9, 3.67692992724365*^9}, {3.677095294982963*^9, 
  3.677095298247054*^9}}],

Cell[CellGroupData[{

Cell["Splitting: CN/2 + SSA + CN/2", "Subsection",
 CellChangeTimes->{{3.676928278322056*^9, 3.676928294706375*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n0", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y1"}]}]}], ",", "ntmp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nCN", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSSA", "=", 
   RowBox[{"nCN", "+", 
    RowBox[{"R", "[", 
     RowBox[{"nCN", ",", "dt", ",", "Y2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"nSSA", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nSSA", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y3"}]}]}], ",", "ntmp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676856611018194*^9, 3.676856658273159*^9}, {
  3.676856707394285*^9, 3.6768567173240337`*^9}, {3.676856822922957*^9, 
  3.676856865179654*^9}, {3.676856939242077*^9, 3.6768569611788597`*^9}, {
  3.676857003842264*^9, 3.676857176314321*^9}, {3.676928479940814*^9, 
  3.676928481460808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6768581695689096`*^9, 3.676858260563334*^9}, {
  3.676858291739839*^9, 3.67685840704379*^9}, {3.676858463790758*^9, 
  3.676858472555743*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676858170367095*^9, {3.676858215448216*^9, 3.676858261415182*^9}, {
   3.6768582946406517`*^9, 3.676858314325313*^9}, {3.676858345319631*^9, 
   3.676858362736171*^9}, {3.67685839692916*^9, 3.6768584074587097`*^9}, {
   3.6768584461808043`*^9, 3.676858472974884*^9}, 3.676859398604629*^9, 
   3.676859770684967*^9, 3.676899709575193*^9, 3.67692005325539*^9, 
   3.6769275117988*^9, 3.676928490686923*^9, 3.676928533206341*^9, 
   3.676929933715088*^9, 3.677095309253289*^9, 3.6771112003623257`*^9, 
   3.677262126284814*^9, 3.677272116121758*^9, 3.677273325256713*^9, 
   3.6772740624171057`*^9, 3.677590670859828*^9, 3.6778512866947937`*^9, 
   3.6778516946903877`*^9, 3.6778528622884912`*^9, 3.677853057559095*^9, {
   3.6778532114175453`*^9, 3.677853222621922*^9}, 3.677858622280397*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676858170367095*^9, {3.676858215448216*^9, 3.676858261415182*^9}, {
   3.6768582946406517`*^9, 3.676858314325313*^9}, {3.676858345319631*^9, 
   3.676858362736171*^9}, {3.67685839692916*^9, 3.6768584074587097`*^9}, {
   3.6768584461808043`*^9, 3.676858472974884*^9}, 3.676859398604629*^9, 
   3.676859770684967*^9, 3.676899709575193*^9, 3.67692005325539*^9, 
   3.6769275117988*^9, 3.676928490686923*^9, 3.676928533206341*^9, 
   3.676929933715088*^9, 3.677095309253289*^9, 3.6771112003623257`*^9, 
   3.677262126284814*^9, 3.677272116121758*^9, 3.677273325256713*^9, 
   3.6772740624171057`*^9, 3.677590670859828*^9, 3.6778512866947937`*^9, 
   3.6778516946903877`*^9, 3.6778528622884912`*^9, 3.677853057559095*^9, {
   3.6778532114175453`*^9, 3.677853222621922*^9}, 3.677858622283945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkCN2SSACN2", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676859779315846*^9, 3.676859788709219*^9}, {
  3.677095310406003*^9, 3.677095311838306*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"16", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"16", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"24", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"24", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "+", 
       RowBox[{"9", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}], "-", 
       RowBox[{"9", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"48", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 4, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 48] (1 + $CellContext`xi^2)^(-2) (
     16 $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 16 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 + 
     24 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 24 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^4 + 
     9 $CellContext`nb $CellContext`r^2 $CellContext`xi^6 - 9 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^6)}, 4, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859789741712*^9, 3.676899711189324*^9, 3.6769200540828037`*^9, 
   3.676927512730847*^9, 3.676928491451442*^9, 3.676928535246999*^9, 
   3.676929934717342*^9, 3.6770953126162567`*^9, 3.6771112011279993`*^9, 
   3.677262127155147*^9, 3.677272117179103*^9, 3.677273326089314*^9, 
   3.6772740642052307`*^9, 3.67759067234908*^9, 3.677851287945148*^9, 
   3.677851696518661*^9, 3.677852862746667*^9, 3.67785305776315*^9, {
   3.677853211631228*^9, 3.677853222786254*^9}, 3.67785862277464*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting: SSA/2 + CN + SSA/2", "Subsection",
 CellChangeTimes->{{3.6769282301870003`*^9, 3.676928241802732*^9}, {
  3.676928543663377*^9, 3.676928545889299*^9}, {3.676929935388019*^9, 
  3.6769299383797503`*^9}, {3.6771112017995577`*^9, 3.677111202577099*^9}, {
  3.677262127845433*^9, 3.677262128604073*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nSSA", "=", 
   RowBox[{"n0", "+", 
    RowBox[{"R", "[", 
     RowBox[{"n0", ",", 
      RowBox[{"dt", "/", "2"}], ",", "Y1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"nSSA", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nSSA", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], "dt"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", "dt"}], "]"}], "Y2"}]}]}], ",", "ntmp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nCN", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"nCN", "+", 
    RowBox[{"R", "[", 
     RowBox[{"nCN", ",", 
      RowBox[{"dt", "/", "2"}], ",", "Y3"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676858731086359*^9, 3.6768588703756657`*^9}, {
  3.6768589074336977`*^9, 3.6768589111797323`*^9}, {3.676928491716413*^9, 
  3.67692849633499*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.676858883507331*^9, 3.676858913084228*^9}, 
   3.676859400915447*^9, 3.6768598001267967`*^9, 3.6768997129674788`*^9, 
   3.676920055640669*^9, 3.676927515316733*^9, 3.6769284985574903`*^9, 
   3.676928549116762*^9, 3.6769299411485643`*^9, 3.677095318172235*^9, 
   3.677111204751628*^9, 3.677262130739047*^9, 3.677272120539741*^9, 
   3.677273328807417*^9, 3.677274069080913*^9, 3.6775906751437187`*^9, 
   3.677851292259013*^9, 3.677851701245118*^9, 3.6778528637803917`*^9, 
   3.677853057979651*^9, {3.6778532118375607`*^9, 3.677853223030374*^9}, 
   3.677858625837195*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{{3.676858883507331*^9, 3.676858913084228*^9}, 
   3.676859400915447*^9, 3.6768598001267967`*^9, 3.6768997129674788`*^9, 
   3.676920055640669*^9, 3.676927515316733*^9, 3.6769284985574903`*^9, 
   3.676928549116762*^9, 3.6769299411485643`*^9, 3.677095318172235*^9, 
   3.677111204751628*^9, 3.677262130739047*^9, 3.677272120539741*^9, 
   3.677273328807417*^9, 3.677274069080913*^9, 3.6775906751437187`*^9, 
   3.677851292259013*^9, 3.677851701245118*^9, 3.6778528637803917`*^9, 
   3.677853057979651*^9, {3.6778532118375607`*^9, 3.677853223030374*^9}, 
   3.6778586258409023`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkSSA2CNSSA2", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676859809003397*^9, 3.6768598118517923`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"2", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"6", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "+", 
       RowBox[{"6", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"3", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}], "+", 
       RowBox[{"3", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"12", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 4, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 12] (
      1 + $CellContext`xi^2)^(-2) ((-2) $CellContext`nb $CellContext`r^2 \
$CellContext`xi^2 + 2 C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 
     6 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 + 
     6 C $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 
     3 $CellContext`nb $CellContext`r^2 $CellContext`xi^6 + 
     3 C $CellContext`nb $CellContext`r^2 $CellContext`xi^6)}, 4, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859812723688*^9, 3.676899713800597*^9, 3.67692005650987*^9, 
   3.6769275165684767`*^9, 3.6769285530289307`*^9, 3.676929942532433*^9, 
   3.677095320892131*^9, 3.677111205696539*^9, 3.677262131588832*^9, 
   3.677272121783428*^9, 3.677273329717823*^9, 3.677274073284235*^9, 
   3.6775906764754257`*^9, 3.6778512941856728`*^9, 3.67785170299893*^9, 
   3.677852864316284*^9, 3.677853058618834*^9, {3.677853212058525*^9, 
   3.6778532233913717`*^9}, 3.6778586270152493`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting: CN/2 + 2nd-Order Tau-Leaping + CN/2", "Subsection",
 CellChangeTimes->{{3.676928278322056*^9, 3.676928294706375*^9}, {
  3.67692863232202*^9, 3.6769286461372623`*^9}, {3.67726213232395*^9, 
  3.677262132988089*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n0", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y1"}]}]}], ",", "ntmp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nCN", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ni", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"LR", " ", 
        RowBox[{"dt", "/", "2"}]}]}], ")"}], "nCN"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "2"}]}], "]"}], "Y2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTau", "=", 
   RowBox[{"nCN", "+", 
    RowBox[{"LR", " ", "dt", " ", "ni"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y2"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y3"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"nTau", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nTau", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y4"}]}]}], ",", "ntmp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676856611018194*^9, 3.676856658273159*^9}, {
  3.676856707394285*^9, 3.6768567173240337`*^9}, {3.676856822922957*^9, 
  3.676856865179654*^9}, {3.676856939242077*^9, 3.6768569611788597`*^9}, {
  3.676857003842264*^9, 3.676857176314321*^9}, {3.676928479940814*^9, 
  3.676928481460808*^9}, {3.676928661676836*^9, 3.676928676405661*^9}, {
  3.676928719134099*^9, 3.6769287423947763`*^9}, {3.67692883844436*^9, 
  3.676928965111622*^9}, {3.676929059059813*^9, 3.6769290728488626`*^9}, {
  3.676929145504756*^9, 3.676929146800602*^9}, {3.6769292679129257`*^9, 
  3.6769292772422037`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y4"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6768581695689096`*^9, 3.676858260563334*^9}, {
  3.676858291739839*^9, 3.67685840704379*^9}, {3.676858463790758*^9, 
  3.676858472555743*^9}, {3.676929122252254*^9, 3.676929124497693*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676858170367095*^9, {3.676858215448216*^9, 3.676858261415182*^9}, {
   3.6768582946406517`*^9, 3.676858314325313*^9}, {3.676858345319631*^9, 
   3.676858362736171*^9}, {3.67685839692916*^9, 3.6768584074587097`*^9}, {
   3.6768584461808043`*^9, 3.676858472974884*^9}, 3.676859398604629*^9, 
   3.676859770684967*^9, 3.676899709575193*^9, 3.67692005325539*^9, 
   3.6769275117988*^9, 3.676928490686923*^9, 3.676928533206341*^9, {
   3.676929125699194*^9, 3.676929149123863*^9}, 3.67692921244718*^9, 
   3.676929293452232*^9, 3.676929379307178*^9, 3.67692995357053*^9, 
   3.677095328892869*^9, 3.6771112090446987`*^9, 3.677262135322702*^9, 
   3.677272126089738*^9, 3.677273333056059*^9, 3.677274076893365*^9, 
   3.6775906795351667`*^9, 3.6778512973807497`*^9, 3.6778517065087233`*^9, 
   3.677852867517214*^9, 3.677853061677504*^9, {3.677853212483843*^9, 
   3.67785322400012*^9}, 3.677858628521862*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676858170367095*^9, {3.676858215448216*^9, 3.676858261415182*^9}, {
   3.6768582946406517`*^9, 3.676858314325313*^9}, {3.676858345319631*^9, 
   3.676858362736171*^9}, {3.67685839692916*^9, 3.6768584074587097`*^9}, {
   3.6768584461808043`*^9, 3.676858472974884*^9}, 3.676859398604629*^9, 
   3.676859770684967*^9, 3.676899709575193*^9, 3.67692005325539*^9, 
   3.6769275117988*^9, 3.676928490686923*^9, 3.676928533206341*^9, {
   3.676929125699194*^9, 3.676929149123863*^9}, 3.67692921244718*^9, 
   3.676929293452232*^9, 3.676929379307178*^9, 3.67692995357053*^9, 
   3.677095328892869*^9, 3.6771112090446987`*^9, 3.677262135322702*^9, 
   3.677272126089738*^9, 3.677273333056059*^9, 3.677274076893365*^9, 
   3.6775906795351667`*^9, 3.6778512973807497`*^9, 3.6778517065087233`*^9, 
   3.677852867517214*^9, 3.677853061677504*^9, {3.677853212483843*^9, 
   3.67785322400012*^9}, 3.677858628526108*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkCN2TauCN2", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676859779315846*^9, 3.676859788709219*^9}, {
  3.67692930474852*^9, 3.676929309953603*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"8", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"8", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"8", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "+", 
       RowBox[{"3", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}], "-", 
       RowBox[{"3", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"16", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 4, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 16] (1 + $CellContext`xi^2)^(-2) (
     8 $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 8 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 + 
     8 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 8 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^4 + 
     3 $CellContext`nb $CellContext`r^2 $CellContext`xi^6 - 3 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^6)}, 4, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859789741712*^9, 3.676899711189324*^9, 3.6769200540828037`*^9, 
   3.676927512730847*^9, 3.676928491451442*^9, 3.676928535246999*^9, {
   3.676929296802359*^9, 3.676929310909436*^9}, 3.67692938016136*^9, 
   3.676929955818413*^9, 3.677095330609496*^9, 3.677111210172986*^9, 
   3.677262136202729*^9, 3.677272127546221*^9, 3.677273334010456*^9, 
   3.677274078721189*^9, 3.6775906808137083`*^9, 3.6778512990576487`*^9, 
   3.67785170812223*^9, 3.677852868891255*^9, 3.677853063189644*^9, {
   3.677853212894462*^9, 3.677853224814439*^9}, 3.6778586291280003`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Splitting: (2nd-Order Tau-Leaping)/2 + CN + (2nd-Order Tau-Leaping)/2\
\>", "Subsection",
 CellChangeTimes->{{3.676928278322056*^9, 3.676928294706375*^9}, {
  3.67692863232202*^9, 3.6769286461372623`*^9}, {3.676929343278137*^9, 
  3.6769293723056498`*^9}, {3.6772621368362837`*^9, 3.677262137500445*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ni", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"LR", " ", 
        RowBox[{"dt", "/", "4"}]}]}], ")"}], "n0"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "4"}]}], "]"}], "Y1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTau", "=", 
   RowBox[{"n0", "+", 
    RowBox[{"LR", " ", 
     RowBox[{"(", 
      RowBox[{"dt", "/", "2"}], ")"}], " ", "ni"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "4"}]}], "]"}], " ", "Y1"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "4"}]}], "]"}], " ", "Y2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"nTau", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nTau", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], "dt"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", "dt"}], "]"}], "Y3"}]}]}], ",", "ntmp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nCN", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nii", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"LR", " ", 
        RowBox[{"dt", "/", "4"}]}]}], ")"}], "nCN"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "4"}]}], "]"}], "Y4"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"nCN", "+", 
    RowBox[{"LR", " ", 
     RowBox[{"(", 
      RowBox[{"dt", "/", "2"}], ")"}], " ", "nii"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "4"}]}], "]"}], " ", "Y4"}], "+", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"KRsq", " ", 
       RowBox[{"dt", "/", "4"}]}], "]"}], " ", "Y5"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676856611018194*^9, 3.676856658273159*^9}, {
  3.676856707394285*^9, 3.6768567173240337`*^9}, {3.676856822922957*^9, 
  3.676856865179654*^9}, {3.676856939242077*^9, 3.6768569611788597`*^9}, {
  3.676857003842264*^9, 3.676857176314321*^9}, {3.676928479940814*^9, 
  3.676928481460808*^9}, {3.676928661676836*^9, 3.676928676405661*^9}, {
  3.676928719134099*^9, 3.6769287423947763`*^9}, {3.67692883844436*^9, 
  3.676928965111622*^9}, {3.676929059059813*^9, 3.6769290728488626`*^9}, {
  3.676929145504756*^9, 3.676929146800602*^9}, {3.6769292679129257`*^9, 
  3.6769292772422037`*^9}, {3.6769294263517523`*^9, 3.676929470669805*^9}, {
  3.676929522477104*^9, 3.676929585278696*^9}, {3.6769297315875387`*^9, 
  3.676929809254117*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y4"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y5"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6768581695689096`*^9, 3.676858260563334*^9}, {
  3.676858291739839*^9, 3.67685840704379*^9}, {3.676858463790758*^9, 
  3.676858472555743*^9}, {3.676929122252254*^9, 3.676929124497693*^9}, {
  3.676929698980308*^9, 3.676929701007976*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676858170367095*^9, {3.676858215448216*^9, 3.676858261415182*^9}, {
   3.6768582946406517`*^9, 3.676858314325313*^9}, {3.676858345319631*^9, 
   3.676858362736171*^9}, {3.67685839692916*^9, 3.6768584074587097`*^9}, {
   3.6768584461808043`*^9, 3.676858472974884*^9}, 3.676859398604629*^9, 
   3.676859770684967*^9, 3.676899709575193*^9, 3.67692005325539*^9, 
   3.6769275117988*^9, 3.676928490686923*^9, 3.676928533206341*^9, {
   3.676929125699194*^9, 3.676929149123863*^9}, 3.67692921244718*^9, 
   3.676929293452232*^9, {3.676929684139945*^9, 3.6769297016572313`*^9}, {
   3.676929787071683*^9, 3.67692981133147*^9}, 3.67692995985844*^9, 
   3.6770953385629787`*^9, 3.677111213749185*^9, 3.6772621398324633`*^9, 
   3.677272137380484*^9, 3.677273337195698*^9, 3.6772740832969313`*^9, 
   3.677590683656704*^9, 3.677851302277069*^9, 3.677851713601901*^9, 
   3.677852869404217*^9, 3.677853064232321*^9, {3.6778532136718493`*^9, 
   3.677853228512452*^9}, 3.6778586293921967`*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676858170367095*^9, {3.676858215448216*^9, 3.676858261415182*^9}, {
   3.6768582946406517`*^9, 3.676858314325313*^9}, {3.676858345319631*^9, 
   3.676858362736171*^9}, {3.67685839692916*^9, 3.6768584074587097`*^9}, {
   3.6768584461808043`*^9, 3.676858472974884*^9}, 3.676859398604629*^9, 
   3.676859770684967*^9, 3.676899709575193*^9, 3.67692005325539*^9, 
   3.6769275117988*^9, 3.676928490686923*^9, 3.676928533206341*^9, {
   3.676929125699194*^9, 3.676929149123863*^9}, 3.67692921244718*^9, 
   3.676929293452232*^9, {3.676929684139945*^9, 3.6769297016572313`*^9}, {
   3.676929787071683*^9, 3.67692981133147*^9}, 3.67692995985844*^9, 
   3.6770953385629787`*^9, 3.677111213749185*^9, 3.6772621398324633`*^9, 
   3.677272137380484*^9, 3.677273337195698*^9, 3.6772740832969313`*^9, 
   3.677590683656704*^9, 3.677851302277069*^9, 3.677851713601901*^9, 
   3.677852869404217*^9, 3.677853064232321*^9, {3.6778532136718493`*^9, 
   3.677853228512452*^9}, 3.677858629539887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkTau2CNTau2", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676859779315846*^9, 3.676859788709219*^9}, {
  3.67692930474852*^9, 3.676929309953603*^9}, {3.676929963564942*^9, 
  3.676929970223667*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "nb"}], " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"4", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "+", 
       RowBox[{"4", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"2", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}], "+", 
       RowBox[{"2", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"8", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 4, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 8] (
      1 + $CellContext`xi^2)^(-2) (-$CellContext`nb $CellContext`r^2 \
$CellContext`xi^2 + C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 
     4 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 + 
     4 C $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 
     2 $CellContext`nb $CellContext`r^2 $CellContext`xi^6 + 
     2 C $CellContext`nb $CellContext`r^2 $CellContext`xi^6)}, 4, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859789741712*^9, 3.676899711189324*^9, 3.6769200540828037`*^9, 
   3.676927512730847*^9, 3.676928491451442*^9, 3.676928535246999*^9, {
   3.676929296802359*^9, 3.676929310909436*^9}, 3.676929814056075*^9, 
   3.67692997150976*^9, 3.67709533974391*^9, 3.67711121488386*^9, 
   3.677262140893292*^9, 3.67727213848103*^9, 3.677273338165195*^9, 
   3.677274085057149*^9, 3.6775906851701393`*^9, 3.677851304012933*^9, 
   3.67785171562366*^9, 3.67785286998628*^9, 3.677853064786392*^9, {
   3.6778532144635067`*^9, 3.677853229765634*^9}, 3.677858630034954*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Unsplitting: Implicit Midpoint with SSA (Midpoint from Backward Euler)\
\>", "Subsection",
 CellChangeTimes->{{3.67692857248108*^9, 3.676928599305687*^9}, {
  3.6769299768196507`*^9, 3.6769299791073503`*^9}, {3.677273338857986*^9, 
  3.677273340409246*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", " ", "ntmp", " ", 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y1"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ni", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n0", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], "dt"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y1"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y2"}], "+", 
      RowBox[{"R", "[", 
       RowBox[{"ni", ",", "dt", ",", "Y3"}], "]"}]}]}], ",", "ntmp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676859419130168*^9, 3.676859434488058*^9}, {
  3.676929984433872*^9, 3.676929985111121*^9}, {3.677262142781988*^9, 
  3.677262146506667*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859450412985*^9, 3.676859829471396*^9, 3.676899717181428*^9, 
   3.676920058044928*^9, 3.676927518258623*^9, 3.676929987511129*^9, 
   3.6770953435291233`*^9, 3.677111220065475*^9, 3.6772621479391413`*^9, 
   3.677272141332327*^9, 3.677273343212495*^9, 3.67727408808429*^9, 
   3.677590688068943*^9, 3.677851307611709*^9, 3.677851719294804*^9, 
   3.677852872031765*^9, 3.677853065654911*^9, {3.67785321573431*^9, 
   3.6778532306657953`*^9}, 3.677858630343954*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859450412985*^9, 3.676859829471396*^9, 3.676899717181428*^9, 
   3.676920058044928*^9, 3.676927518258623*^9, 3.676929987511129*^9, 
   3.6770953435291233`*^9, 3.677111220065475*^9, 3.6772621479391413`*^9, 
   3.677272141332327*^9, 3.677273343212495*^9, 3.67727408808429*^9, 
   3.677590688068943*^9, 3.677851307611709*^9, 3.677851719294804*^9, 
   3.677852872031765*^9, 3.677853065654911*^9, {3.67785321573431*^9, 
   3.6778532306657953`*^9}, 3.6778586303485203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkImBEMidSSA", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676859846131222*^9, 3.676859850152195*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"2", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"3", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"3", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"6", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 4, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 6] (1 + $CellContext`xi^2)^(-2) (
     2 $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 2 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 + 
     3 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 3 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^4)}, 4, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859851564975*^9, 3.6768997173830853`*^9, 3.6769200597227488`*^9, 
   3.6769275191878633`*^9, 3.676929990910482*^9, 3.677095346609828*^9, 
   3.677111221162269*^9, 3.677262149189237*^9, 3.677272142415357*^9, 
   3.6772733441052094`*^9, 3.677274089606462*^9, 3.677590689348844*^9, 
   3.6778513092723837`*^9, 3.6778517210303926`*^9, 3.677852872284368*^9, 
   3.6778530667642307`*^9, {3.677853215919566*^9, 3.6778532308359756`*^9}, 
   3.6778586304861803`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unsplitting: Implicit Midpoint with SSA (Midpoint from CN)", \
"Subsection",
 CellChangeTimes->{{3.6769300038909903`*^9, 3.6769300181950083`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n0", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y1"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ni", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n0", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], "dt"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y1"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y2"}], "+", 
      RowBox[{"R", "[", 
       RowBox[{"ni", ",", "dt", ",", "Y3"}], "]"}]}]}], ",", "ntmp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676858953628632*^9, 3.676859097774984*^9}, {
  3.6768591867957697`*^9, 3.67685932816588*^9}, {3.676859362437269*^9, 
  3.6768593663064823`*^9}, {3.676899761813778*^9, 3.676899762531798*^9}, {
  3.676930025483293*^9, 3.676930026752172*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859338519238*^9, 3.6768594036177673`*^9, 3.676859864110222*^9, 
   3.676899719665042*^9, 3.6769200629473057`*^9, 3.676927521494918*^9, 
   3.67693007510891*^9, 3.6770953507467537`*^9, 3.677111224582898*^9, 
   3.677262151782357*^9, 3.677272146514884*^9, 3.67727334840938*^9, 
   3.6772740928174667`*^9, 3.677590692159914*^9, 3.677851312507677*^9, 
   3.67785172521096*^9, 3.6778528748006573`*^9, 3.67785306718311*^9, {
   3.677853216132956*^9, 3.6778532319846563`*^9}, 3.677858630806044*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859338519238*^9, 3.6768594036177673`*^9, 3.676859864110222*^9, 
   3.676899719665042*^9, 3.6769200629473057`*^9, 3.676927521494918*^9, 
   3.67693007510891*^9, 3.6770953507467537`*^9, 3.677111224582898*^9, 
   3.677262151782357*^9, 3.677272146514884*^9, 3.67727334840938*^9, 
   3.6772740928174667`*^9, 3.677590692159914*^9, 3.677851312507677*^9, 
   3.67785172521096*^9, 3.6778528748006573`*^9, 3.67785306718311*^9, {
   3.677853216132956*^9, 3.6778532319846563`*^9}, 3.6778586308135767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkImCNMidSSA", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676859352133497*^9, 3.67685938513234*^9}, {
  3.676859549091227*^9, 3.676859620181242*^9}, {3.676859652989935*^9, 
  3.676859722802052*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"8", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"6", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"9", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"3", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"24", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 4, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 24] (1 + $CellContext`xi^2)^(-2) (
     8 $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 8 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 + 
     6 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 9 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 
     3 $CellContext`nb $CellContext`r^2 $CellContext`xi^6)}, 4, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676859661828795*^9, 3.676859716655444*^9, 3.6768598726727457`*^9, 
   3.6768997208851633`*^9, 3.6769200638078747`*^9, 3.676927523495903*^9, 
   3.676930076426095*^9, 3.677095352231023*^9, 3.677111225845806*^9, 
   3.6772621530246162`*^9, 3.677272147644684*^9, 3.677273349313281*^9, 
   3.677274094596445*^9, 3.677590693429181*^9, 3.677851314725739*^9, 
   3.6778517268909893`*^9, 3.677852875153051*^9, 3.6778530673831472`*^9, {
   3.677853216629177*^9, 3.677853232846444*^9}, 3.677858631127303*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Unsplitting: Implicit Midpoint with Tau-Leaping (Midpoint from Backward Euler)\
\>", "Subsection",
 CellChangeTimes->{{3.676930042107429*^9, 3.676930067659585*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", " ", "ntmp", " ", 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y1"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{"n0", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y2"}], "]"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ni", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n0", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], "dt"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y1"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y3"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{"n0", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y2"}], "]"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "ni"}], "-", "n0"}], ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y4"}], "]"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676899725055579*^9, 3.6768997833529587`*^9}, {
  3.6768998635195513`*^9, 3.676899974747117*^9}, {3.676900021894807*^9, 
  3.676900027453476*^9}, {3.676930083324798*^9, 3.676930083858492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y4"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676900068647128*^9, 3.676900071085278*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.6769000719312687`*^9, 3.676920075834107*^9, 3.67692752603552*^9, 
   3.67693008606393*^9, 3.677095359864698*^9, 3.677111228863455*^9, 
   3.6772621554753847`*^9, 3.67727215102253*^9, 3.677273351556786*^9, 
   3.677274101887019*^9, 3.677590696454535*^9, 3.6778513220685377`*^9, 
   3.677851730592568*^9, 3.677852875574772*^9, 3.6778530675811357`*^9, {
   3.677853216827655*^9, 3.677853233351268*^9}, 3.677858631361641*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.6769000719312687`*^9, 3.676920075834107*^9, 3.67692752603552*^9, 
   3.67693008606393*^9, 3.677095359864698*^9, 3.677111228863455*^9, 
   3.6772621554753847`*^9, 3.67727215102253*^9, 3.677273351556786*^9, 
   3.677274101887019*^9, 3.677590696454535*^9, 3.6778513220685377`*^9, 
   3.677851730592568*^9, 3.677852875574772*^9, 3.6778530675811357`*^9, {
   3.677853216827655*^9, 3.677853233351268*^9}, 3.677858631370433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "3"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkImBEMidTau", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676900097916566*^9, 3.676900121573065*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"C", " ", "nb", " ", 
        SuperscriptBox["r", "3"]}], "+", 
       RowBox[{"nb", " ", 
        SuperscriptBox["r", "3"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"C", " ", "nb", " ", 
        SuperscriptBox["r", "3"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"nb", " ", 
        SuperscriptBox["r", "3"], " ", 
        SuperscriptBox["xi", "4"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "3"]}], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["xi", "2"]}], ")"}]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"7", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 6, 7, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 8] (1 + $CellContext`xi^2)^(-1) (
     C $CellContext`nb $CellContext`r^3 + $CellContext`nb $CellContext`r^3 \
$CellContext`xi^2 - 
     C $CellContext`nb $CellContext`r^3 $CellContext`xi^2 - $CellContext`nb \
$CellContext`r^3 $CellContext`xi^4)}, 6, 7, 2],
  Editable->False]], "Output",
 CellChangeTimes->{{3.676900110793763*^9, 3.67690012209859*^9}, 
   3.676920076858107*^9, 3.676927531495696*^9, 3.676930087515847*^9, 
   3.677095363891622*^9, 3.677111230509495*^9, 3.677262156562786*^9, 
   3.677272152113317*^9, 3.677273352623693*^9, 3.677274111048366*^9, 
   3.677590698057584*^9, 3.677851322501347*^9, 3.6778517323048277`*^9, 
   3.677852875979608*^9, 3.677853067754737*^9, {3.677853216997283*^9, 
   3.6778532335022917`*^9}, 3.677858631564159*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Unsplitting: Implicit Midpoint with Tau-Leaping (Midpoint from CN)\
\>", "Subsection",
 CellChangeTimes->{{3.6769300994666023`*^9, 3.6769301146909313`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n0", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], " ", 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y1"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{"n0", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y2"}], "]"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ni", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n0", "/", "2"}], "+", 
         RowBox[{"ntmp", "/", "2"}]}], ")"}], "dt"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y1"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y3"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{"n0", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y2"}], "]"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "ni"}], "-", "n0"}], ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y4"}], "]"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676900163729762*^9, 3.6769001785509033`*^9}, {
  3.676930120355679*^9, 3.6769301209290543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y4"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676920078539172*^9, 3.676927533655224*^9, 3.676930124013831*^9, 
   3.677095366648489*^9, 3.677111233337039*^9, 3.6772621592117453`*^9, 
   3.6772721558874483`*^9, 3.6772733553873997`*^9, 3.6772741144778748`*^9, 
   3.6775907016794987`*^9, 3.6778513284573812`*^9, 3.677851735601589*^9, 
   3.677852876530864*^9, 3.677853068056435*^9, {3.677853217204352*^9, 
   3.677853233679139*^9}, 3.677858631897786*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676920078539172*^9, 3.676927533655224*^9, 3.676930124013831*^9, 
   3.677095366648489*^9, 3.677111233337039*^9, 3.6772621592117453`*^9, 
   3.6772721558874483`*^9, 3.6772733553873997`*^9, 3.6772741144778748`*^9, 
   3.6775907016794987`*^9, 3.6778513284573812`*^9, 3.677851735601589*^9, 
   3.677852876530864*^9, 3.677853068056435*^9, {3.677853217204352*^9, 
   3.677853233679139*^9}, 3.67785863190475*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkImCNMidTau", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676900241236127*^9, 3.676900251892411*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "C"}], " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["xi", "2"]}], ")"}]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 4, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 8] (1 + $CellContext`xi^2)^(-1) (-
      C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - $CellContext`nb \
$CellContext`r^2 $CellContext`xi^4)}, 4, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.676900199306409*^9, {3.676900245090989*^9, 3.676900252537497*^9}, 
   3.676920080846574*^9, 3.676927534921482*^9, 3.6769301254280777`*^9, 
   3.6770953676927567`*^9, 3.6771112351365757`*^9, 3.677262160304184*^9, 
   3.6772721570874243`*^9, 3.677273356898076*^9, 3.677274115634698*^9, 
   3.677590702866596*^9, 3.67785133009334*^9, 3.6778517371106043`*^9, 
   3.6778528768151073`*^9, 3.677853068243454*^9, {3.677853217623395*^9, 
   3.677853233830227*^9}, 3.677858632114544*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unsplitting: Explicit Midpoint with SSA", "Subsection",
 CellChangeTimes->{{3.6771102381485367`*^9, 3.677110264652858*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", " ", "n0", " ", 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y1"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nii", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", " ", "n0", " ", 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y1"}], "+", 
      RowBox[{"R", "[", 
       RowBox[{"nii", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y2"}], "]"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ni", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", " ", "ni", " ", "dt"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y1"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y3"}], "+", 
      RowBox[{"R", "[", 
       RowBox[{"nii", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y2"}], "]"}], "+", 
      RowBox[{"R", "[", 
       RowBox[{"ni", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y4"}], "]"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.67711032808595*^9, 3.677110407413402*^9}, {
  3.6771106075357113`*^9, 3.677110644625883*^9}, {3.677110732811564*^9, 
  3.677110732945537*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y4"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.677110696717971*^9, 3.6771107346981077`*^9, 3.677111237701392*^9, 
   3.677262162991604*^9, 3.67727216073319*^9, 3.677273359768243*^9, 
   3.677274120164844*^9, 3.67759070609063*^9, 3.677851333294784*^9, 
   3.677851741266326*^9, 3.6778528771978903`*^9, 3.677853068571108*^9, {
   3.677853217840085*^9, 3.677853233997903*^9}, 3.677858632395823*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.677110696717971*^9, 3.6771107346981077`*^9, 3.677111237701392*^9, 
   3.677262162991604*^9, 3.67727216073319*^9, 3.677273359768243*^9, 
   3.677274120164844*^9, 3.67759070609063*^9, 3.677851333294784*^9, 
   3.677851741266326*^9, 3.6778528771978903`*^9, 3.677853068571108*^9, {
   3.677853217840085*^9, 3.677853233997903*^9}, 3.677858632405542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkExMidSSA", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.677110838436388*^9, 3.6771108410415897`*^9}, 
   3.677111256728682*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"5", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"15", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"6", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "+", 
       RowBox[{"6", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"24", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 4, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 24] (1 + $CellContext`xi^2)^(-2) (
     8 $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 5 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 + 
     15 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 6 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^4 + 
     6 $CellContext`nb $CellContext`r^2 $CellContext`xi^6)}, 4, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.677110746344184*^9, 3.677110842181826*^9, {3.677111238634036*^9, 
   3.677111257143443*^9}, 3.677262164851729*^9, 3.677272161721998*^9, 
   3.677273361165296*^9, 3.677274121250489*^9, 3.6775907075719223`*^9, 
   3.677851336644374*^9, 3.67785174292848*^9, 3.677852877584745*^9, 
   3.677853068734084*^9, {3.677853218013026*^9, 3.6778532341685467`*^9}, 
   3.677858632811386*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unsplitting: Explicit Midpoint with Tau-Leaping", "Subsection",
 CellChangeTimes->{{3.6771102381485367`*^9, 3.677110264652858*^9}, {
  3.677110961009911*^9, 3.677110964688962*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", " ", "n0", " ", 
       RowBox[{"dt", "/", "2"}]}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], " ", "Y1"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{"n0", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y2"}], "]"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ni", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ntmp", "\[Equal]", 
     RowBox[{"n0", "+", 
      RowBox[{"LD", " ", "ni", " ", "dt"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y1"}], "+", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"KDsq", " ", 
         RowBox[{"dt", "/", "2"}]}], "]"}], "Y3"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{"n0", ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y2"}], "]"}], "+", 
      RowBox[{"R1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "ni"}], "-", "n0"}], ",", 
        RowBox[{"dt", "/", "2"}], ",", "Y4"}], "]"}]}]}], ",", "ntmp"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"ntmp", "/.", 
    RowBox[{"First", "[", "%", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.67711032808595*^9, 3.677110407413402*^9}, {
  3.6771106075357113`*^9, 3.677110644625883*^9}, {3.677110732811564*^9, 
  3.677110732945537*^9}, {3.677110976740717*^9, 3.677111009181218*^9}, {
  3.677111132738295*^9, 3.677111139073618*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y4"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 3, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.677110696717971*^9, 3.6771107346981077`*^9, 3.67711101082099*^9, 
   3.677111141737524*^9, 3.677111241858774*^9, 3.677262167662754*^9, 
   3.6772721647979803`*^9, 3.6772733639873247`*^9, 3.6772741246338167`*^9, 
   3.677590710867978*^9, 3.677851342121188*^9, 3.677851746262356*^9, 
   3.677852877854594*^9, 3.6778530690514317`*^9, {3.677853218562613*^9, 
   3.677853234785304*^9}, 3.6778586332384157`*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "dt", "]"}], "3"],
  SeriesData[$CellContext`dt, 0, {}, 6, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.677110696717971*^9, 3.6771107346981077`*^9, 3.67711101082099*^9, 
   3.677111141737524*^9, 3.677111241858774*^9, 3.677262167662754*^9, 
   3.6772721647979803`*^9, 3.6772733639873247`*^9, 3.6772741246338167`*^9, 
   3.677590710867978*^9, 3.677851342121188*^9, 3.677851746262356*^9, 
   3.677852877854594*^9, 3.6778530690514317`*^9, {3.677853218562613*^9, 
   3.677853234785304*^9}, 3.677858633246402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "3"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkExMidTau", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.677110838436388*^9, 3.6771108410415897`*^9}, {
   3.6771111528282547`*^9, 3.677111158633148*^9}, 3.677111250408947*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"C", " ", "nb", " ", 
       SuperscriptBox["r", "3"]}], "+", 
      RowBox[{"nb", " ", 
       SuperscriptBox["r", "3"], " ", 
       SuperscriptBox["xi", "2"]}], "+", 
      RowBox[{"2", " ", "C", " ", "nb", " ", 
       SuperscriptBox["r", "3"], " ", 
       SuperscriptBox["xi", "2"]}], "+", 
      RowBox[{"2", " ", "nb", " ", 
       SuperscriptBox["r", "3"], " ", 
       SuperscriptBox["xi", "4"]}], "+", 
      RowBox[{"C", " ", "nb", " ", 
       SuperscriptBox["r", "3"], " ", 
       SuperscriptBox["xi", "4"]}], "+", 
      RowBox[{"nb", " ", 
       SuperscriptBox["r", "3"], " ", 
       SuperscriptBox["xi", "6"]}]}], ")"}], " ", 
    SuperscriptBox["dt", "3"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"7", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 6, 7, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 8] (
     C $CellContext`nb $CellContext`r^3 + $CellContext`nb $CellContext`r^3 \
$CellContext`xi^2 + 2 C $CellContext`nb $CellContext`r^3 $CellContext`xi^2 + 
     2 $CellContext`nb $CellContext`r^3 $CellContext`xi^4 + 
     C $CellContext`nb $CellContext`r^3 $CellContext`xi^4 + $CellContext`nb \
$CellContext`r^3 $CellContext`xi^6)}, 6, 7, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.677110746344184*^9, 3.677110842181826*^9, {3.677111143211446*^9, 
   3.677111159063876*^9}, {3.677111242837331*^9, 3.677111251201468*^9}, 
   3.67726216862929*^9, 3.67727216580125*^9, 3.677273365170492*^9, 
   3.677274125663602*^9, 3.6775907130023117`*^9, 3.677851343850668*^9, 
   3.677851747676037*^9, 3.6778528780335913`*^9, 3.677853069343234*^9, {
   3.6778532187909203`*^9, 3.67785323481205*^9}, 3.677858633482688*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting: Multinomial/2 + SSA + Multinomial/2", "Subsection",
 CellChangeTimes->{{3.677254143728085*^9, 3.6772541668237057`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nMN", "=", 
   RowBox[{"n0", "+", 
    RowBox[{"Dmn", "[", 
     RowBox[{"n0", ",", 
      RowBox[{"dt", "/", "2"}], ",", "Y1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSSA", "=", 
   RowBox[{"nMN", "+", 
    RowBox[{"R", "[", 
     RowBox[{"nMN", ",", "dt", ",", "Y2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"nSSA", "+", 
    RowBox[{"Dmn", "[", 
     RowBox[{"nSSA", ",", 
      RowBox[{"dt", "/", "2"}], ",", "Y3"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6772541719304*^9, 3.67725428498986*^9}, {
  3.677254485743132*^9, 3.677254489116399*^9}, {3.677255370887344*^9, 
  3.677255460223654*^9}, {3.677255665840391*^9, 3.677255671094696*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["xi", "4"]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], "3"],
    SeriesData[$CellContext`dt, 0, {}, 2, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[-1, 4] $CellContext`g^2 $CellContext`r^2 $CellContext`xi^4}, 2, 3,
    1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.6772543037823963`*^9, 3.677255482913142*^9, 3.6772555847976713`*^9, 
   3.677255672781464*^9, 3.6772575346777897`*^9, 3.677261899431156*^9, 
   3.6772721702832108`*^9, 3.6772733772072887`*^9, 3.677274129718643*^9, 
   3.677590716064557*^9, 3.677851348154251*^9, 3.677851751902493*^9, 
   3.677852878275568*^9, 3.677853069591524*^9, {3.6778532190121*^9, 
   3.677853235694803*^9}, 3.6778586337537317`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["g", "2"], " ", "nb", " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["xi", "4"], " ", 
    SuperscriptBox["dt", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], "3"],
    SeriesData[$CellContext`dt, 0, {}, 4, 6, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 
      2] $CellContext`g^2 $CellContext`nb $CellContext`r^2 $CellContext`xi^4},
    4, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.6772543037823963`*^9, 3.677255482913142*^9, 3.6772555847976713`*^9, 
   3.677255672781464*^9, 3.6772575346777897`*^9, 3.677261899431156*^9, 
   3.6772721702832108`*^9, 3.6772733772072887`*^9, 3.677274129718643*^9, 
   3.677590716064557*^9, 3.677851348154251*^9, 3.677851751902493*^9, 
   3.677852878275568*^9, 3.677853069591524*^9, {3.6778532190121*^9, 
   3.677853235694803*^9}, 3.677858633762439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkMN2SSAMN2", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.677254583375305*^9, 3.6772545899998426`*^9}, {
  3.677273392066147*^9, 3.6772734029762793`*^9}, {3.677274136906703*^9, 
  3.677274137234783*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nb", " ", "r", " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"C", " ", "nb", " ", "r", " ", 
        SuperscriptBox["xi", "4"]}]}], ")"}], " ", "dt"}], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"16", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"16", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"40", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"40", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "+", 
       RowBox[{"36", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}], "-", 
       RowBox[{"36", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}], "+", 
       RowBox[{"9", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "8"]}], "-", 
       RowBox[{"9", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "8"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"48", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "3"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 2, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 4] (
      1 + $CellContext`xi^2)^(-2) ($CellContext`nb $CellContext`r \
$CellContext`xi^4 - C $CellContext`nb $CellContext`r $CellContext`xi^4), 0, 
    Rational[1, 48] (1 + $CellContext`xi^2)^(-3) (
     16 $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 16 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 + 
     40 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 40 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^4 + 
     36 $CellContext`nb $CellContext`r^2 $CellContext`xi^6 - 36 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^6 + 
     9 $CellContext`nb $CellContext`r^2 $CellContext`xi^8 - 9 
     C $CellContext`nb $CellContext`r^2 $CellContext`xi^8)}, 2, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.677254590650538*^9, 3.677261900614602*^9, 3.677272172103878*^9, {
   3.677273380326977*^9, 3.677273404164734*^9}, 3.67727413798591*^9, 
   3.677590717536538*^9, 3.677851349975664*^9, 3.6778517539310293`*^9, 
   3.677852878671659*^9, 3.677853069761188*^9, {3.677853219320941*^9, 
   3.677853236224901*^9}, 3.67785863395539*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting: SSA/2 + Multinomial + SSA/2", "Subsection",
 CellChangeTimes->{{3.677254143728085*^9, 3.6772541668237057`*^9}, {
  3.6772619212846403`*^9, 3.6772619351808653`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nSSA", "=", 
   RowBox[{"n0", "+", 
    RowBox[{"R", "[", 
     RowBox[{"n0", ",", 
      RowBox[{"dt", "/", "2"}], ",", "Y1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nMN", "=", 
   RowBox[{"nSSA", "+", 
    RowBox[{"Dmn", "[", 
     RowBox[{"nSSA", ",", "dt", ",", "Y2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"nMN", "+", 
    RowBox[{"R", "[", 
     RowBox[{"nMN", ",", 
      RowBox[{"dt", "/", "2"}], ",", "Y3"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6772541719304*^9, 3.67725428498986*^9}, {
  3.677254485743132*^9, 3.677254489116399*^9}, {3.677255370887344*^9, 
  3.677255460223654*^9}, {3.677255665840391*^9, 3.677255671094696*^9}, {
  3.677261952426943*^9, 3.677261981155158*^9}, {3.677262026379122*^9, 
  3.677262056067361*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"n1", ",", "n0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nsq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y1"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y2"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"n1", ",", "Y3"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"M", "-", "Mex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Nsq", "-", "Nsqex"}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["xi", "4"]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], "3"],
    SeriesData[$CellContext`dt, 0, {}, 2, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[-1, 2] $CellContext`g^2 $CellContext`r^2 $CellContext`xi^4}, 2, 3,
    1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.6772543037823963`*^9, 3.677255482913142*^9, 3.6772555847976713`*^9, 
   3.677255672781464*^9, 3.6772575346777897`*^9, 3.677261899431156*^9, 
   3.67726209519998*^9, 3.677272174900495*^9, 3.6772734335734386`*^9, 
   3.677274142191832*^9, 3.677590720879901*^9, 3.677851354052279*^9, 
   3.677851759894155*^9, 3.677852878937435*^9, 3.6778530700545607`*^9, {
   3.677853219763839*^9, 3.677853236579874*^9}, 3.677858634428451*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["g", "2"], " ", "nb", " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["xi", "4"], " ", 
    SuperscriptBox["dt", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], "3"],
    SeriesData[$CellContext`dt, 0, {}, 4, 6, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 
   0, {$CellContext`g^2 $CellContext`nb $CellContext`r^2 $CellContext`xi^4}, 
   4, 6, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.6772543037823963`*^9, 3.677255482913142*^9, 3.6772555847976713`*^9, 
   3.677255672781464*^9, 3.6772575346777897`*^9, 3.677261899431156*^9, 
   3.67726209519998*^9, 3.677272174900495*^9, 3.6772734335734386`*^9, 
   3.677274142191832*^9, 3.677590720879901*^9, 3.677851354052279*^9, 
   3.677851759894155*^9, 3.677852878937435*^9, 3.6778530700545607`*^9, {
   3.677853219763839*^9, 3.677853236579874*^9}, 3.677858634437285*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Nsq", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"M", "^", "2"}]}], ")"}]}], "-", 
     RowBox[{"SkExact", "[", "xi", "]"}]}], "/.", 
    RowBox[{"g", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"dt", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SkSSA2MNSSA2", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Nsq", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"M", "^", "2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"a", "/", "r"}]}], ",", 
      RowBox[{"g", "\[Rule]", 
       RowBox[{"G", "[", "xi", "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.677254583375305*^9, 3.6772545899998426`*^9}, {
  3.677262100670043*^9, 3.677262105854177*^9}, {3.677273415434881*^9, 
  3.677273428385531*^9}, {3.677274146919787*^9, 3.677274147413389*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nb", " ", "r", " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"C", " ", "nb", " ", "r", " ", 
        SuperscriptBox["xi", "4"]}]}], ")"}], " ", "dt"}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "+", 
       RowBox[{"2", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "2"]}], "-", 
       RowBox[{"8", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "+", 
       RowBox[{"8", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "4"]}], "-", 
       RowBox[{"6", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}], "+", 
       RowBox[{"6", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "6"]}], "-", 
       RowBox[{"3", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "8"]}], "+", 
       RowBox[{"3", " ", "C", " ", "nb", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["xi", "8"]}]}], ")"}], " ", 
     SuperscriptBox["dt", "2"]}], 
    RowBox[{"12", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["xi", "2"]}], ")"}], "3"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "dt", "]"}], 
     RowBox[{"5", "/", "2"}]],
    SeriesData[$CellContext`dt, 0, {}, 2, 5, 2],
    Editable->False]}],
  SeriesData[$CellContext`dt, 0, {
   Rational[1, 2] (
      1 + $CellContext`xi^2)^(-2) ($CellContext`nb $CellContext`r \
$CellContext`xi^4 - C $CellContext`nb $CellContext`r $CellContext`xi^4), 0, 
    Rational[1, 12] (
      1 + $CellContext`xi^2)^(-3) ((-2) $CellContext`nb $CellContext`r^2 \
$CellContext`xi^2 + 2 C $CellContext`nb $CellContext`r^2 $CellContext`xi^2 - 
     8 $CellContext`nb $CellContext`r^2 $CellContext`xi^4 + 
     8 C $CellContext`nb $CellContext`r^2 $CellContext`xi^4 - 
     6 $CellContext`nb $CellContext`r^2 $CellContext`xi^6 + 
     6 C $CellContext`nb $CellContext`r^2 $CellContext`xi^6 - 
     3 $CellContext`nb $CellContext`r^2 $CellContext`xi^8 + 
     3 C $CellContext`nb $CellContext`r^2 $CellContext`xi^8)}, 2, 5, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.677254590650538*^9, 3.677261900614602*^9, 3.677262106563768*^9, 
   3.677272176022542*^9, {3.6772734292476883`*^9, 3.6772734345984297`*^9}, 
   3.677274148151704*^9, 3.67759072233125*^9, 3.677851357239005*^9, 
   3.677851761831949*^9, 3.677852879140169*^9, 3.677853070529974*^9, {
   3.677853219960587*^9, 3.6778532370273113`*^9}, 3.677858634734499*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison with Simulation Result of Schlogl Monomodal", "Section",
 CellChangeTimes->{{3.676930139482914*^9, 3.67693014049361*^9}, {
  3.677852542726742*^9, 3.677852565719707*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Basically", ",", " ", 
    RowBox[{
    "you", " ", "can", " ", "change", " ", "alphaVal", " ", "and", " ", 
     "betaVal"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k10", "=", "1.5"}], ";", 
    RowBox[{"k20", "=", "0.6"}], ";", 
    RowBox[{"k30", "=", "2.05"}], ";", 
    RowBox[{"k40", "=", "2.95"}], ";", 
    RowBox[{"nbVal", "=", "1."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r0", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"k10", " ", 
           RowBox[{"n", "^", "2"}]}], "-", 
          RowBox[{"k20", " ", 
           RowBox[{"n", "^", "3"}]}], "+", "k30", "-", 
          RowBox[{"k40", " ", "n"}]}], ",", "n"}], "]"}]}], "/.", 
      RowBox[{"n", "\[Rule]", "nbVal"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G0", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k10", " ", 
          RowBox[{"n", "^", "2"}]}], "+", 
         RowBox[{"k20", " ", 
          RowBox[{"n", "^", "3"}]}], "+", "k30", "+", 
         RowBox[{"k40", " ", "n"}]}], ")"}], "/", "2"}], "/.", 
      RowBox[{"n", "\[Rule]", "nbVal"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dx", "=", "1."}], ";", 
    RowBox[{"dt", "=", "1."}], ";", 
    RowBox[{"alphaVal", "=", "0.05"}], ";", 
    RowBox[{"betaVal", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"rm", "=", 
    RowBox[{"alphaVal", "/", "r0"}]}], "\[IndentingNewLine]", 
   RowBox[{"DFick", "=", "betaVal"}], "\[IndentingNewLine]", 
   RowBox[{"CVal", "=", 
    RowBox[{
     RowBox[{"G0", "/", "nbVal"}], "/", "r0"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvePp19claa8dA33yvoDokH+nf4HohrRGm1IgfWz9
hx9lQPrsvpk/QbSASMM/EH3qcQ5LOZBO2WwgXwGkb6rcVgTR0ey+5iDaY1mR
FYgWy8x8XAmkq/6UvwTRDz7O+QiiP6lrfwLRB7a8/wuiv9Xs+weir1yOFfsE
pMsjs8VB9KuDFjoguu6QLZg2uXrNGESfZ3lvAqKfuvCVgugohpoqEG2jXFDy
GUivVvoMpt8ey60E0Xai9rUg2iZeaSqIbnluNwNES9ml2H8F0tfyP4PpzxET
okD0vjaOaBC9OOrfHBCdYcMxF0Sz8RYvBNEN+YVLQPSxexu1vgHpnStCtUE0
AKdruZE=
  "]],

Cell[BoxData["0.02857142857142857`"], "Output",
 CellChangeTimes->{{3.677596126591116*^9, 3.677596134251925*^9}, 
   3.677599737342012*^9, 3.677599820824379*^9, {3.677602042681044*^9, 
   3.677602064304604*^9}, {3.6776022358749857`*^9, 3.6776022600922403`*^9}, {
   3.677605663725281*^9, 3.677605708355277*^9}, 3.677605777802356*^9, 
   3.67760581807576*^9, 3.6776058785074387`*^9, 3.6778515128459997`*^9, 
   3.6778516439785233`*^9, 3.677851764864533*^9, 3.67785183619829*^9, 
   3.677852002865748*^9, {3.677852063809368*^9, 3.677852072109297*^9}, 
   3.6778525143635674`*^9, 3.6778525861229258`*^9, 3.677852634704932*^9, 
   3.677852904393835*^9, 3.6778532528500643`*^9, 3.677854595664201*^9, 
   3.677854632316264*^9, 3.677854668323688*^9, 3.6778546986068993`*^9, {
   3.67785488983687*^9, 3.677854914595874*^9}, 3.677858520962927*^9, 
   3.6778585949767923`*^9, 3.677858655945045*^9, 3.677859049938924*^9, {
   3.677859085860589*^9, 3.6778591082832727`*^9}, 3.677860190533317*^9}],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{{3.677596126591116*^9, 3.677596134251925*^9}, 
   3.677599737342012*^9, 3.677599820824379*^9, {3.677602042681044*^9, 
   3.677602064304604*^9}, {3.6776022358749857`*^9, 3.6776022600922403`*^9}, {
   3.677605663725281*^9, 3.677605708355277*^9}, 3.677605777802356*^9, 
   3.67760581807576*^9, 3.6776058785074387`*^9, 3.6778515128459997`*^9, 
   3.6778516439785233`*^9, 3.677851764864533*^9, 3.67785183619829*^9, 
   3.677852002865748*^9, {3.677852063809368*^9, 3.677852072109297*^9}, 
   3.6778525143635674`*^9, 3.6778525861229258`*^9, 3.677852634704932*^9, 
   3.677852904393835*^9, 3.6778532528500643`*^9, 3.677854595664201*^9, 
   3.677854632316264*^9, 3.677854668323688*^9, 3.6778546986068993`*^9, {
   3.67785488983687*^9, 3.677854914595874*^9}, 3.677858520962927*^9, 
   3.6778585949767923`*^9, 3.677858655945045*^9, 3.677859049938924*^9, {
   3.677859085860589*^9, 3.6778591082832727`*^9}, 3.6778601905401154`*^9}],

Cell[BoxData["2.0285714285714285`"], "Output",
 CellChangeTimes->{{3.677596126591116*^9, 3.677596134251925*^9}, 
   3.677599737342012*^9, 3.677599820824379*^9, {3.677602042681044*^9, 
   3.677602064304604*^9}, {3.6776022358749857`*^9, 3.6776022600922403`*^9}, {
   3.677605663725281*^9, 3.677605708355277*^9}, 3.677605777802356*^9, 
   3.67760581807576*^9, 3.6776058785074387`*^9, 3.6778515128459997`*^9, 
   3.6778516439785233`*^9, 3.677851764864533*^9, 3.67785183619829*^9, 
   3.677852002865748*^9, {3.677852063809368*^9, 3.677852072109297*^9}, 
   3.6778525143635674`*^9, 3.6778525861229258`*^9, 3.677852634704932*^9, 
   3.677852904393835*^9, 3.6778532528500643`*^9, 3.677854595664201*^9, 
   3.677854632316264*^9, 3.677854668323688*^9, 3.6778546986068993`*^9, {
   3.67785488983687*^9, 3.677854914595874*^9}, 3.677858520962927*^9, 
   3.6778585949767923`*^9, 3.677858655945045*^9, 3.677859049938924*^9, {
   3.677859085860589*^9, 3.6778591082832727`*^9}, 3.677860190546043*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S0", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkExact", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkCN2SSACN2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkSSA2CNSSA2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S3", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkCN2TauCN2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S4", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkTau2CNTau2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S5", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkImBEMidSSA", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S6", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkImCNMidSSA", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S7", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkImBEMidTau", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S8", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkImCNMidTau", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S9", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkExMidSSA", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S10", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkExMidTau", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S11", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkMN2SSAMN2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S12", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkSSA2MNSSA2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6610957764890614`*^9, 3.661095818429022*^9}, {
  3.66128827077887*^9, 3.6612883888251534`*^9}, {3.661288444003646*^9, 
  3.6612884446319*^9}, {3.661288490696558*^9, 3.661288491835446*^9}, {
  3.6612885469207897`*^9, 3.661288581756008*^9}, {3.676859978368185*^9, 
  3.676860137282445*^9}, {3.6768602315032463`*^9, 3.6768602414392347`*^9}, {
  3.6769003125397663`*^9, 3.676900330267519*^9}, {3.676930172773868*^9, 
  3.6769302244315033`*^9}, {3.676930269026059*^9, 3.676930285499928*^9}, {
  3.677111270927894*^9, 3.677111304392095*^9}, {3.677262192904901*^9, 
  3.677262220551339*^9}, {3.6772734436194677`*^9, 3.677273452674505*^9}, {
  3.677595411866721*^9, 3.677595412897931*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xiMax", "[", 
   RowBox[{"alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"beta", "/", "alpha"}], "]"}], "Pi"}]}]], "Input",
 CellChangeTimes->{3.676860142985474*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Choose", " ", "a", " ", "scheme", " ", "you", " ", "want", " ", "to", " ",
     "calculate"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Check", " ", "dt"}], ",", "dx", ",", "Ncell"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Ncell", "=", "512"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", " ", 
          RowBox[{
           RowBox[{"xiMax", "[", 
            RowBox[{"alphaVal", ",", "betaVal"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"Ncell", "/", "2"}], ")"}]}]}], ",", 
         RowBox[{"S10", "[", 
          RowBox[{
           RowBox[{"i", " ", 
            RowBox[{
             RowBox[{"xiMax", "[", 
              RowBox[{"alphaVal", ",", "betaVal"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"Ncell", "/", "2"}], ")"}]}]}], ",", "alphaVal", ",", 
           "betaVal"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"-", "Ncell"}], "/", "2"}], ",", 
         RowBox[{
          RowBox[{"Ncell", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graph1", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"res", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.8", " ", "nbVal"}], ",", 
          RowBox[{"1.05", " ", "nbVal", " ", "CVal"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graph2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SkExact", "[", "xi", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
          RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", 
         RowBox[{"-", 
          RowBox[{"xiMax", "[", 
           RowBox[{"alphaVal", ",", "betaVal"}], "]"}]}], ",", 
         RowBox[{"xiMax", "[", 
          RowBox[{"alphaVal", ",", "betaVal"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"graph1", ",", "graph2"}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.677599984043729*^9, 3.677599986864154*^9}, {
   3.6776000211834097`*^9, 3.677600074953045*^9}, {3.677600126496995*^9, 
   3.677600220391426*^9}, 3.677600253275527*^9, {3.677600354945567*^9, 
   3.677600422996048*^9}, {3.6776010442286253`*^9, 3.6776010549121637`*^9}, {
   3.677602205097773*^9, 3.6776022070428057`*^9}, {3.6776022390360413`*^9, 
   3.6776022403226547`*^9}, {3.677605643769912*^9, 3.6776056457284737`*^9}, {
   3.6776057220043573`*^9, 3.6776057537040997`*^9}, {3.677605789155921*^9, 
   3.677605792094995*^9}, {3.677605854280718*^9, 3.677605856855723*^9}, {
   3.677851800520109*^9, 3.67785180118346*^9}, {3.677851857620797*^9, 
   3.677852031525042*^9}, {3.677852291241864*^9, 3.6778522928013268`*^9}, {
   3.6778529349939623`*^9, 3.677852973263646*^9}, {3.677854215789454*^9, 
   3.67785421804528*^9}, {3.6778545116823387`*^9, 3.677854572818468*^9}, {
   3.677854617449122*^9, 3.677854617584996*^9}, {3.677854657105425*^9, 
   3.677854657663335*^9}, {3.677854716366518*^9, 3.677854737677094*^9}, {
   3.6778548795749693`*^9, 3.677854923183085*^9}, {3.677855010890849*^9, 
   3.677855011568116*^9}, 3.67785832280618*^9, {3.677858360872287*^9, 
   3.677858373946999*^9}, {3.677858981574374*^9, 3.677858981890226*^9}, {
   3.677859074640975*^9, 3.677859075164876*^9}, {3.677859120753641*^9, 
   3.677859120929225*^9}, {3.677860204498905*^9, 3.6778602197283382`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1: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
jvCoVkxtsbUC3XWEP7Vig5eRY0gvHeFNjZikXtvvOExH+FIj7GJOLYicqiM8
qRE7vzZfHBmlI/yoFp8+N7nRLF5HeFEtrmxxzlh6UEf4UCXSw5xTYy/rCA+q
xKBDx1qN+VdH+18ltu6a+bmgREf7Xik8Ftws6G1ZRvtdKUzSzjSa9E0Z7XOF
6LP46IrRvmW0vxVi2YtF/207qYz2tULsfTx5zsOVZbSf5UK7+unViF/LaB/L
RdvLMxsXXyyj/SsTo1bqXoXmldG+lYnDr3t9eVRTRvtVJtp6BL4Y3Kqc9kkn
dmvHBV/1Laf90YkWZ27VDwkvp33RiRFWT4IKN5fTfqjCdZ/fteSMctoHVYwa
/jJuSV45zb8irnUN2r/EpILmXRELvh37977vKmi+FdHl7xsDjYMraJ6/irsD
y5smra+g+f0qciJ3x8z+o4LmtVQc2PfTxOj8CprPUmF1vfDYfW0lzWOpmJRU
nRzhV0nzVyJi1lbO8Y+qpHkrFp6bA/vMO15J8/VFOPq1+fD4dSXN0xdhHXO+
ZK1zFc3PZ9FPs8Zz3sgqmpdP4l5Np9fbYqtoPj6KzGET2xZkVdE8fBA3z/Sz
n1RfRff/QbTy9AtXelfTfb8XD/TJ/juWVdP9FgkXF/t2nc9X032+E9LBYfbx
8mq6v0Lh4P02uLJnDd1XoYje2OxBRVQN3U+BKIv+p/3mizV0H2+F2/Sikq01
NXT++aJwi1fRq761dN754rs1UQ9+iKml830juoy6vfhMVi2d52uR2c5z7RPT
Ojq/V2LypcJLGwbV0Xm9EOknk6vWbayj83kuRL1tZML1OjqPPOF4snP+UvN6
ev6nwiUmoUnhgHp63sei94It1kmr6+n5HonCtCM6/4v19DwPRYlTp9ATpfX0
/XPFskTXgGXf6On73hfbN3dNnzxWT98vR7yy1m933aCn73NHrN6S8CrktJ4+
/6ZYcNBlWtETPX1etgjL0WctrtXT+2cJ96dfswqsNdjwfkJ43Oi2amxzDTb8
/UVxNvhYwop2Gmz4/QwRYR5817sr//yoyIt7aLrek18nidyEIzE/eGtQQ/8e
ft7cJqH3//0c+Of098B/T+8P///9LwJ/Pn0/4O9H3x/4+9PzAT8fPT/w89P5
AJ8PnR/w+dH5Ap8vnT/w+dP9AN8P3R/w/dH9At8v3T/w/dN8AM8HzQ/w/NB8
Ac8XzR/w/NF8As8nzS/w/NJ8A883zT/w/NN+AO8H7Q/w/tB+Ae8X7R/w/tF+
Au8n7S/w/tJ+A+837T/w/hM+AOMD4QcwfhC+AOML4Q8w/hA+AeMT4RcwfhG+
AeMb4R8w/hE+AuMj4ScwfhK+AuMr4S8w/hI+A+Mz4TcwfhO+A+M74T8w/hM/
APMD8QcwfxC/APML8Q8w/xA/AfMT8RcwfxG/AfMb8R8w/xE/AvMj8ScwfxK/
AvMr8S8w/xI/A/Mz8TcwfxO/A/M78T8w/5M+ANYHpB+A9QPpC2B9QfoDWH+Q
PgHWJ6RfgPUL6RtgfUP6B1j/kD4C1kekn4D1E+krYH1F+gtYf5E+A9ZnpN+A
9RvpO2B9R/oPWP+RPgTWh6QfkfUj6UtkfUn6E1l/kj5F1qekX5H1K+lbZH1L
+hdZ/5I+RtbHpJ+R9TPpa2R9TfobWX+TPkfW56TfkfU76XtkfU/6H1n/kz9A
9gfkH5D9A/kLZH9B/gPZf5A/QfYn5F+Q/Qv5G2R/Q/4H2f+QP0L2R+SfkP0T
+Stkf0X+C9l/kT9D9mfk35D9G/k7ZH9H/g/Z/5E/RPaH5B+R/SP5S2R/Sf4T
2X+SP0X2p+Rfkf0r+Vtkf0v+F9n/kj9G9sfkn5H9M/lrZH9N/hvZf5M/R/bn
5N+R/Tv5e2R/T/4f2f9TPoCcD1B+gJwfUL6AnC9Q/oCcP1A+gZxPUH6BnF9Q
voGcb1D+gZx/UD6CnI9QfoKcn1C+gpyvUP6CnL9QPoOcz1B+g5zfUL6DnO9Q
/oOc/1A+hJwPUX6EnB9RvoScL1H+hJw/UT6FnE9RfoWcX1G+hZxvUf6FnH9R
Poacj1F+hpyfUb6GnK9R/oacv1E+h5zPUX6HnN9Rvoec71H+h5z/UT6InA9S
foicH1K+iJwvUv6InD9SPomcT1J+iZxfUr6JnG9S/omcf1I+ipyPUn6KnJ9S
voqcr1L+ipy/Uj6LnM9Sfouc31K+i5zvUv6LnP9SPoycD1N+jJwfU76MnC9T
/oycP1M+jZxPU36NnF9Tvo2cb1P+jZx/Uz6OnI9Tfo6cn1O+jpyvU/6OnL9T
Po+cz1N+j5zfU76PnO9T/o+c/1M/gNwPUH+A3B9Qv4DcL1D/gNw/UD+B3E9Q
f4HcX1C/gdxvUP+B3H9QP4Lcj1B/gtyfUL+C3K9Q/4Lcv1A/g9zPUH+D3N9Q
v4Pc71D/g9z/UD+E3A9Rf4TcH1G/hNwvUf+E3D9RP4XcT1F/hdxfUb+F3G9R
/4Xcf1E/htyPUX+G3J9Rv4bcr1H/hty/UT+H3M9Rf4fc31G/h9zvUf+H3P9R
P4jcD1J/iNwfUr+I3C9S/4jcP1I/idxPUn+J3F9Sv4ncb1L/idx/Uj+K3I9S
f4rcn1K/ityvUv+K3L9SP4vcz1J/i9zfUr+L3O9S/4vc/1I/jNwPU3+M3B9T
v4zcL1P/jNw/Uz+N3E9Tf43cX1O/jdxvU/+N3H9TP47cj1N/jtyfU7+O3K9T
/47cv1M/j9zPU3+P3N9Tv4/c7/8PMCD8sQ==
       "]]}, {}}, {}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw12Xk0VV/0APBnyswzP4poFinRQNhHKSSUUpIyVEJIhcisQZLKkMwyZcqU
oZLcWxkaZIpCMpSvJMO77z3DM73f/a31+/1112ete+7a+5x97j17XRWnS1bn
uSkUSjUXhfK/14OmYvsWVOTxtpaBCmkXOsi4htAFlOTxB/oXUrVJD96hp8kq
yOOYT1DcMdLXPnTMaUrK4+8u+hfHk84xflziwi2Pp1LyYmRc6bC8X1nh2y8a
rg5FaxTc6PB873aiLJuG5+gfydNwp8NKveMZzutp+L8Vu6wivEhbnJWOk5LD
Uf49keHrdLgyoTk2LCWLV9flHhq5RQfnaY8KXXkZPDnPpFU9lg53Vl16dERQ
GpfNum/pn0kHrnbN7mhhKfyfeFn3Ujkd8nNeaUXNSeDAKg4YaKTDxGBJ+L0x
Ki4c4CkmN0AH6VoPxbQRKu4kY3ndn7TuY/WXxb+ouL/Fxg19pG+bF0609FLx
pJOJBlmDdFCuybWR+EzFg92D/DR/0eFYXKpGQhEVL3klY2j3Hx1e77/bm+FO
xa8pvX8x/I8OUtafzzn/FMc1xIJTW9h0sNUWz/7ZKY4Hq6sWHZqnwxOpo0PH
msXxxCIruc+k1Tt6T+97LY7vFI0S/LhAhwOWY8eVk8Tx1MyH9h+X6OBnKmja
e0wcH0+1XNvHRcBPfeMtFs1i+Oau5qJDQgTkbXg/veO1KP5KUsveaxUBNpKi
9gYVojj3l6lXy6SFlo9/OFAkit+iiQZFKxLg3jWWfCJFFLd/Mav/TImAbTcl
kX+AKH6k4m7VpDIBL4cc79buEcXZPbJdEesJ+JBKWb2vVgSXTdGqEd1KwF9J
A5PDb4Txhm6PsdB9BAy4rm0PrSLdHnVS1YiALlzAtrxYGL++WGTSQfqt59eL
kunCOEvmX/76AwQkfXJ50BksjPdHWIR0mBBgGh73zQYJ4zn9BMvIgoACYvSc
43sh3EzxRMnDkwS4tsWFXfkoiN/Mduv9dZnM7zBIsXFB3BZ34+BXCDBpG8sJ
eSmIH/lqMZJxlYANbYYf7uUJ4mcc1ZbsfQgYbp0Sy7sliNectbrw148Ah1az
1B+GgngXkmWohBJwvIXnhVGNAL5m5qbxtgcEGDVfHZct4sf9WSd82KUEpNus
L9DI5sc/Jz+fWiwjYG742/kDKfy4+Z6NZlzPCXi2pDPgE8WPj3vsLxCpJEBm
K6Wj8yI/rtk3qajxkoCRmHsvYtX58e53Yp9ScQLunMgNFytZgVO+1AZt6yDg
1+/jsOHpCjxV7ibN6isBel4Ci/rpK/DbcjuqvTsJoN+56ONxfwX+XnZqufYb
ASdrNF2aPVfg3znWIyd/ELBZsc787tYV+ExklWzjMAFffn2jrSjnwxtahzO9
5ghQTrTov5rPh1P9JfTa2AR4mzdmD2Xw4e4BUTs0FwhY9bJK4819PtxR2tZ8
dokAt+h4I293PvzrjzjDeB4GrNht5fVrIx/+fbG0RVKcARD9pakunRc32yeY
tnUjA2L37o9WT+DFlxo3lddtYsDIbK1VcjQvnhXm6Gi5mQH3nZ799AnkxR21
A9N9tjCgb1cUU92WF0/2Tmjs0mKA3y+T1SkyvPiVjZPPRxADynfV+167x4O7
aLu32dox4KDN91OiN3lweVHH0/JnGPDLbwxlB/Dg03PydT32DJCuoQq3uvHg
98PO8zqcZYCv3umMDaY8eGez4Gi4GwN0DWeauvh4cNuiMu11/gx4d3CTvHYI
N65k78YcecwA24t7lj/6cuNdMTkDw0kMYEZZ/Lb35MaDr+1jDqcwYN0X7+Ko
09y43EnN1H8ZDLht+dbw9x5uPNTf/IBUPhnfMVu32Dku/DU2/6jlJQM6Tt97
Tb/MhQ/HuI4I9TGg627uZzk3Lhwv3r9ZvZ8B3S/qfhg4ceEXVNflWg4yYECC
WLhnxYXzvF9nljbMgPEGaz1VLS7cQ+5F3tEJcv41Vr9xZFFwHy9Q38oh81ku
r+vwpeBHGZzw6nVM0Ff73ML2pOBnB+rPrdvIBGQz3K98gYL/pBkMxKsywfi5
LMfzBAU3ts8pCtJgwjHnABDeTcHvtGVQLu1mwo/UyNAIBgergGtpXw8xYa9+
6Q3X2WXMVqjj2ZtrTNjz16Pq7MgytvXZi9a315mg/Uj9z+muZczBRyHyYxAT
Nk4UHLSqWMaS/1z7+vsGE0TSciT2XFrGouxWWBs9ZML3xaQMkT9LmNGJnoRX
BUxwr735uvTbInbQeoKVPMCE8y77JgoaFrEJ61DNVb+ZcEaae3VO5SI2k5FX
kTnChCPuIeGJsYuY7lTck1cTTNi56rppmMUiJnIOa1BcZAJX4KXvVo0LWNQi
T3qtPAsS9tgyp6vmseh1l1XDbFhwnrI+QPLpPFZn++/sETsWaDdMcW9NmMfo
9lpCGxxY0G5xS9LFdx4b6mos67vAAhGnMs3enfOY5gl/vtBrLAi/s8Kr7gUb
a5Hk6st+zALPrufjt1/NYYoBPj8jf7BAPznIO7tgDqtalKQzBsjx9iaLWNIc
JlrKr+E4zIKC0Z/CbP85jKfBeL/5BAuGFwTULurOYUlv7OPOcVhgu8be1fL1
LCbFd8ni0bppML4kPCL3ZgbbLlIqteXqNAjcdgoZLJrBVnpN5FT5TcOn1Fe0
guQZbGP2TtgfPA0Wny6Y6frNYFrlxuX+kdNwbH19mZ3WDHbFxDFw95NpcPgR
GJBZMI19uyioK9M6DdeNJ6lqCSzM11E5LmL7DOid2V/IvMnCJrsOTHHpzMCS
d+q+2qssbGbCyPkmzEBo1kFf8yMsTNqV2ZB5aAYilp7+uCTCwvrunN4OF2Yg
vsL+aWU4E7s8lNEqnD4DJavb9xhcYmAu7dqtKpKzMC9iL33iDAPLwmovRsnP
wv758fFL5gxsh1B+3ZLyLPR1CqRnqjGw3IU/6YtbZ0HoLqLwjRLYKZnO/85a
zIIzq7T+swOBeQf0Sfy8NwtKH++bn7SiY9NT/1oSqHOg9F9i3ajbOOZCXUe5
osUGB6J5pb3ZOKagqzvtq8eGrCWKf5faOHZXr+3mjf1s2CDrqvVu/B/G6U+1
rjjBBg1jnfwUz3/Yyhj+H+6BbNAv6ImxuDKGFRpOHYQmNth5KJyv9B/FDuUG
3xd1moek6RTh0DvDmE1PSvOh/AXAc0ejLJyHsc3aauszKxZg1HqHiKLRMPZ4
dcnVuboF2F3dIlLD+Y1lvni6o7RrAb75comxfH9jHeXtrF08iyA550x1Of8L
u3J9R/+dM4twb15T5vDeQexBTh7ngfQSVBYGP1JSHsT0u7Pff1+9BNVVCWq9
CwPYdIXpkoLaElj7flSXvjqASV9RKIw1XILYWY2tdxz7sZ7qrYUGnksgMs/W
8jLowz5FxXQZNS4BZ/mBPpr7jp2b+KL+3nMZct6dTHB++R27GOSptt1vGUxv
r5265/cdC0wZlYwPW4Y40RdPeua+Yf/+CnptjV+Gjav6ea6yu7DZY19Ual8u
g6WO+qfc+a/YuxuD42PLy8BanF7TXPMV0+P/zT7Hz4EkHAtgXP+KjV18t+2L
OAd+Gx/dAgsdmOlFvnFnZQ5cO379YfdCO2Zv3Gj5AnHA4M/DYtn5Vmz9bOTO
u0EcuOO5zv7s9VZs8M3T3Pc3OdAx/YJaNt+C2WXFJo5EccCZd+Cq6cIXLPZh
1fifJA7cV9miG7j4GZNKPpfRVsmB7nz834fAz5ipsVyAxWsOrNl2LE1m6RPm
Y5BRUvGWA9UGAZTSpY/YX7u/klotHOg/9bFxaLkJG3ZsKVv+jwObftv5aYQ0
YQZ5ohvL/nHgihtdNYDTiP1+KcQ6QHBghb9ctDSlESt13pS5dpEDGgnnjxpz
1WPmjXWXTQUoyE+RzRsf9h7reZpnVSlEQe9y7lUPcr3HoF9inipKQccrKuSv
c7/DUuqCtTIkKCiojWvwGQ+OVdb8eiiiQEHqtETZWREME+1dVmWvpCD7B+oe
8ZJ1WIXS2KnvihRUH2St0KpYiyXzPdztokJBM6y/Xu5rX2PCTX9fK6ylIFX3
4CZB1RpMgGYdWbeOgu7b5nkbab/EzLfJ1vRspCC8fc/nIZ0XmJnCx/nDqhTE
NGlTCYFqjBNjhl5tpiCbXeyWVwcrsYNeRil2WygoqiR6/YnDFdjj6xJxjzUo
qG79mkCW9XNsMu7MsfdbKWittJnqVscy7BZLhzOuSUFFshgn8UsJtkSYtY1t
pyAq3+izr93PsPSVozo9WhTkw6Taig0XYvFe/povtSmod0iH33QqH9urJlcc
sYOCoM2p8sb8U2ym51a28U4KyqmLcqzjy8XGzu0WmSMtVFwpxqZmY8e4jgwk
7qKgSyk/X2utysTMJLJkNu+moHwp0Y4+i3TMk16SX0T6Cv2MutX5ZIxS/CxW
UYeC9L6U3W4KSMCuFIe3hJDmL+Qe0ouNxRT2fj7RQTpLtMD33JFoTHZt52YZ
XQra1XRIzTL4FqbZm25kQvox1xB29XgAVkwbyrpIOvTvYatYhwsYc47XKIT0
SzzUXbjUEqTVVTfeID2ZY8IrknoVKFIqh66R/pUYar4yMwyi3ntXnCJtMdCX
uM07EraxHc5sI90Xu4qRlf0Q7hLfLKbJeCSrPz3eEh0PedqBEYWkTXr89F/6
JsJq00Lhw6SDFzf83uuQCsrHPAf+I/PtfeBWP7LuCZzLvcPvTto701DumXwW
GG91j/xFzpd4Bc3tslgOzI/pXzQlXVg/VbuT5ynIqHZWPCHnd/+3RvHF2Tx4
0FLlNkqux+CfNKe34wVwJFg+UZm0rPAhgUPfisG6vPC6E7me5avWnpL4XArx
yUX73Mn13iC3dPzfQBn4b/pa6EzWA76ps6Cs8znw0xLDt5D1cr8cjkq1VsAN
zimRebK+TukWLfp8rITazofOL9TJejYLt9xTVw17SmsaeMl6rO+cmEt7+QKO
6y2Nxm+ioJjTJ7MoFS/BPNBEXpasZ/VL26Yb8mpAn/AY/kfWv1Nsf/LhmDpY
OLag9GcVBXEt3lRjPMHgwbOc+u/k/mp7LtNvaoODvseVWy9oFOS1qtbz34W3
UCXd0WgkTUFlUwIPNSLeQ6NdvG8SuX9D19nZcMTqwdLjm+IKcn8fPlmq3JZQ
D0tKza1OfBREf2ddfvlpA/RTrMt7OBzYlpDVUdnQBH8OG9y+P8oByufp5Fvm
H2BvrhvF6xcH2jgmZ493fYAp46l3Wn0c8HKdYs4OfwQH1qjl2VYOlOnpyezh
bQaTqhDBi+T7LJEYK3JQaYP9wyeGzvqTz7snTTU93wb8krF7H1zmgMsGA2/N
gjZ4ePy3cJYrB3afitHj1myHPf9l7Aw5Sb4P63d9yUYdcCiyOkdlNwdoiTcn
R+w7YbXDwU/WxDIkGihpeqR3g6T6heJ562Uo9JHTb/7ZDf7tHM/Lh5ah9hnV
VE2xB3KmFVL79i7DkAKP49+UHhgaN7KJ2boMm2f/PDyf1AtYsd+aQAHy/tJy
+un4PohXMVWKf7kEXg/X2GzcPwhM7tChDKkliOOqlqPtGQYDHeG6mbcLsJOd
dP3S6WGIG9NcHVu9AL30oJ+NIcPgeSPXa1vRAigP7s/2qR+Gwy3lGb7xC1BS
16Xx1fw/aE4aVNK4sACfAqb333cYgdvWcUGeogtAmdH25r09CptY3sztZ+Yh
Z4L2/VT+KKSGZKzxOzoPxv8t6lR8GoXQ9bez6k3m4X5nPcdR/C+o2ZwjrmrN
w6qKY1FY4l/gvzO8XUNwHnZ5eWddLxqDS4KRD9ZUs8FzrKKN3jYOj4ypLn6y
bFjW3lyVxxiH2ke1CrMibIgOeZJ0RnoCBGznc4J52PBMOtqp+cQE+Cv32ubT
52DMwJmV1z8BYeLKTOfPc3AhjkazH58EndJWZnz4HGxLrysduUGHV9aNzg2z
s+D3nq3yLp4Op8xq589PzQI+qh2flkuH9LeQL/5nFiy1ivyONdEhreu5cfC3
WfD88NjwnRABGoh27EPVLBQzvL6mxRCwd9ZwUsR3FjYbr509RvY1uRE3H+gu
zUDqUSspsVIGGJr5yHjPzIC4Q9jWpjoGjNpyi1RNzQDLb+CCDtnHvG6w3Wn+
awbeFKZ0KyqS5/jbPuNdTTNwWEy6ZiSZCd2dY5JG8TPg28Ub5JfAAgct9g03
8rw5OqSVpPmUBbci/DUi1Gfg1KRT1VgVC/aVid4v3DADiP/thF0XC94KDVnx
rZwBQZ2gM4bS0yDz8hAI8ZLxpU6DUOw0xD0+Omf2fRrenh3hTo2egeDgrDVh
4dOAlCJFC8hzKJf7nUF24DTg3Wq06tIZqP8QGOV/jbT55S1t7TOgpawdEe0+
DXW7Fk/wypLzONSvzn9iGmqEJYvd02chwxsxdbZMw/MK/RP6pXPA8+ee1bl+
Fmz3HHQ8iM9B0+NHzYU9LCjfdMP9RPscqDZZbZvtZEFZ2oewy8w5sM388yjz
MwtKIo4+y93Fhvb0bi69VywoPOXKJYaz4c6PbdWhj1iQxfOoqL9tHhRUejpl
rFhwKFfN4ePgPCh9+11macGCmQPvpCvp8zARKTAafZAFB+9OBUVSF2DLLacj
cvtYwKAePKx9eAHuZ8z7nNYm51GJw4psXYC2J3eMn8uR/cZuV4MdLYvga3Te
8uQQE+73chir+xfhuVmFrnQ/E3YHJuQJTS5CpE1Rb0cvE+5h76mDokvg/OH0
+lOdZL93QOn3XfMl4PbycXjcxIRbR79GDDYvQaunwPGaEiZs8NRvj/q8DLqv
eyruhjDhgE7agQ0/lsHwjEra20AmeT5beo2PLUNT3J97C/5MyEuufTotyIHo
4lAvP28mbGraE2hvwoEQLVbfI1cmqCrrbtRq4IB1wV0eu2NMkHVNMfCwp6Bi
ZcWDi2pMeGph5q97gYJuq6f+d4/sb3dqL1TwX6KgY+3WMspk/3ucY6uaFUxB
jaed11msYULCIwXp72kUFJfr9fQDjQly75L+oj4KKuBfvqq9ggm0lYnx0ie5
UN7u84PtvxhQ8j2sMcqRC53dkXI/lOzP98dfnON240KDkXqdmmTdXxEFO+I6
FxpWKJVL7WHAF85/a1tSuVC0GFvxQRsDwoe1KiIGuVC3qILGOLlvJopb2+cv
cKNYKeOHF9MYcNPtFc8VL27UIK5b45zCAIWN2Tv++nGjN8YB0ueSGGDyxDfp
eyQ30gnStzj/iAFZsYqOlUXcSK+X/3ZYNANsrl2ke0xxo1s5f+8rBTPgHeIX
H/LlQd0PXVZ3OzBgkj4m0xTMg95SenZstyefn9myqvg2D6L9fP83+jQZP1fC
Zv8EHuT8W23NQVsGrHm37oBENQ+ifOxI7zrKgLB9e4MMp3nQnhUlq3YZMwAd
CPqXeZUX2elmnpLbygD3GQdGRAAvunJw4kbmFgYkPjVie9zgRaWRr8S3qDOA
vkKEXzeOF83r7zQzUWXAk6bkNR3PeRGbMbf2wVoGcExenuRm8KKVZhXTdjQG
1Jkxm5y8+BDf1Lqjk9zk+A5qI8OPDz2N0l66xcWAtbYa9eFhfKghOFZ8NYUB
d1xc8axYPrQ2eI2z9RIBVrcGXv6q5EMlrTcKOmYJGKn7XODE5kNrFtUExSYI
ENueE+UUvgIZHnlQFNhNgD3N2tIpnh+9lz4+OvycgA1x7mscU/lRNXP1YF85
AZOiN6ftc/iRxvexuq4yAoJ5KlJOV/KjN+bBWz6VEJA+SR216eRHZ0Pw528K
Ceirbw61lBZAvevlb7RkEWBz2ei5XrwA+jepkv8wjozvk5aMXLwg8tUZRs7X
COjqKf0wkSKIKp1HOfG+5P1/1QLrswWRjSu/S70PAacF1v2+XCGIHMq6t633
JsDlgHR5c4cg8uD5HDPpRUDIO9ahcAkh9GQBW8hwI+BZTdXNiftCKF+lku53
hgD+ol2s95HCiLZM/TlkTMDDmIl0o1hhVB0bcXUjaQW/bNOGZGG0stsmx+MA
Aer7xTMai4SRnphfx4IRGe/AiOnHL8LI/Emrxeq9ZL5SCRktEiKIqxrfE65H
gHYg62BPkgh6k1ReUqFJgJN5eeZkgSgqtNmcnqtIQNhGR5X+clHkuqxjK0f6
CZdE5pdXomik8E9Q5CoCflZ5PXn2URQ5dT6a91xJ5q+0LcPtrygSW8qqM5An
wHyqJHVkkxjC8mSUCGkCdsc8e9yfJ4aOvO6qTBch17MrL7olVxxJZ1mcFlqi
g9btGF6XEnEkYWhyKHKRDja7AgK4Xoij3ZT2FAHS2UkWrtofxFGHDO2UwAId
dp+ZNkoeE0cl5ywOi7DpUH5VZfm5HBUtVVk2rJ+mw49Fz6pgOyqyChnzTJ2g
w1ZxoXWyI1TkGrNUcnuADsrby1stxqjo1hdMSpE01domIGKSisJ5ht9W9NOB
nvy0Y26GimoOmLCHftKhbMO+sB/8EmjmiekXwz46bDcI7H+iKoE0c13axXro
oO0xmajmIYFuC6PYvg466HzuEDVkSaBP1J/iuuR3/B+7J+EAXRKJXhWQGqug
g5fgKv4oLmnkUHyVxsikQ0ZUqmwhRQa9OcKMuBZHB43c0u0N8zKIE/SfoXgE
HWIylnasFpJDVlw8vAcC6JAqcrf7KD8NZR/CJJIv0+GBorZvnTANrT+/6/pl
0uEa/VKqVBrqXdSZMyF94fB2y2UaDeWfztKe8yLjj+9tyN9Mjs+3Kz5B+sNK
tYolcxrKLY6IUbhEB+bm5ui8eBpKoDRjpe50GNnjqyaZREOhbRZvIkl3H1L+
GJhGQ7efxbScJV3n6c1r9ZSGshxU1Gmk7zxfFbD4gob+U6a3h12kg5Kuh8uR
HzSk5lRUa+NGBwkzuRW1AzRU+npiSos0r93b7A3DNNSUtmqnOOm/QTIDC+M0
1JgmstDgSofKt2+sny7T0Kh123lt0nkdF5hUHnnU6yWxlUo6+bdETAC/PBK8
1CM07kKHED7n5sNUedQt3MzOJn1Flur2WloeUfCfIqGkz22s4d8gL49swo22
25E+sftc7kNFeZQ6y3TdTfr//qeh//+f9j8u77HT
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8066500000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-6.283185307179586, 6.258641614573416}, {0.8, 2.13}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6776002209009867`*^9, {3.677600400075038*^9, 3.677600423864895*^9}, 
   3.677601055717473*^9, 3.677602047736329*^9, 3.6776020787583838`*^9, 
   3.677602207637384*^9, {3.6776022417110233`*^9, 3.677602262968822*^9}, 
   3.677602383685356*^9, {3.677605648601006*^9, 3.677605711838193*^9}, {
   3.677605754447563*^9, 3.677605793860985*^9}, {3.677605858644244*^9, 
   3.677605883047673*^9}, {3.677851536401395*^9, 3.6778515614049807`*^9}, {
   3.677851622787682*^9, 3.677851649116012*^9}, {3.677851774881312*^9, 
   3.677851802828426*^9}, 3.6778518398117867`*^9, {3.677851989573003*^9, 
   3.677852032602141*^9}, {3.677852066835211*^9, 3.677852075111226*^9}, 
   3.6778525243063793`*^9, 3.677852651563355*^9, 3.677852913424334*^9, 
   3.6778529750531*^9, 3.6778532535535917`*^9, 3.677854219231666*^9, {
   3.677854512649078*^9, 3.677854671474008*^9}, {3.677854702638105*^9, 
   3.6778547386320953`*^9}, {3.677854881129513*^9, 3.677854924829624*^9}, 
   3.677855012424679*^9, 3.677858323446206*^9, {3.6778583627771797`*^9, 
   3.677858374876926*^9}, 3.677858528448452*^9, 3.677858599029648*^9, 
   3.677858661573846*^9, 3.67785898410151*^9, {3.6778590536840687`*^9, 
   3.677859121684527*^9}, {3.677860206007677*^9, 3.6778602203993053`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"file", " ", 
    RowBox[{"output", ":", " ", 
     RowBox[{"xi", " ", "vs", " ", "Sk", 
      RowBox[{"(", "xi", ")"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<res.dat\>\"", ",", 
    RowBox[{"N", "[", "res", "]"}], ",", "\"\<Table\>\""}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.6778523019570503`*^9, 3.677852333526246*^9}, {
  3.677852382049767*^9, 3.67785238477367*^9}, {3.677852991785236*^9, 
  3.67785301345961*^9}}],

Cell[BoxData["\<\"res.dat\"\>"], "Output",
 CellChangeTimes->{
  3.6776002209009867`*^9, {3.677600400075038*^9, 3.677600423864895*^9}, 
   3.677601055717473*^9, 3.677602047736329*^9, 3.6776020787583838`*^9, 
   3.677602207637384*^9, {3.6776022417110233`*^9, 3.677602262968822*^9}, 
   3.677602383685356*^9, {3.677605648601006*^9, 3.677605711838193*^9}, {
   3.677605754447563*^9, 3.677605793860985*^9}, {3.677605858644244*^9, 
   3.677605883047673*^9}, {3.677851536401395*^9, 3.6778515614049807`*^9}, {
   3.677851622787682*^9, 3.677851649116012*^9}, {3.677851774881312*^9, 
   3.677851802828426*^9}, 3.6778518398117867`*^9, {3.677851989573003*^9, 
   3.677852032602141*^9}, {3.677852066835211*^9, 3.677852075269862*^9}, 
   3.677852334904092*^9, 3.677852385539365*^9, 3.6778526571964693`*^9, 
   3.677853253796664*^9, 3.677854227227803*^9, 3.677854958329007*^9, 
   3.677855015708158*^9, 3.677858676019248*^9, 3.6778590110648603`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison for Analysis Purpose", "Section",
 CellChangeTimes->{{3.677852669761236*^9, 3.677852684109439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "you", " ", "can", " ", "simply", " ", "set", " ", "nb", " ", "and", " ", 
    "C"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"nbVal", "=", "1"}], ";", 
   RowBox[{"CVal", "=", "2"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6775954535150957`*^9, 3.6775954830687532`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S0", "[", "xi_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkExact", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkCN2SSACN2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkSSA2CNSSA2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S3", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkCN2TauCN2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S4", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkTau2CNTau2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S5", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkImBEMidSSA", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S6", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkImCNMidSSA", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S7", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkImBEMidTau", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S8", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkImCNMidTau", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S9", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkExMidSSA", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S10", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkExMidTau", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S11", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkMN2SSAMN2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S12", "[", 
   RowBox[{"xi_", ",", "alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"SkSSA2MNSSA2", "[", "xi", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "alpha"}], ",", 
      RowBox[{"b", "\[Rule]", "beta"}], ",", 
      RowBox[{"nb", "\[Rule]", "nbVal"}], ",", 
      RowBox[{"C", "\[Rule]", "CVal"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6610957764890614`*^9, 3.661095818429022*^9}, {
  3.66128827077887*^9, 3.6612883888251534`*^9}, {3.661288444003646*^9, 
  3.6612884446319*^9}, {3.661288490696558*^9, 3.661288491835446*^9}, {
  3.6612885469207897`*^9, 3.661288581756008*^9}, {3.676859978368185*^9, 
  3.676860137282445*^9}, {3.6768602315032463`*^9, 3.6768602414392347`*^9}, {
  3.6769003125397663`*^9, 3.676900330267519*^9}, {3.676930172773868*^9, 
  3.6769302244315033`*^9}, {3.676930269026059*^9, 3.676930285499928*^9}, {
  3.677111270927894*^9, 3.677111304392095*^9}, {3.677262192904901*^9, 
  3.677262220551339*^9}, {3.6772734436194677`*^9, 3.677273452674505*^9}, {
  3.677595411866721*^9, 3.677595412897931*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xiMax", "[", 
   RowBox[{"alpha_", ",", "beta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"beta", "/", "alpha"}], "]"}], "Pi"}]}]], "Input",
 CellChangeTimes->{3.676860142985474*^9}],

Cell[CellGroupData[{

Cell["Comparison of Implicit Schemes: Splitting vs. Unsplitting ", \
"Subsection",
 CellChangeTimes->{{3.6771119481800137`*^9, 3.6771119749079657`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha0", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "[", 
        RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], ",", 
       RowBox[{"S3", "[", 
        RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], ",", 
       RowBox[{"S5", "[", 
        RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], ",", 
       RowBox[{"S7", "[", 
        RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], ",", 
       RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", 
       RowBox[{"-", 
        RowBox[{"xiMax", "[", 
         RowBox[{"alpha0", ",", "beta"}], "]"}]}], ",", 
       RowBox[{"xiMax", "[", 
        RowBox[{"alpha0", ",", "beta"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.5", "nbVal"}], ",", 
        RowBox[{"1.25", 
         RowBox[{"S0", "[", "0", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Dashed"}], "}"}], ",", "Green", ",", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<CN/2+SSA+CN/2\>\"", ",", "\"\<CN/2+Tau+CN/2\>\"", ",", 
        "\"\<ImMid+SSA(BE-Mid)\>\"", ",", "\"\<ImMid+Tau(BE-Mid)\>\"", ",", 
        "\"\<Exact\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"beta", ",", "1", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.661095623816246*^9, 3.661095691509592*^9}, {
   3.661095729833468*^9, 3.6610957587446747`*^9}, {3.661095904760469*^9, 
   3.661095923343796*^9}, {3.661096007175959*^9, 3.661096163134775*^9}, {
   3.661096221210343*^9, 3.661096273629622*^9}, {3.661096311742564*^9, 
   3.6610963142698812`*^9}, {3.6610966889436407`*^9, 3.661096710492442*^9}, 
   3.6610972571931753`*^9, {3.6611055776332006`*^9, 3.661105579756692*^9}, 
   3.66110568467319*^9, {3.661105769615493*^9, 3.661105774976234*^9}, {
   3.661105976118187*^9, 3.66110598105442*^9}, {3.661107167928101*^9, 
   3.661107168736452*^9}, {3.6611211080597773`*^9, 3.661121172178276*^9}, {
   3.6611212491950083`*^9, 3.6611212535940523`*^9}, {3.661121567441403*^9, 
   3.661121598128908*^9}, {3.661121822935338*^9, 3.661121823319704*^9}, {
   3.661121866807699*^9, 3.661121866967607*^9}, {3.6611219011994267`*^9, 
   3.661121913791336*^9}, {3.661288462223894*^9, 3.661288464816098*^9}, {
   3.661288511437209*^9, 3.661288519119746*^9}, {3.6612886530149107`*^9, 
   3.6612886534906*^9}, {3.661288686846607*^9, 3.661288715139742*^9}, {
   3.676860171328068*^9, 3.676860185038698*^9}, {3.676860296299591*^9, 
   3.67686029664327*^9}, {3.6768603269163322`*^9, 3.676860350596078*^9}, {
   3.676860393379651*^9, 3.6768603998416147`*^9}, {3.676860465355832*^9, 
   3.676860479089691*^9}, 3.676860511217751*^9, {3.6769003432383137`*^9, 
   3.67690034790061*^9}, {3.676900394101935*^9, 3.676900399301311*^9}, {
   3.6769004797721453`*^9, 3.676900483541191*^9}, {3.676900599125514*^9, 
   3.676900602036264*^9}, {3.676900651223127*^9, 3.6769006859560738`*^9}, {
   3.676930316804587*^9, 3.67693032202771*^9}, {3.676930951312778*^9, 
   3.6769309909251738`*^9}, {3.676931023407281*^9, 3.676931039406708*^9}, {
   3.676931183174135*^9, 3.676931185384325*^9}, {3.677274421566478*^9, 
   3.677274422315364*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`beta$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`beta$$], 1, 10}}, Typeset`size$$ = {
    566., {120., 126.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`beta$10753$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`beta$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`beta$$, $CellContext`beta$10753$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`S1[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$], 
         $CellContext`S3[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$], 
         $CellContext`S5[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$], 
         $CellContext`S7[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$], 
         $CellContext`S0[$CellContext`xi]}, {$CellContext`xi, \
-$CellContext`xiMax[$CellContext`alpha0, $CellContext`beta$$], 
         $CellContext`xiMax[$CellContext`alpha0, $CellContext`beta$$]}, 
        PlotRange -> {0.5 $CellContext`nbVal, 1.25 $CellContext`S0[0]}, 
        PlotStyle -> {
         Red, {Blue, Dashed}, Green, {Purple, Dashed}, {Black, Dotted}}, 
        PlotLegends -> {
         "CN/2+SSA+CN/2", "CN/2+Tau+CN/2", "ImMid+SSA(BE-Mid)", 
          "ImMid+Tau(BE-Mid)", "Exact"}], 
      "Specifications" :> {{$CellContext`beta$$, 1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{613., {164., 171.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.661095692173901*^9, {3.661095737325931*^9, 3.6610957593694553`*^9}, 
   3.66109592510385*^9, 3.6610960161061563`*^9, 3.66109605135035*^9, {
   3.6610961041648893`*^9, 3.661096119712955*^9}, 3.661096164176258*^9, {
   3.661096246511971*^9, 3.661096274187168*^9}, 3.661096315168763*^9, 
   3.661096428063571*^9, 3.661096720474393*^9, 3.661097138536664*^9, 
   3.6610972586695004`*^9, 3.661105581869866*^9, {3.66110565760216*^9, 
   3.661105685277626*^9}, {3.661105770956933*^9, 3.661105790351942*^9}, {
   3.661105977280457*^9, 3.661105981743454*^9}, 3.661107169920339*^9, 
   3.6611152419419622`*^9, 3.66112103863134*^9, {3.661121148827948*^9, 
   3.661121172984229*^9}, 3.661121254587451*^9, {3.661121570269742*^9, 
   3.66112159889578*^9}, {3.6611218104374037`*^9, 3.6611218260696917`*^9}, 
   3.661121867949874*^9, {3.661121905377931*^9, 3.661121915385421*^9}, 
   3.661204369329364*^9, 3.661204437155204*^9, 3.66126868783535*^9, 
   3.661268935979517*^9, 3.661276475827992*^9, {3.6612886674013433`*^9, 
   3.661288734148631*^9}, 3.6612940557027407`*^9, 3.662919618994882*^9, 
   3.663081291596163*^9, 3.6669933061979017`*^9, 3.67685497495068*^9, {
   3.676860159731419*^9, 3.676860185631215*^9}, 3.676860297546754*^9, {
   3.676860331116968*^9, 3.676860351423539*^9}, 3.676860400515394*^9, 
   3.6768604800331173`*^9, 3.6768605119380817`*^9, {3.676900335714416*^9, 
   3.67690034969912*^9}, 3.676900400120572*^9, 3.6769004842060204`*^9, 
   3.676900603106079*^9, 3.676900654683683*^9, 3.676900687176691*^9, 
   3.676930322845347*^9, {3.676930969200184*^9, 3.6769309931888857`*^9}, {
   3.67693102625168*^9, 3.676931043456644*^9}, 3.676931186687016*^9, 
   3.677111308123755*^9, 3.677262231255351*^9, 3.677272227710149*^9, {
   3.6772734578183613`*^9, 3.677273461618513*^9}, 3.677273528115041*^9, 
   3.677274424378201*^9, 3.677274782896364*^9, 3.677599869517264*^9, 
   3.677852746213056*^9, 3.677853114321578*^9, 3.67785840109662*^9, 
   3.677860240326612*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha0", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta0", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S1", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S2", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta0"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta0"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<CN/2+SSA+CN/2\>\"", ",", "\"\<SSA/2+CN+SSA/2\>\"", ",", 
      "\"\<Exact\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Sk (alpha=``, beta=``)\>\"", ",", "alpha0", ",", "beta0"}], 
     "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S3", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S4", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta0"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta0"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<CN/2+Tau+CN/2\>\"", ",", "\"\<Tau/2+CN+Tau/2\>\"", ",", 
      "\"\<Exact\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Sk (alpha=``, beta=``)\>\"", ",", "alpha0", ",", "beta0"}], 
     "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S5", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S6", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta0"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta0"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ImMid+SSA(BE-Mid)\>\"", ",", "\"\<ImMid+SSA(CN-Mid)\>\"", ",", 
      "\"\<Exact\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Sk (alpha=``, beta=``)\>\"", ",", "alpha0", ",", "beta0"}], 
     "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S7", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S8", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta0"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta0"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ImMid+Tau(BE-Mid)\>\"", ",", "\"\<ImMid+Tau(CN-Mid)\>\"", ",", 
      "\"\<Exact\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Sk (alpha=``, beta=``)\>\"", ",", "alpha0", ",", "beta0"}], 
     "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S1", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S3", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S5", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S7", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta0"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta0"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Dashed"}], "}"}], ",", "Green", ",", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Dashed"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<CN/2+SSA+CN/2\>\"", ",", "\"\<CN/2+Tau+CN/2\>\"", ",", 
      "\"\<ImMid+SSA(BE-Mid)\>\"", ",", "\"\<ImMid+Tau(BE-Mid)\>\"", ",", 
      "\"\<Exact\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Sk (alpha=``, beta=``)\>\"", ",", "alpha0", ",", "beta0"}], 
     "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676900988960156*^9, 3.67690100955506*^9}, {
  3.676901403886013*^9, 3.6769015323863993`*^9}, {3.676901565578354*^9, 
  3.676901584407215*^9}, {3.6769016355368443`*^9, 3.676901640050633*^9}, {
  3.676901686646017*^9, 3.676901738835552*^9}, {3.676901801114064*^9, 
  3.676901894328187*^9}, {3.676901994685162*^9, 3.676902051930209*^9}, {
  3.676902353079051*^9, 3.676902386655047*^9}, {3.676930363662283*^9, 
  3.676930429563197*^9}, {3.676930515815131*^9, 3.676930521267928*^9}, {
  3.676930556224679*^9, 3.676930611021777*^9}, {3.6769306935817347`*^9, 
  3.676930706528824*^9}, {3.676930752426977*^9, 3.6769307894741917`*^9}, {
  3.676930823997326*^9, 3.676930829064591*^9}, {3.6769308728544188`*^9, 
  3.676930895350129*^9}, {3.677274175694684*^9, 3.677274282321699*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
Y+022/XB/1dPDP+/nvh/ADaZ9A==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
ndeE/39e838dhN7u
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
Vhujcwcijv233+P/9oOg/98P8j92zKuM
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk (alpha=\\!\\(TraditionalForm\\`0.1`\\), \
beta=\\!\\(TraditionalForm\\`5\\))\"", 
        StringForm["Sk (alpha=``, beta=``)", 0.1, 5], Editable -> False], 
       TraditionalForm], 
     PlotRange -> {{-22.214413784081028`, 22.214413784081028`}, {0.8, 2.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"CN/2+SSA+CN/2\"", "\"SSA/2+CN+SSA/2\"", "\"Exact\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.676901013428475*^9, 3.676901437274213*^9, 3.676901537748494*^9, {
   3.676901575861133*^9, 3.676901585296535*^9}, 3.676901641205266*^9, 
   3.676901765573063*^9, 3.676901851854536*^9, 3.676901895211459*^9, {
   3.676902019005694*^9, 3.6769020536042643`*^9}, 3.676902387805354*^9, 
   3.6769304319142933`*^9, 3.676930524955545*^9, {3.67693058306161*^9, 
   3.676930612587983*^9}, 3.6769307082865543`*^9, 3.676930757206361*^9, 
   3.676930791460737*^9, 3.676930831841861*^9, 3.676930896107695*^9, 
   3.677111330206133*^9, 3.677262234423168*^9, 3.677272232626957*^9, 
   3.6772734633968153`*^9, 3.677273529809362*^9, {3.677274200059683*^9, 
   3.6772742368384743`*^9}, {3.6772742673982067`*^9, 3.677274285170815*^9}, 
   3.6772747987298183`*^9, 3.677599877869865*^9, 3.677852755447777*^9, 
   3.67785311554595*^9, 3.677860244169231*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
1Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
j/l/9zXh/9/X/B9GUcSX
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
Vhujcwcijv233+P/9oOg/98P8j92zKuM
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk (alpha=\\!\\(TraditionalForm\\`0.1`\\), \
beta=\\!\\(TraditionalForm\\`5\\))\"", 
        StringForm["Sk (alpha=``, beta=``)", 0.1, 5], Editable -> False], 
       TraditionalForm], 
     PlotRange -> {{-22.214413784081028`, 22.214413784081028`}, {0.8, 2.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"CN/2+Tau+CN/2\"", "\"Tau/2+CN+Tau/2\"", "\"Exact\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.676901013428475*^9, 3.676901437274213*^9, 3.676901537748494*^9, {
   3.676901575861133*^9, 3.676901585296535*^9}, 3.676901641205266*^9, 
   3.676901765573063*^9, 3.676901851854536*^9, 3.676901895211459*^9, {
   3.676902019005694*^9, 3.6769020536042643`*^9}, 3.676902387805354*^9, 
   3.6769304319142933`*^9, 3.676930524955545*^9, {3.67693058306161*^9, 
   3.676930612587983*^9}, 3.6769307082865543`*^9, 3.676930757206361*^9, 
   3.676930791460737*^9, 3.676930831841861*^9, 3.676930896107695*^9, 
   3.677111330206133*^9, 3.677262234423168*^9, 3.677272232626957*^9, 
   3.6772734633968153`*^9, 3.677273529809362*^9, {3.677274200059683*^9, 
   3.6772742368384743`*^9}, {3.6772742673982067`*^9, 3.677274285170815*^9}, 
   3.6772747987298183`*^9, 3.677599877869865*^9, 3.677852755447777*^9, 
   3.67785311554595*^9, 3.677860245067318*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1:eJw12nc81V/8B3B7ZGRL9t7hci9FzimSSqF8EZGVyspMGaU0RBQNkmRllcoM
yT2VZJYiySaJkM+1yfid+3v8fv/k8Xx8buezzuec9/l8XrJuZw6fYGJgYJjA
/9D/xvk7f/1JoSDLTcXhffwEMDKPaPPUpSAjt6YIuv9Kp34a16IgezuRKLof
L75q8dGgoMMTd6/SbfX5W9O0CgV9ljGLp5spb7YhUJGCCv6pJtNdeoH/47ws
Bb2Kgtl0e9hqfTgnRUGz5TeK6RbZdvD9v60UFJDF+o7uj6zeby+IUtDBQ2Ud
dJ/ri6EyClFQ5bt743Srlee+ucJHQZybChn6sXtu1r1m56GgdC2aGN03PYar
YjkpaBl4k+k2NmKo5GGjoGzzLUfozpgwLBPcIKO4C1z36LZ+f7Tk/j8ycmix
rqKb6WHoS7ElMrpzpHmA7hP7S59J08jI1NFed4B+vHJfCrOmyIiR1ceF7obl
v/mKf8gob0fpLbrVCtSeqP8kI/783jm6e6LMs58PkFETP1VtkH589p6ZOr1k
ZO39zY3uafasR/rfyCjbKf0H3WWeYvdNPpJRSlzO0BB9/8b6d+vfk5FVparq
MH3/Iv8l7UNktNj2M5Du8x9uJ1hWkdGQ/SL3T/r5KnBcd3yKz4clw3GE3v4/
xav9eWT0r7GtjO6MdpNo1xwyev5Gn+8XNnP0xYsnH5GR0a/8VrobhhZCg26R
EbePpPtvevtVQmcX4vDvv7B8olstkRR8Pgbvb0recAw7Hvr5X7xERirymyTG
sQ8//nUqLoiMnr6IWPqD3Xes42i2HRklnNKSmKb3L+LKjp4j+HxO1lXQnRZN
Fhe0IiMu4+UjBLZD4f3ey+ZkNPnT5D4Nu3PR/rjbdjLiDD+5Yw77c1Kfh6w4
GfXthowr2NuUEvYcFSUjkjJjPd0JVcZKiYJkJOdwKv4ftsXg498M3GTkEaWu
sEY/P003r8FVPXRrMTGAQYAAbxtGzzzu10NjAodusmPLHEu2+t6th46KPA/n
wI6a3quz+bseehNU48uJbSxSMHPhsx5KDR09yoVd7e4d4oz0kGnaxcObsUvX
p8Mks/SQT8SBD6LYT/SWrz48oYeeRjSWq2Fn0eITBN30UFBjwKg6dvpzueQ4
Zz3URL0spomdomKRH26Hj0956JoW9k2Jx02O+/SQTFbmBT3sYJY9myU09dDd
xPfDxti7O26npM3posdmHpf/wwaJiplCNF0EKP6MdthGh6oLbk7poj/W/y7b
Y1MaflZHjOqi79uT4h2xVWsofce6dFHe4R/IFZsvp1dWskYXCcZdzfDDHghS
efooWhc12p3eH0u/HoPaZ5SjdJGpSC//Tfr1OrhdtzhCF61T2nrisV2U9r+u
C9FFXIdgaCL2YJd388RJXeQ4cbQlhe6dLya2W+iia8fNiTy62SkanUK6SIKR
S6mB3n6wMXGcXxfp6ieAJnr7Q2Zl4zy6aIq/1LGF3n61ndEamy7qkxt92Eb/
/z7nLRSWSWiJk9/oB/bQlxqfwD4Scug+v/oHe/ihSRFvLgktDE1c5RMkgHZd
/5GDWSRU0fVHTRD7wuT5lbh0EvowpdUujL1158u9nMkk5KhyR1Mc27pfYpg5
hoSSnKY4lbCRzILI8mkSuvcu2M0IO/1JftRPTRK6shL42Bt7stVEWU6NhDKi
c176Ye9Y6G91UcLtp9t+CMDuNBMW75fCjjFdDsXmGbtU3rWZhPrLLsZdwY5Q
c/zTStNBmp3QMR3b4QWPTWW5Doqzm67owDZjjJfTL9FBwsFMDF3YOke4aeXP
ddDlN84WPdgci5sSSvN00L0rK3+HsF8ZczQ8f6CDlFTmHaexhT4xGT2J1EGN
3152bhLCz9PkonzSHh30zf2ukyl2tXHoDN9uHeR5plTQHDv39gK6ZayDWFqd
Wg9gX9Cbd4rX10Gp/k4HjmBrRMwkx6jqIMPEvYFu2LFcU1wXeXTQTa4m30vY
pmrDs97ftJFGqa7GO+x+/bmcx1+00f6hgeJ67NA9bLbtrdro+n98Rs3YhS5q
lTvqtdEmKy7nDmy+5MAIzlfaqMb4Y9codi8zM2teijbiZD/yjFsYPw998iLD
jtqI9fCNEUds3gnyR2F73H5/JKMrdt7S3nP7bLSRlMNpeU/sbkGf7pcW2ujw
K72z/thwf1n6xZ3ayHkPl/1VbO5XpsqS0vj3T3bwvcQ2l232f1mnhVxftp/h
FMHjxcPOfYZvtJDRxYwtm7F3iAzL1ZdroYa9lfVC2Jpcyx09uVqoWK6bJIMt
MK+0nf2GFvJ473pAH7u34TKj80EtNBt/+pIntr//jiSuzm1oR1iXbCP2A2pB
qedvTbRJY8giQ5QAh+IjewMGNZF58fXZXGwmR2vWyB+ayJb863ERts/Cku2d
Zk10sbqL8zU21DRfob7QRNq31OU7sUdTR6HYOU2UevDnGZ4tBNA7K/+pmUMT
SUsw3o/C/qTxaExbTQOlN8cfChPD9yfgfucTOQ3EdXoARGNPV9yq2yqugSo4
k7ffxObbdTmDhVsD8Xs5mKVjH/7vpH3XlDpK6Zarf4fdGanTcLFYHZVs8/Hk
2Yrb+/Qh75OBOlI4welVgP3X/6+nz141pP7m59N1cXz9OF/muEI15PluFHJK
EOBaZsCw7XY1ROEJGhDElvo657RLXQ1xbbXcrop9SPefjchmNdSaoelqg/1i
nt0Edaqi0pmzsc+w/cNkpYU8VZFgZ2u8hyQBZqNtvr++ooIs7bYMzkvh9sPX
4joiVVBmRNcEkzQBtgTlwqmzKsiFOZWZD9vIbalA6rQKqg6xtVPDvgbTIi4d
VEG+45qJx+m/X/spu1dEBY2cP+7Qgm18Nsjna54yGi7Zk/dChgBtvhKyExnK
6PTZ84dqsd1PfPjGnKqMossvMrdix9iIAvJNZZQVb5L8B/sL6TV/ir8y+q7j
e1JJFtdH00yvnLYro5GvNZUZ2DdOJTGONymhgtcaKRlyuB767hLu/V4J3QwK
v1yC7WmmNT/1WgkxvMu5WIe9W6FlbOaZEvrUMF4yhr0ywNq2mqCErogvb+jI
E8DL7nw63xEl9Nn03v4G7P1mLoYGPYrIp3mbM4siAQzKt5VXtyui/f996dyC
raSwtm1niyIiSipPaGIzMaXK7X6jiHxHPtfbYle/aee0eKyItuZfelCIrUbe
23XcXREJpJWk2SoRYJPCtpDrEwqobUWM5a0y7n+jdcaxIwoonEOF1ontlO/I
Ed+ngNxDzOcnsV9q3HiY9FkB8U4ZmoipEMCWPPL2UakCCrY6uhyInW2WylsW
roC4zl74o6aK79dptvxBLtye8+2WIjV8PdQfBfxkUUCT7W099di3pnQNR9fk
kbSvN9sg9nCA66eJaXmUJm3+XEAdX9+wmrmFdnn0crzP4jx2Z1zgLp40eSQc
eXjsgAYBzjzv796uIY+iSDK17NsIMPc79XSugjx6v995Tgk7TNZuSUBSHn09
ym5thn3l7mfhSR55FBOacOEqdmoYskqflkNGJINiVi0C1Jll1TOVyqF65fZn
PNq4Pw2cKGneLodcg+2/7yQR4NEWuV0GJDk04N3s4IYtd7j/c46aHHpfa85z
HVvzg+1UpLgcOsfxiOEL9u6ne1W012RR8n9eqid18XgQqpp+F8mirPnK5jQ9
PF9tnrrhtFcWFQ27Vmnp43oi//atKSCLaqWil49i2+3SuxdpIIuyGakBV7D/
BoZnPFKVRf7sXNzd2BKdnK/6uGRRiwGauW6A+1+a0ohTmwwSU28a+rsdzz+q
LsbOR2WQ8oXtYNKIAKtvmU3/Wssg124XS6mduN5yyNt3YT9224UnVtjHb/61
STfEv896pFiBHT8d4d0vKYOIExnRV4wJ8NVbV+dNnTQKLzyhoQUJYHI199eb
TimUcDpMBpng8cbpwu3+BimkpBM7s4jtQrY13KiWQkjvBL+2KZ4/f7EmwsdS
SGprrn4mdtmeE0bvT0qh4MhX5Ot7cH9mU7jTsCSJfufahbrtxfPl9UzYvlUS
qdR+t3I4gOvr4+cnZrkl0dv0T4Np2Ar61veFNiSQX9zJLwPYu34zTP73UwKJ
tTh/97TA93+vS3LXUwn0iqEv9vxBAkywS//tM5JAvyNfbi+xxONrTNrDMWdx
tH74mudZGwLctaS29VqKo4HwU8dbsY+KDLN+geLo0o/D4wr/EWAkW9m/Sk4c
6SXqlX/DXqktMY0d3YqG1JKtjO3w8c83TKn7bUXlO8pqNBzwfOw6D85EiiH3
6hOnYlzwfKuyJcTdTwyJKHZpzmFzTu8otDsuhmwBqdTFFe8/IkoI7hJDG9Np
LEZueL5N5hrnYxVDubIec//ccf9vlU0qubkFDUd1FGSdJIDWjkMj8w9F0cez
258+OIP7Vx5j1Z94UbRInlXd4k+AfKHy+IGLoujHC+7YZGy5aXH9RndRtG/+
7kJKAK43csZvpKmLooOVb1/nBuHz4bmqZfJaBPXz8w1Nh+J6NNyAxaBIBAVa
tJyLPEeAoLGJLo3HIujz3F1h7vO4nnp3+LJItAja6yR7SiMM16OhMt/G94sg
A+HUV+cj8PM09DrsdrcwOtzxyWLfJQIwWJ6xvNoijO6FifiMYe+skVMIqxVG
P8JMXsdcJkDF/Rut7lnCSPaA8nxLNAEKDtjJ6HsJo45zmzQ8ruH1Q/nMh75l
IfTn1B7ftjh8f26o8quLCSHNEN6HlckEOPhL2X+WUwjtiGHedy8F94ddSp9f
rwii14cWhoMe4Hp6WS7eolcQUc/p0CgPCbB8SoLT77EgerD8R/RbOp7fzTcz
FisKIsaQgz1nc3H/z+FxOS8iiE6X7hUMySPAJQZu6i52QeTQ4Jkakk+A05Uc
kV/HBNCrQ3wlkYUE2K7CtDz7VADNaJe1FT4nwA/2eYJCEkDTPlxBF18RoNV9
1nJDTgB1DZ6TzK3E9QqV9vyjIN5+8+mdz1X4fEP/+tjP8yOz3io29Rq8vvv9
e+x8JT+K/hvExvqWAGIfuwdrjPlR4c4PPQeb8flfQ227D/Chg7Rbry4M4/op
I17ysBEf2iIgEMg1guvT1w5erpp86IYuy460XwRwJOaYozbj7Voaqk1jBHhd
dtgvLG8zWrOv4j86je/XMQXDM5W86Jv3MyOrNQJ8SKztiE/lRRPrg9UKGwSo
r7f3exbBi77cNDZeZ6CBBu34zHHIi/Yvlz1ELDTQyrLA7tHIg0a1TMuvcNNA
57OPHfbd3Ojg0u5b4pI08H3I1S+0hhtxuC247pOmgS6RVfb76dzIObgmIlKW
BrqjtA3b3bhR72bi95IiDQzYPMg8OMGFAqgGO4AWDYytevntXt2EelolfGRM
aGBch5XDtX8TknVVTq3dQwN/PB9nXkSb0M4s0WoPcxqYbGvvqLmyCVWs5Bxo
PEgDRI6RoT7PJsSFLm1ftKeBZQteDg0pTtSxuObBEoDb/9Q4eICJE6kP1aau
BOHjs7pa5T3KgQZOt+cun6WBCptVr6fPOZCU4kCDQCQNBB/706oGOBApq4Ot
/AYNTHvX31F1YUeBAa8kunNooH/qks8+U3b0k03gh18+DXw6s3PPaRV2RPmU
2M77jAaeBZUt5BNsyHMlkRJQSgNe4VlHVS6xIdaBkJa6dzTwK/aCtHIWK1o9
Gzn69ScNdHDvWDK7xoo+dvq7k8ZooC5hvs3TixXJy8vaZkzSQFaSz+VcEivq
hUIJ+fM04JLq8EvxPQv6N/hFLoBjBvQUUJ4qjDCjL1+C6iV1ZkCT+ky0aQMz
erz6+0w0ZQZUFxUd83jGjBpN7o7+M5wBKcUKvDnBzAgmpV5W2jsDbKsEAuRZ
mdHGvhjk7TwDvjT8pcgpMaGEs84H2RJngLYKVBhnZ0Ke/xr+2qTMgITrifwv
xxkRM++7bPR4BtczepM7ixiRzhXFS7TnM+Dd+/OZR/WwZ/N3NX6aATLyzQky
IowoWzIsm+/7DLhwWSLi9yIDChIL6jk/MAN27KLahrxmQF5LD33LiBlQUsvC
nbibAZHO8sA+oVnAJ2W7bKfAgD77DriYSc0Cv8i8USk2BlTFUjHfqTwLbM7d
vXz0zgY1hShICjCcBXuCpKduZ65T9U3MZLI9ZoHSafK7jTerVG0V6zdV1Fkw
rNyVFn9plcrFVpy40TwL0kfDQsX3rFKrRn6rhHfNAhEPpKHf8o/qN8DfLjoz
C9iPH0j2616hmpw5GcOqMgfqJP8GrD5aoRbdVa0TpcyBqN7bFrGuK1Ri1uXJ
KdM5sHS0kzF3bJlqU3pXvtl1DozZuPr0LSxRIw2epZc/ngM5gix7vauXqJpr
f4MGXswBl6+5ssuRS9RA+7BlazQHflhOdgqxLlEP1TeeFhmeA037Q3dZCC5S
P5nFTO9WnQdPYbzIa6156udIxwD3j/PA9EHgmQOLc9SoztfmVj3zoJdm19BT
O0f9vOrWd2t6HvBmy4WtHpyj3pn/U8cltgD8WSv7dvrMUl919J0V9l8AlKbh
HJRPo+Y0JYTaaC2Cz3INa1b+NKrdyeSmcfNFcCq8yHZIn0btf1O6MOi2CB5o
nONg+khQe96ori8kL4JFSfGua03T1LmfKjotbEvgcp6/502TSSrl7bk0kcUl
UGZvuKXo6wTVUbWF6ZvIMvjFydbU6jpBpW4JYqBRloG5z0PNzVF/qMmVIoaG
55YBj079XGLNGLU7eHd4//oySKkWj04m/6ImsIvKlYv9A43eo3qVdSPUOzvr
brAY/wMrEsWjXUdGqPriQU/Ouf0DThfN9m8N/El9aP0tpvzpPyBnGsD/6PkQ
NXlYd7zaeBU4PIwHeyx7qVRRW6+I42vg2ihv1HxAD9WxIXd77qU1UKxzGz25
201dkfh+6FT2GuBoSNrF1t1F3WWgbRLzaw2UzyWbfPT4Rn2w1cCX5rYOBoHY
ldDrHdQ78iphD6LWAXdcap1yYTvVKPFgcfijdeAm+2hPzPQX6oDXqnVtxzpI
8JG6ZiDwhZp1TeA92/Q6qHr1uH5Mr43anN4ffZRjA0inmd5KmmuhRliqvJvW
3wBnSXv5Zrc3U6s6VRokDm2AloZ9iUcuNlL9VsT3KrtvAPnjFgJldR+pHO+j
e1hCN0DY/KE7QpvqqaMykglPb2yAtjhroRDLOqrHRMkA/8MNoCxnc+/b3XfU
Hw5POrY93QAXKm1FKN2IegnwMKxUbYCCRyXbNEEtdcTaLcH74wawbXql/bex
mtriedMyon0DsCzWkF7YvKL68psjxf4NUCz/Ts9/oJQaY9sg4PZ7AzhbfaTo
eL2khkZGUTSmN4DoSkrAyHgBlfKBaeDi/AYIPJId4rmRRQ1rHL5xdGUDpB51
nG1TTaH+KboZXbG2ATK2DC4UFFyhvi1kmbi7sQE62Lt/6jP6AHXLq2Wz2HsS
POfk/ksEo0XzhV/XN8DtHutJKbXHoO6Jrj9pdQP43pUKjL+YC/Zf1YkQWtoA
AoZCflxeReCPzfjW8JkN0EuwlJuqlYBFafXTpyc2wLa6jZLox+VAL/KQ1c/h
DXApeeXlO6EqkO71NWqqC+/fa/45Y2wNiNBa9o5v3QBKxsQzuEEF3538jRrR
BqiJCfkGqt8CVn3RT3klG8BzJtBmIPg9WLm/mKOdvQE2H/Nvv6D1AQyJXf/p
nbQBKj/4Hpb6Uw+sAvdCt6gNwPXglJXT8SZg3lnV9sR+A5QxeX5eFWsBVQ0e
NDYTfD193A+ldbQCy5rEmf0aG6BLWit3KqcN/Od0Ljvv3zpQn1XN0djaAZ4O
/4peSFgHDPn57hGLHeDJ2We5zwPWQccxZfmWjm/A03pAMO/IOrhQr5Dlfes7
sJyalL4hvA7aHkhnFLL0AB6PXy+OJ60BLffp6rdzPaCn577GJd81kKBB/dY1
0gu2hcfs1DZfAxZUZy72D/3gQoB0v+/qKvCYOfS6ePcQEO1ZKf7sugqGRBOU
eJl/AeHPjHwzqv/A7dX5UrHwX+D6jdZyX+Z/AA457VKc/QW6/E8FS/atgIxC
zWNGP0dB69kTrqTEFeC8szXR6/0YiDm0TaRpdRl0u3Gv1UdPgoqz/UXav5ZA
7N7g2K//JgHXCx4NvrolsEOjV7Q/aAp0igeqOWUvgQfzT0nz7n/BeO9/VSbu
S0CjTrGMH6/LbaJCrtuMLYIrFT/CRJ0J4N7sIFjatAh68+N3SaYSgGjgDb9c
tAji4uc/qQjQgJSvVXZg8CL4Y/thHDDNgDXy/Zgb7Itg977zL/cYz4C72XNb
XKcWQKqhZuiBsBmwxWjEL6d9AeyTucdiNzMD1t/UOHhlLoD8cQ9pv+FZoPvi
y+f2XQvAM4Llv7R384Dflv0V8715MNQR8ujxyjwwbFw0crw8D45p/v6VRVoA
U/ZvuTfOzIMj/Y1nC7IWgGuvCZOyxTyA8FZKxeVFMDjYV9zFPg9epzAMVVUv
gvm35+cDF+cAhRag+mZmEahKmd20+j0HNLNsqt+7LQFzzqN2Xz7Oga0sW3vb
di+D+xuKXs1xc+DesTiFjrBlMGt3D7hFzgG+8lWf7yV4u3nnnO6ZOcDuObDW
J7cCZHf7r0UfmQNzH3OkJ5j+AcHNkvqvpeZAa5yWO+v7VSA5FrDlVe0sMB/J
eMrxbxXY1t1qjS2dBXVGAnNcumu4zt01EZs/C6qn5q4I4HG1hqHaiOfOLMi1
rM6Vjl4HMh271li8ZoFsvvq03Ot1kFfZmK3kMgvSGB7pK82ugxKuve/9bGfB
neKLDRp43IOWpaVnTGYBuiE3nybLAG/fPbYoKz0L1smOD9J3MkCNXV0THiKz
wHD4zs6MowzQnCWQ0sgzCyp2sF7LTmSAqY0DwbOrM6Bo4rdIISMjZOoOflfb
OwNSDxYZvBpihNcdbudWZ86A0xJWDfwMTLDe9vqaceoMMJiYsfORYoJhyY6t
g0kzoDPGIFTWkQlGBZJyw67MAIG69+VxHUxQW/dc9NKpGXBjRzfJ5SMzFGa6
NvsC12P2nJHvqn8xw9jjMeWftWeAUpf0YWEWFqiumefMqj4D6kJOBDRBFvhE
9UXHS+kZwFBMvNCrZoEnzdbr1zhnwDlldk3OIlbYpqJQITtMA3sXCmrcm1nh
c/Wi7uA+GhD5YGFRO84KhXounO/qooEytyTvICU26Gq5mbXtM65nH0kW9j1m
g2HWBm/O1dKAp5CeckkSO5w0krY/l04D5J+dFdzF7DC4U0ugLJUGWErOm538
zA69GcQdV+/jetSSekKCmwPO7Yz8WHwL18Ox+3OuXeWAJ2LsrxReooH/GF1l
Hc9xws/Wab6FJ2lg0xHPb8r3OWEZbW9prgcNoBzvG3OlnHBCKN/6mSsNaJif
pcVPc0IhX8jW7oj3dyvuLfLcBG+rU4NirWigRKLCVek/Lti0cfHmFUMaOOX3
Wng2kAsqyEpcZduOn1OEGqm3ueD06fn2WxQaiHVv1jnawgWdLbrYKnVowLVw
kPGmCTdUzVHsc1ShAT4DriyaDg9MrIpJ7xGhgfobfLa1ljzwhvE/wY9CNBDR
I7wpzpcHPj/kf6wSjwO/L8gEKhTwQGZvV8FnvDRQ+4G8206GF769n/L7GxsN
+B5xGa7h3QzVYiMK5ZYIcOKVA39dCB98HvmzWr2fAA1VLc0F0XywRMHrUUMv
ATRqjK/dSuSDb8h3mk/1EGAOyf1zKOKDstxlwyVdBLjS9GeENsIHLW5HT/i0
EyCrL6xS2oYfLjHnHPFvJADb4GQgqxs/3D2keG1nAwG8hp01J87ww+8+Z4N4
PhJA5/furIo4fugAUp3L6wiAiE03D77nh/5nnz1SQAToZ354PJwkAHnXzSzC
8Pp1NxvPVlcoAFMs1XLPVBAgl+Nih9khAegvpLb3ZDkBfHnc9wl4CUCm4iFT
p1ICrIqo6xZkCkBWjqwo9xcEEFd7zfadTxA2dKc0tOP1tL1VTxFpWhBalkhP
0cdVFg+mftN1QThaEbgB8Hq9OFSV145HCK7rxy654/X8psehfuHqQtCh9cqN
4vsEqJkS1Ko7KQQ9eqTuut0hgHScxcv/BoWg4PgAIRpPgJb0oMGT00JQ49sP
XtubBDhXksoXti4EWTNOfrgXR4C2H2P+6RLCcLRk4I9YLAEuq1zV+W0vDAMU
GjL0rhNg9MObknNfhOFVXzudl5cIkPRjZDh2UBg+P09MsGKDKS7BR9PC0Da9
duNYFAFShByC3vKIQPajnQqbLxJgv/uC7qb9IpC8zZclOoIAzxm0yh++E4F+
vqoGuaEECDHMeFVbKgrvKrR5f/AjQGE+xbztrSjMt2jh3Ic9KNzaNfRZFFZ8
unW51Re3Rywvs0yKwj8OmatdPgSQeXLE6IDCFmhw5mbfshcBmnjZ336/uwXm
SoRUup7E12PYt4kIEYO1mUtrb1zwvGbJ4sh0RQyOCMfcPIodW5M6IZgkBj/9
KUfzx3H/uv+RW/+5GOwKdBPSxm46IGsZOSoGj99gNHnmRIDg8o52TrutMDv+
W8pbBwI0xhj2yRmIw+7Mk8/s/iNAoD5z1NQecdhVR5Jgx9462iRXeUQcFtOu
s72yIYCPicOpg2fEYdsF9r1bsPnWz82G5orDLG4np8HDBLANquBsFZKA0v7P
RK5ZEWDYSYcSSpOATC2uw7IWBIjjXu7atSEBzf94LPQfIIDeaxTOzSMJj1x9
5EV/H3h1i9XbTBVJeIJ30H8Ltkq7n0XLcUlYEeswJLSfAH7mz9xkP0lC84Oo
RsqcACsk5VvNhVIwIeXZeoApASZnsvPeVUnBF1t/CJOx+0pkUFWDFOzcLnh9
yQQ/H6StNLyihCaFq8FR2NdIPEeuyEnDIlYhn7u7CcBPmhXZmSoNWRz79Vsg
Ae6mHLf8bioDOfReC4fS36cuPeo5bCEDS+xKDE2xr9n3nvx0RAZ2P+jJ58cO
3XI06oObDBQ6Q7UtMiKAQ8rh4tIoGThweGzmtyG+nyl7BG/XyMAcb723p3fQ
3w+qfzfXk4W3s/VvpekT4GROpqCpoSzM+MuVFIytUCxqBXbLQoLhar0FdnoT
cyPZShaG3lB6v0YhwJ21nmo5H1mYpJPI5IYd4X4zfTVbFr7KOGinSybAIa2p
Ey8F5WAPY6jLIokAXEbuWU+3ykF9bz+Ob9gN5j/6c2XlYJaS6o8S+vtutw92
j7TkoArP9Kwftv69R/tiD8jB3q/MHOM6uL/+O6jpES0HP31hOTuiTYDZ+udz
orNy8ETP8b6Fbbh/HtvwLliRg8xuP150YlfQLH/uYJKH9jUMhRXY5yRoX5z4
sVudhEKx1wN0X2RrycNXiQnVy5p4fJCsPK3lIw+jF3ZuYcOWC3rbb/ZLHj7+
UBa3XR2PlxwCtl2T8nA3+/CwJPavR26tp+dwewffODBh5zcw19xkVoDbmKqe
NqsRYJuU2YOvsgpQmT+09Tj2jsamI87OCjDJ88NovCoBrKU7GkK+K8AP9//o
M6gQ4KzrMeJavwKs0302OK5MgLTsEdGUXwqw+bl0Zjv2mPK8Z/WsAuyXeHQq
DztKW4R1Y7MizMqI5rWif1/ZZb8rxlwRRvcYPHyiRABej96q1CpFKMJtNumi
iPt7rsfQU6QIaysCrA9iO4xNcrz5qAhPOJY3bcfO9VmzG/imCFecJZcFsHeG
SC3IzyjCAq683fUK+Pm75kIqUlOCQ997A7Wxm/JHCqkPleBh3ZeZAvK4P8Vd
dSzKUoJ/i+2LGbFv+ClxPyxQgiZzF78QuC421zvle/aVErTR/rf7M/ZH6oSW
ZrsSrFW6MHYTu65zpix1kzJk+DGiwYVdy8JIDTmvDKfirm4VlMX973fmGfco
ZVgfnynMgh3ZtFvG+roynDFakJqXIYDR7SuXNO4pw83t7Me+Y78W5zD9+VIZ
BkexXEjDriRtbrQaU4ZB8qFHVLFLXCTb1e1U4GX7uB8W0gSgtKTUvnBWgTSF
8GPG2NX6QoW6nipwE8PUlBb2O16uS4YhKpCbk99IEPtrzdK2A3dU4FuP0Ohu
KQLQtnTEen1WgY1qqy+8sbW/xO4u2KsKGZr4NqdIEuDFrqViJQM1GJgt/lRY
ggBLR58eVANqEJa8EubChoHO45pmanDAvfkGA3ZbVp0M2UYNXmwgJUyIE2CG
OfGWib8a/KI6x/YOm1Kv6uuSrwarPBle+mPX7HdUSd2iDh/E1Wd0bMXP15Ha
dJ5ldWhtZ6pcLkaA8rkDIXkMGjC5yn3+KXbWvR8HdnFowM0BOi1Z2OHf55aC
RTXgAd+yO7extzmqH+kla0ATbfcbPth33VLYnwZqQCGnQXYl7OMBgf7mkxqQ
3ylL9PEWAiwkKO2OHtCEKuqiXXmiuP+2tWQuj2rCMOmNMvr3bhOBIEb/v5qw
+WRIygPs2/eo6NiaJuxXmw+Mw1ZLswcU8W0wtSgt5Ay2U0Gs0bjtNrjN9cIz
A+y6938plp+2wUcjuVWfRfB8ulShLv5GC1amcunQv9evjd415K/TgvfOBYzR
v+ef+hZ4gL1ZC2qe989hwTYu2eY926UFnf+qq60IE2DcO7eweU4L3h3R9/mF
nTHdJGQsog3nLJ5+rMFedKu+8/egNiQvbvrgh63hUPDwtLU2vM8jzemF7Wad
kj1iow0nd3hYn8BuAWdLux21oUZnyF96XiFLgtRef1ob8le6OezDPtRZIPD4
Km5voX1BAfvJvgeJlm+04Zvyg9sG6HmLq/MVwm+1oeRCS3I3dhmy7u2p04Zl
Bm2sndh1+puUT7VoQ4m7/023YA8rhtdE9WhDaMywVI0txeT0u3hZG2qNsvcl
Y6dUy+wUoujAE977Bm2wZRYi3Lq368BjyrodVth5Oj+uZ+zUgQ+kQIsFdkV+
4leNPTrwaExJAz0v8u0+06k9NjpQOblqRg9bIGgk6WygDuT5Psohgh2nnj/W
9VwHZkZ4qtPzKcE7ZUadS3SgXWtB93dsZ8uUnyPlOrBuO4in51tIQTH9RI0O
3J1nv9qK3V19qoOjWQfKKPExvcVW2a+KDH7rwPC1iYI87A+nCpNTpEkw0yvL
mZ6neR4md09KngRLOO8FB2On3ExNylEiwQT9jHh6/sbnZWz8S00SPJ613EDP
6wgteUU3GJLgSG+shwu223X1M0t2JAgYqJr7sTeePDOzv02CdlUP1qTp+RuO
4piWOyQYJ2cdJYl906u8CSaT4JBSOys9L7RVq/aQajoJ7qzQERPB1qv8bLvy
lAS/muq5cmN7Nc14pn0kQVYvrZBlAXz9/hpcH1wnwdPK9jnfsCWsdzbaMOlC
l+qZyHZst9JdXI2sutDpg7bDF2widP+tYm5dmNWctLUVexPjseTLW3UhteBz
dR02FLyYp0DRhflgx7ky7Kf6Hz6e8tWFGx0JA/ewTfspyioBunBR//fPO9i9
V/Kv/Q7WhXHTuhP0vBbv17g9nhG6EKQ9YUrADvQ5/N49ThfmiDbaXMM2yByo
dS7A7R/muxqKXb9ppdzmly7cVc3Iewz7eLG3sNC4LjzR99rPAXvJri+4fVIX
hs/v/UrPn6k9QbqH53Shv97XTHpeLR5cL7Zk1oOCmXfdLLFtgoWK9svqQckc
Fi8Tep6rb1sOdNKD231iYun5uF6Hmh6qix4ceBx/VAO76/s+QeChB890TqvR
83Sfvnhc3umtBxlGGzpU6Pm8D6kuO87rwRMcb0wVsJOK2CT17unBZ0Dznjh9
/2p3bUpT9KD49jc3tmLH5MneJKXpwViNzCgx7AuZRv+0s/Wg9R+3EHqez+te
4A/NYj3o70ENE8Q2iey/p9yqB33dfefoeUDjFe/W3DY9qNDCwEv3jtBlFqUO
PchxfFB1E7Z2gFCwQo8etN1++RQ9XyhxYv9h2XE9WBJhysiKPWdRwSvOSoZm
TCcy1un5zUYTs1QOMnzWcb2fnl/8Y/YlUoybDGVIhBTdg3ByUlSQDB02386l
5x1b9OSahWTJUEKC6csS9hOJhOu8O8lQP9E1aRZ7zqmqdx6S4TvjS8Mz2KaP
R3T6TMkQvvUj0z0ia9j71IIMxVKKf9LzmHLKY9r7jpFhPLnZ9S924CnBa9ou
ZBiqdKhhCvttgXGPqAcZGqGHOnS7aNy7OupNhq3n73FPYqfr7O6ODidDFcry
T3o+9G+gr5b3RTJUv/PRhe6dZSlXDkfj7X1Og/Q8aS9leptsHBnu+Df4m543
FTdKi65NJUMB0e1bRrG9Ij92PUknQ/brxk/pedXq2hnN+CwytEnm3EW3w659
XY6FZJh4ZzqYnndNMVvQWK4iw3m9uTV6XnbsuuzlwTdkKNIpnUe3fqPF949v
yfDc9s1H6O48kH3pfiMZ3j5nUErP3yrFf+qMbCVDZ1rASbrPflpWP/GFDB94
+knRLWxt1an7gwwD77y4S8/veiSFq4v3kWHb/OyR/83ztudGMQ2RoW7hijDd
NrZral/GyPB8wKEsej44J1klqnKSDDuNHvrQPdt15NtjggwVmgu2053kWHjR
b4kM/cu4eul55OG0bx3/rZLhtW/OxXTr9DOo7WSgwM49QTfojpLWuKjAQoHF
k+YedLe52HVwcVCgXOnALrplsi6rznJR4K9ofTm6z/wsutC9mQJPHLBipbtW
4Uf7W0EKbFpUnaDnrXk9WVQLRClw9FxdO93OeVoXbotToDmSptJdNObQHipN
gdveGhbRvap6TeW4PAXG+G9Jp9vCuzjSTJkCN+rKE+lOe9b7VVOdAn9XCMbQ
PTnFriKsRYFWkHTpf/PnWrqRqyQKnD3GH0n3/+XT4f/n0/8HoVegwg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
snjB9v/lXeH/513/B7RmpY0=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
Vhujcwcijv233+P/9oOg/98P8j92zKuM
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk (alpha=\\!\\(TraditionalForm\\`0.1`\\), \
beta=\\!\\(TraditionalForm\\`5\\))\"", 
        StringForm["Sk (alpha=``, beta=``)", 0.1, 5], Editable -> False], 
       TraditionalForm], 
     PlotRange -> {{-22.214413784081028`, 22.214413784081028`}, {0.8, 2.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"ImMid+SSA(BE-Mid)\"", "\"ImMid+SSA(CN-Mid)\"", "\"Exact\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.676901013428475*^9, 3.676901437274213*^9, 3.676901537748494*^9, {
   3.676901575861133*^9, 3.676901585296535*^9}, 3.676901641205266*^9, 
   3.676901765573063*^9, 3.676901851854536*^9, 3.676901895211459*^9, {
   3.676902019005694*^9, 3.6769020536042643`*^9}, 3.676902387805354*^9, 
   3.6769304319142933`*^9, 3.676930524955545*^9, {3.67693058306161*^9, 
   3.676930612587983*^9}, 3.6769307082865543`*^9, 3.676930757206361*^9, 
   3.676930791460737*^9, 3.676930831841861*^9, 3.676930896107695*^9, 
   3.677111330206133*^9, 3.677262234423168*^9, 3.677272232626957*^9, 
   3.6772734633968153`*^9, 3.677273529809362*^9, {3.677274200059683*^9, 
   3.6772742368384743`*^9}, {3.6772742673982067`*^9, 3.677274285170815*^9}, 
   3.6772747987298183`*^9, 3.677599877869865*^9, 3.677852755447777*^9, 
   3.67785311554595*^9, 3.677860245603326*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1:eJw12nc81e//P3Bkj2RE9t57nEPWdZlpikTRQKiQ7IaKohKJaMgmkbYt5FyF
jGREklnIeCOvY898r/O5/X7/1O1+O+dcr3Ndr+frdT1fx0PK7bydBwMdHd0w
/of2f4zfiW/DZDLi72vdeYuPAEbWV9o8dcjobiWdIc1/JZJbJjTI6INlognN
GUtlzT6qZBR05bYFzQdbvzfNKJJRtFv/PpoZ8uYaAuTweOsPHGkuusZTvyBF
RvsOvHGn2d1Bo+6iOBllnFQKollAfX/NmjA+nh7zLZrrmbw/XhMko+YBi2Sa
L/ZHUej5ycjq5J93NCuX5H6I3EZGjLVjjTT33q2tZOEiI12hfX9ovus+9D6a
jYz0fHi33MY2MaIr52Imo0dfDGRozpw0LObbJCHzmQIvmm1rjhY+WiOhC110
CTQzpFx4J7RMQhTuwkqaPfYUvZKgkpDEF0OBKNr3lW5/kT1NQi6X+HfR3LDy
97ncfyQk/c3mMs3K+crPVIZJSGn87xjNveHWT98MktB6j530Hdr3O+KZpdVH
QtbDQidpnmHJTtP7TkKkV+2DNBd7Cj0yryehD3mTG9G045voPfhcQ0Jln733
xtCOL3A4YTciIUu2gyk0X6qLv2fznoSuPbI0u0ubryzrbeeXJLTdZeJVLG38
NbmbA3kk5CEdx3WPNv8O8wjXHBLyc032o3lLRFjY6TQSitwxZBxHm8/vxQuB
cSQ0RWe0EE8b/z1/yGIMCQ2T+c7ep83vvnbQpSgS4rhnO0hzLPT1C7uOjx/F
2JGAbZfx50xMIJ7P/j0/HmD3H+s8+tQRz38h9tATWn0RkQa9h0ioim7rGs2p
ESQRvoMkRD/r8SwZ2+nFo74b1iT0kzeDIRW7a+nISbedJEQONh1Mx25N6HeX
EiEhk8BnUs+w1eXvWR4VJKFnT74v0nzvvYn8fT78+YSRllzsfb8yxug4Sah6
LvP2c9r81Ny8fq3roo7bWSKvsD82jJ7PGNBFnof1W4qwJY89PvijRxc9pH/Q
XowdPrNLi/uHLiKJ//hRQltfgfzZa6266BWnwHQZdsUp7+ATSBe1d982qKLV
+7+Zy2LZuqj7Y6NrHfYz3ZWbKR666PihpNGf2NnU2Ht8broo9cEzzV7s9DfS
j2NO6CKt+ANX+7CTFPc9D3XURYOuIeKDtHoRzWhy3q2Lpnw1w0ewgxgtuUXV
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

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
DaVV+zcq/6kG7UTx2sTTbBC5uWf99p31UBvqjH94s+EZT+CnWfkPUKiqsnb5
SjKewbvWpTd9BPuJwOYYIza0qBhnD2d+hvOux+f6ZufBYFQv03BJE9h4+cs6
XJ0HrtzcXccnmyBVduWp2bB5aNqmo/Gh6Rt00G44TnnOw8lqzYygK9/haMtp
zS7Zefh8U+VePl8btH43SalKngPjXVRZxVgb+LCX1v8JmYPLhvRvLb3tYKn3
5cztNXPgSt8hIljVCWU36Ibdc7MQMLLuVdGKLrh7wWX9+l2z0CV3WVuctw/y
doU9PGnwD67OjhfLR/WBcxZLc4bvH6Cu7Q5ao31w90CyY17nDNzLN9pm19MP
dVI+J18lzcCO5R8T970bgO1WmsGr56eh1V90rjrmLxjs+U6P6J+Ci6sPX2z8
9xesOu6eXFc1BTaG7XKdh4aBW0yYNzFzCm6OPzQb38UA6V1vd/kGTIFhpdaz
RepMuBdWUbhscBLOlvw4JreDCdc/qP534f0ktOcmOCilMWGXbJ/J6sJJiE8Y
b9CVZIHR+9SXUuGT8Gdz1SDwjMDA54GyH4KTsGJN5BMn+xFYNiYtdmt4AtJs
jY66HBuBFakxm2q+TsAa1et8XiMjIMybVrrt/gTkDgaohHSPwo3n9OCtDhMQ
eJxvU/rbcahVqMy4kjwOXU3ht+/OjMO5bw8uVUePwzaj330ZZhMQs3xAZk3I
OHh01h3Jy5gAqztbYwzXjgNCV1JLzkwCPWqRlxv/OLxK5ep6WTYJmffm6yvG
xsCSdVDv9cgk/NPRZUX0joFRhmfZO38ybsGb5/Irx2AJ35L2zyumIas90YHr
whhc3xav2XRsGrrP2O0OjhwDieezwd+fTkNNa0GjZNAYCAb+nOtQnwH/1bZX
FriPwVhNpsoQzz+4GRj230X5MfgYb7yL/90s5GpvzJl7MQrOvfceCv2bBb9Z
/qnbj0ah0k5yTMR8Ds5zpZrtuz8KZcNjZyUfzEHvgbjVMfGjkO1elq0SMw9a
Z192ZviNAo5TH09X40JlfQzBGfJ7P0/bevPOci4k4WDhwyM6CrbdycvveXOh
O23v0wx4R6HEhj/2QSIXstXbktzJGoGCod+y+dzcSE9ltrjk8wikuRVYv+ji
RgIR//WVJY/AXsX1tYu4eFC4c43HdPwIWA+NeAUr86DnS3RaPc+OQPMF66Nq
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
+fRb2qg7uVGxTofMV/y5rQUZ2ii2omP+NHFciLborTxtVMxWVrIldrbYs//I
C22EBDeIFWpTUEMfMjb6qo3aqa7nKVoUVDaPPEtboIOKmHpjYRoUvOHjpodH
6iBRB4PUTSoUPPVV+mrgpYvknj6efCFHgeWH1DePd+iiH7sHPCOJy6yk880D
dZH0m/uDNsRvxUVO24brohyh56VvZCloLJ9a6pKsi4TlnX7XylDAWtx0cd8n
XSS+0WLzbykKTL5cXJG3Wg8d3iYt4iJBwWOHqSJta31Us3a79gNhCqa8H7rp
gz5aGadudJgYhe0YNFqlj3zz33k7EX/OqFSleeqjEhMZzQEhCkZ4E684huqj
cLmdkcbEltV6+31z9dGAts+CKgEKytdu1U1bbID+dPQOLeAj683jzR2xaQP0
+KWE+795BtmvuoTncBmi4BczuV+IM67/cHEQMkQrpXu0c4mjvo9NHZYzRNuH
TS5vIl661cCjnWaI9qd7CT6dY8A1/1TBh2GGaNabO+7gLAN2HgwLdf5riHJj
P88IzzBg4rL2ipifRijsXXJi2jgD0j9/uD/db4QYMS+yIokdJQ9xhzKMkE3i
7LctxFev0/G2OSPEH5d0UY5YP30LWCosRVzr4h1SxhiwPe+i3eDmpeigE+Nr
6igDKt8xLN0bliLZ8sPTRSwGJE2VGCi8NkbXD20XMWEwYK7/mu2iSmMUMJux
Xo54z7cwF8H3xijp1LL8+WEG2D9dGjTaYoy4xTXTPhIPBmXnvx8zRll3jgcF
E9+j6qXtZU1Q//um2oK/DJj0L0tmuJkgZXgrA0MMyFpzM9H9tQkSeljje3OA
AYbnxktkKkzQ6eYV+THEz/CG9rZKE/TYzUgohLjSaoHOng8myN5FkduRuFsr
qjy6zQTVSP7rG/7NAGWe7b+Lpk3QhpGi0NXEqWWqy6UtTZHTzCsL4X4GqE4c
929dZoq0+VTHxvsYkGP64/y95abo58/Q6m7iktzERkMnUzR34NGDcuJvKTx7
nDxNUXr6JjhILHmoN+lImCka42KxOnoZEG+QO9BSaIoO9s/MVPYw4PBy1f4d
T01RLtnuc/4P3+Ge2tP73BQdy//qk0VsduhCJ7PcFFHhfFPniFvL9jQJvTdF
Lj1HBlcT667Vw9a/TRH7zr/7Dd0MqNqTfyNVxQyxS80tf3cxoPCY+nVlDTMU
E1tm+4M49VJaUqa2GUq+VuL+njj4ycWEJ0ZmaEXKaMZjYumpfTG1tmboD6t6
PILY/7zBgSkvMzQfqLBanJid9WjVlqvE9T7Bjr8YsEqo6MKHZDPkVHvsoBXx
pX3P69ENM+TBoscYcPIIxm/W6d0xQ24KmZ+kiC1KP22eeWiGhm8v5+v7yYB9
9SOB6TVmSKFBvj2O+BvD+vyveTPUIz6m3tHJAMUNy+s8ecxRv0Hp20Zi/2IH
kTp+c0Qr4DpQS8w8uvZKkag5UgwVHS4mXsC97caZJebIy/vKyXhiJHUqR9PS
HF0Y8B61I35oVVWzZ785mpif5M/rYMDKTksd3YPmaGpWIOQucfvZ3Njfh82R
8BXT3uvE4o3xToHHzZH8y6oZTj4kLHjju13x5qjtl9/n7cTW93++2ZFnjgwX
OMjLElcvmHnu2WeOjC4NcSe2k/uzKEhGetAcbXE8pBlHPOXVcfjrX3P0/tJ5
z9PE+lnYfOMY8bBTByf/kgDni9x5LdAq9UdXPYg9D0sXrFWzQPbjNVHyxF0d
SzPRduJh7rWP20h/fcrb6L4WaD0tNzqPuOX7GikIsEDqgy/ePiBu+BJwZnmQ
BTp5VnhvKifvU5XmaxNpgUqRif0Z4qQCASWL6xao/3CY0BbiBP1rnsWpFihw
+6WxjcQXctQumaVbIK36wSE34pP37f6ZPLBAJXsDZx2J910P+2FUZIG2BOtn
mhA7nui8rvPRAl3ZKSImSmw/E/Qx+7MF+lno+0iQ2OboNJ92kwV6WtiymZfY
5KD0Yc02C7R/md7HmVYy37vXblQbtECxfYvhD/GYa4m4Aj8NjYtnW77n5MHq
HFelCdHQma5152uI/6z6ckJelIaaYue7OfmoX+jvXzkpGvKeC3rFyU99sFB/
L61GQ53JnsxC4izFy+fFl9PQX0npvdc57W9/2T6OaEjidL9EEvHKu72mHSvJ
8U+8qy8T96rZtj90pSFBJwWfC8TqOgMma7bR0M6gNs3jxGF7pGJNfGkotzNm
WSQnj5Vn3yYXQEOaxfStR4h9Da+f6w+ioZatQ7WhxHdMV7TGRNGQk+ugUyAn
nxi23zjoFA0xabw1u4iXP0s9uzGGhgYnMzf5EbdbUkvV4mmo4/2xW5z8moJd
esybNFJvuWudB/G+EzUtWXdoaC+cKdlAXPZmxCghg4YG+mhF7pw8msOalq35
NPRrndQnTp4uddWE4fRLGro8HfeIk7cbOK925tdrGrL/kszvSGxV5/q9poKG
jP9IBTtw8msuD06n1NGQdMQhP3ti7YSG5hMfacjdZQPTjvhIw7TB7i80dEIx
45ItscyG9c3mP2jobOXNYWtOXjIpykChg4bCzeEpJy/47Gt2NE8XDV357HmW
kyf03Dyn/2WAhl5IN6y3IM68oRtd+peGHiWYuHDyiKMtHt/uMmkotIXLg5Nf
TNqafypkiobuNw9c5OQbu9O/NW2apaGj19llnPyjaSeX/nIuS+S0/MzUUk7+
TcXwlCafJcrYHerI8WdfryYRIeKCulucPKVqxhm9URFLFPoqgZvjAz0FJ1sX
WqJNduWHOXnMN5o/vlZIWaJPvZ7jnPymeCCfXp6cJSoL9YrheEeO8cmrCpao
J+OdMscFAz5fj6pYokCnmzWcfOisXqzuTg1LlKPXcoJj16CiE6t0LNEi3WgH
jtMftTcaGVgiB9VESY7/DgvqyhhbItXpBaz/zbMam5+YNbNEtfeG2zn+v7wr
+v+86/8AzSadrA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
Vhujcwcijv233+P/9oOg/98P8j92zKuM
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk (alpha=\\!\\(TraditionalForm\\`0.1`\\), \
beta=\\!\\(TraditionalForm\\`5\\))\"", 
        StringForm["Sk (alpha=``, beta=``)", 0.1, 5], Editable -> False], 
       TraditionalForm], 
     PlotRange -> {{-22.214413784081028`, 22.214413784081028`}, {0.8, 2.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"ImMid+Tau(BE-Mid)\"", "\"ImMid+Tau(CN-Mid)\"", "\"Exact\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.676901013428475*^9, 3.676901437274213*^9, 3.676901537748494*^9, {
   3.676901575861133*^9, 3.676901585296535*^9}, 3.676901641205266*^9, 
   3.676901765573063*^9, 3.676901851854536*^9, 3.676901895211459*^9, {
   3.676902019005694*^9, 3.6769020536042643`*^9}, 3.676902387805354*^9, 
   3.6769304319142933`*^9, 3.676930524955545*^9, {3.67693058306161*^9, 
   3.676930612587983*^9}, 3.6769307082865543`*^9, 3.676930757206361*^9, 
   3.676930791460737*^9, 3.676930831841861*^9, 3.676930896107695*^9, 
   3.677111330206133*^9, 3.677262234423168*^9, 3.677272232626957*^9, 
   3.6772734633968153`*^9, 3.677273529809362*^9, {3.677274200059683*^9, 
   3.6772742368384743`*^9}, {3.6772742673982067`*^9, 3.677274285170815*^9}, 
   3.6772747987298183`*^9, 3.677599877869865*^9, 3.677852755447777*^9, 
   3.67785311554595*^9, 3.677860246440189*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
Y+022/XB/1dPDP+/nvh/ADaZ9A==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
1Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.5, 0, 0.5], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1:eJw12nc81e//P3Bkj2RE9t57nEPWdZlpikTRQKiQ7IaKohKJaMgmkbYt5FyF
jGREklnIeCOvY898r/O5/X7/1O1+O+dcr3Ndr+frdT1fx0PK7bydBwMdHd0w
/of2f4zfiW/DZDLi72vdeYuPAEbWV9o8dcjobiWdIc1/JZJbJjTI6INlognN
GUtlzT6qZBR05bYFzQdbvzfNKJJRtFv/PpoZ8uYaAuTweOsPHGkuusZTvyBF
RvsOvHGn2d1Bo+6iOBllnFQKollAfX/NmjA+nh7zLZrrmbw/XhMko+YBi2Sa
L/ZHUej5ycjq5J93NCuX5H6I3EZGjLVjjTT33q2tZOEiI12hfX9ovus+9D6a
jYz0fHi33MY2MaIr52Imo0dfDGRozpw0LObbJCHzmQIvmm1rjhY+WiOhC110
CTQzpFx4J7RMQhTuwkqaPfYUvZKgkpDEF0OBKNr3lW5/kT1NQi6X+HfR3LDy
97ncfyQk/c3mMs3K+crPVIZJSGn87xjNveHWT98MktB6j530Hdr3O+KZpdVH
QtbDQidpnmHJTtP7TkKkV+2DNBd7Cj0yryehD3mTG9G045voPfhcQ0Jln733
xtCOL3A4YTciIUu2gyk0X6qLv2fznoSuPbI0u0ubryzrbeeXJLTdZeJVLG38
NbmbA3kk5CEdx3WPNv8O8wjXHBLyc032o3lLRFjY6TQSitwxZBxHm8/vxQuB
cSQ0RWe0EE8b/z1/yGIMCQ2T+c7ep83vvnbQpSgS4rhnO0hzLPT1C7uOjx/F
2JGAbZfx50xMIJ7P/j0/HmD3H+s8+tQRz38h9tATWn0RkQa9h0ioim7rGs2p
ESQRvoMkRD/r8SwZ2+nFo74b1iT0kzeDIRW7a+nISbedJEQONh1Mx25N6HeX
EiEhk8BnUs+w1eXvWR4VJKFnT74v0nzvvYn8fT78+YSRllzsfb8yxug4Sah6
LvP2c9r81Ny8fq3roo7bWSKvsD82jJ7PGNBFnof1W4qwJY89PvijRxc9pH/Q
XowdPrNLi/uHLiKJ//hRQltfgfzZa6266BWnwHQZdsUp7+ATSBe1d982qKLV
+7+Zy2LZuqj7Y6NrHfYz3ZWbKR666PihpNGf2NnU2Ht8broo9cEzzV7s9DfS
j2NO6CKt+ANX+7CTFPc9D3XURYOuIeKDtHoRzWhy3q2Lpnw1w0ewgxgtuUXV
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

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{0, Small}]], 
       LineBox[CompressedData["
1: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
Vhujcwcijv233+P/9oOg/98P8j92zKuM
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk (alpha=\\!\\(TraditionalForm\\`0.1`\\), \
beta=\\!\\(TraditionalForm\\`5\\))\"", 
        StringForm["Sk (alpha=``, beta=``)", 0.1, 5], Editable -> False], 
       TraditionalForm], 
     PlotRange -> {{-22.214413784081028`, 22.214413784081028`}, {0.8, 2.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"CN/2+SSA+CN/2\"", "\"CN/2+Tau+CN/2\"", "\"ImMid+SSA(BE-Mid)\"", 
       "\"ImMid+Tau(BE-Mid)\"", "\"Exact\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.676901013428475*^9, 3.676901437274213*^9, 3.676901537748494*^9, {
   3.676901575861133*^9, 3.676901585296535*^9}, 3.676901641205266*^9, 
   3.676901765573063*^9, 3.676901851854536*^9, 3.676901895211459*^9, {
   3.676902019005694*^9, 3.6769020536042643`*^9}, 3.676902387805354*^9, 
   3.6769304319142933`*^9, 3.676930524955545*^9, {3.67693058306161*^9, 
   3.676930612587983*^9}, 3.6769307082865543`*^9, 3.676930757206361*^9, 
   3.676930791460737*^9, 3.676930831841861*^9, 3.676930896107695*^9, 
   3.677111330206133*^9, 3.677262234423168*^9, 3.677272232626957*^9, 
   3.6772734633968153`*^9, 3.677273529809362*^9, {3.677274200059683*^9, 
   3.6772742368384743`*^9}, {3.6772742673982067`*^9, 3.677274285170815*^9}, 
   3.6772747987298183`*^9, 3.677599877869865*^9, 3.677852755447777*^9, 
   3.67785311554595*^9, 3.677860247556264*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha0", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"S5", "[", 
         RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], "-", 
        RowBox[{"S0", "[", "xi", "]"}]}], ",", 
       RowBox[{
        RowBox[{"S7", "[", 
         RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], "-", 
        RowBox[{"S0", "[", "xi", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", 
       RowBox[{"-", 
        RowBox[{"xiMax", "[", 
         RowBox[{"alpha0", ",", "beta"}], "]"}]}], ",", 
       RowBox[{"xiMax", "[", 
        RowBox[{"alpha0", ",", "beta"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ImMid+SSA(BE-Mid)\>\"", ",", "\"\<ImMid+Tau(BE-Mid)\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"beta", ",", "1", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676900754450878*^9, 3.676900800108453*^9}, {
  3.6769008408863573`*^9, 3.67690084671015*^9}, {3.676931233413397*^9, 
  3.67693123862461*^9}, {3.6772743709988537`*^9, 3.677274371856097*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`beta$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`beta$$], 1, 10}}, Typeset`size$$ = {
    546., {108., 114.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`beta$11616$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`beta$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`beta$$, $CellContext`beta$11616$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`S5[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$] - $CellContext`S0[$CellContext`xi], \
$CellContext`S7[$CellContext`xi, $CellContext`alpha0, $CellContext`beta$$] - \
$CellContext`S0[$CellContext`xi]}, {$CellContext`xi, \
-$CellContext`xiMax[$CellContext`alpha0, $CellContext`beta$$], 
         $CellContext`xiMax[$CellContext`alpha0, $CellContext`beta$$]}, 
        PlotStyle -> {Blue, Green}, 
        PlotLegends -> {"ImMid+SSA(BE-Mid)", "ImMid+Tau(BE-Mid)"}], 
      "Specifications" :> {{$CellContext`beta$$, 1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{593., {152., 159.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.676900801174797*^9, 3.676900847631192*^9, 
  3.6769312396256313`*^9, 3.677262238459256*^9, 3.677272249392992*^9, 
  3.677273468248116*^9, 3.67727437343917*^9, 3.6772746389422503`*^9, 
  3.6772748300490723`*^9, 3.677599883753989*^9, 3.677853118763342*^9, 
  3.677860251648402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha0", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta0", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"S5", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], "-", 
      RowBox[{"S0", "[", "xi", "]"}]}], ",", 
     RowBox[{
      RowBox[{"S7", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], "-", 
      RowBox[{"S0", "[", "xi", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta0"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta0"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ImMid+SSA(BE-Mid)\>\"", ",", "\"\<ImMid+Tau(BE-Mid)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Sk-Sk_exact (alpha=``, beta=``)\>\"", ",", "alpha0", ",", "beta0"}],
      "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676902134801133*^9, 3.676902148484263*^9}, {
  3.676902208252452*^9, 3.6769023377728653`*^9}, {3.676931260119006*^9, 
  3.67693126312538*^9}, {3.6772743034719477`*^9, 3.677274332631175*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
XijvTf3f/6eM////9H/ix/5N
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1: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
//8e/T8QLs6U
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk-Sk_exact (alpha=\\!\\(TraditionalForm\\`0.1`\\), \
beta=\\!\\(TraditionalForm\\`5\\))\"", 
        StringForm["Sk-Sk_exact (alpha=``, beta=``)", 0.1, 5], Editable -> 
        False], TraditionalForm], 
     PlotRange -> {{-22.21441469079183, 
      22.21441469079183}, {-0.0022978940107118984`, 0.002744353850539616}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ImMid+SSA(BE-Mid)\"", "\"ImMid+Tau(BE-Mid)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6769021413507233`*^9, 3.676902149177918*^9}, {
   3.676902242365548*^9, 3.676902269206544*^9}, 3.676902310810348*^9, 
   3.6769025987457743`*^9, 3.676931265049385*^9, 3.6772622404902*^9, {
   3.6772722520452633`*^9, 3.6772722609796257`*^9}, 3.677273470598071*^9, {
   3.677274319192463*^9, 3.677274333290696*^9}, 3.6772746431160192`*^9, 
   3.677274831408389*^9, 3.677599885305677*^9, 3.6778531192327967`*^9, 
   3.677860253418962*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"beta0", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S5", "[", 
        RowBox[{"xi", ",", "alpha", ",", "beta0"}], "]"}], ",", 
       RowBox[{"S7", "[", 
        RowBox[{"xi", ",", "alpha", ",", "beta0"}], "]"}], ",", 
       RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", 
       RowBox[{"-", 
        RowBox[{"xiMax", "[", 
         RowBox[{"alpha", ",", "beta0"}], "]"}]}], ",", 
       RowBox[{"xiMax", "[", 
        RowBox[{"alpha", ",", "beta0"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.5", "nbVal"}], ",", 
        RowBox[{"1.25", 
         RowBox[{"S0", "[", "0", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue", ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ImMid+SSA(BE-Mid)\>\"", ",", "\"\<ImMid+Tau(BE-Mid)\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"alpha", ",", "0.01", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.66109688043491*^9, 3.661096960498457*^9}, {
  3.6610969934827147`*^9, 3.661096993701192*^9}, {3.6610970941621923`*^9, 
  3.661097094361486*^9}, {3.661105586200385*^9, 3.6611055870502787`*^9}, {
  3.661105793096911*^9, 3.661105793241521*^9}, {3.661121292690547*^9, 
  3.6611213411301527`*^9}, {3.661121603953773*^9, 3.661121604179475*^9}, {
  3.661121942455517*^9, 3.6611219426228933`*^9}, {3.6612887455186453`*^9, 
  3.661288760237451*^9}, {3.676854988052991*^9, 3.676854989408162*^9}, {
  3.6768605540018053`*^9, 3.676860592969921*^9}, {3.67693127640458*^9, 
  3.6769312946057796`*^9}, {3.6772748668606653`*^9, 3.6772748677683*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`alpha$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`alpha$$], 0.01, 1}}, Typeset`size$$ = {
    546., {121., 127.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`alpha$11915$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`alpha$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`alpha$$, $CellContext`alpha$11915$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`S5[$CellContext`xi, $CellContext`alpha$$, \
$CellContext`beta0], 
         $CellContext`S7[$CellContext`xi, $CellContext`alpha$$, \
$CellContext`beta0], 
         $CellContext`S0[$CellContext`xi]}, {$CellContext`xi, \
-$CellContext`xiMax[$CellContext`alpha$$, $CellContext`beta0], 
         $CellContext`xiMax[$CellContext`alpha$$, $CellContext`beta0]}, 
        PlotRange -> {0.5 $CellContext`nbVal, 1.25 $CellContext`S0[0]}, 
        PlotStyle -> {Red, Blue, {Black, Dashed}}, 
        PlotLegends -> {"ImMid+SSA(BE-Mid)", "ImMid+Tau(BE-Mid)"}], 
      "Specifications" :> {{$CellContext`alpha$$, 0.01, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{593., {165., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.661096923881075*^9, 3.661096962137998*^9}, 
   3.661096995128049*^9, 3.661097095669503*^9, 3.661097144013661*^9, 
   3.6610973232472687`*^9, {3.661105706917499*^9, 3.661105714192765*^9}, 
   3.66110579391858*^9, {3.661105947617444*^9, 3.661105958869809*^9}, 
   3.661107214327496*^9, 3.661115245396696*^9, {3.6611213112301273`*^9, 
   3.661121341710643*^9}, 3.66112160515853*^9, {3.661121932295775*^9, 
   3.661121943451354*^9}, 3.6612044497032022`*^9, 3.6612686913762608`*^9, 
   3.661268940166773*^9, 3.661276480057065*^9, 3.661288761825781*^9, 
   3.6612940596657457`*^9, 3.662919622889748*^9, 3.663081297257173*^9, 
   3.666993310244007*^9, 3.676854990740069*^9, {3.676860572803095*^9, 
   3.67686059354867*^9}, 3.676902109984035*^9, 3.676931295870047*^9, 
   3.677112158995337*^9, 3.677262242578191*^9, 3.677272262557003*^9, 
   3.67727232223523*^9, 3.677273472135261*^9, 3.677273540637313*^9, 
   3.6772748705913887`*^9, 3.6775998860955257`*^9, 3.6778527707258797`*^9, 
   3.6778531194114647`*^9, 3.67786025429597*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison of Explicit Schemes ", "Subsection",
 CellChangeTimes->{{3.6771119481800137`*^9, 3.6771119749079657`*^9}, {
  3.6771121204756527`*^9, 3.677112136243631*^9}, {3.677274891667213*^9, 
  3.677274892601809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha0", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S9", "[", 
        RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], ",", 
       RowBox[{"S10", "[", 
        RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], ",", 
       RowBox[{"S11", "[", 
        RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], ",", 
       RowBox[{"S12", "[", 
        RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], ",", 
       RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", 
       RowBox[{"-", 
        RowBox[{"xiMax", "[", 
         RowBox[{"alpha0", ",", "beta"}], "]"}]}], ",", 
       RowBox[{"xiMax", "[", 
        RowBox[{"alpha0", ",", "beta"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2.1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Red", ",", "Blue", ",", "Green", ",", "Purple", ",", "Black"}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ExMid+SSA\>\"", ",", "\"\<ExMid+Tau\>\"", ",", 
        "\"\<MN2+SSA+MN2\>\"", ",", "\"\<SSA2+MN+SSA2\>\"", ",", 
        "\"\<Exact\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"beta", ",", 
     RowBox[{"2", "alpha0"}], ",", "0.25"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"S9", "[", 
         RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], "-", 
        RowBox[{"S0", "[", "xi", "]"}]}], ",", 
       RowBox[{
        RowBox[{"S10", "[", 
         RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], "-", 
        RowBox[{"S0", "[", "xi", "]"}]}], ",", 
       RowBox[{
        RowBox[{"S11", "[", 
         RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], "-", 
        RowBox[{"S0", "[", "xi", "]"}]}], ",", 
       RowBox[{
        RowBox[{"S12", "[", 
         RowBox[{"xi", ",", "alpha0", ",", "beta"}], "]"}], "-", 
        RowBox[{"S0", "[", "xi", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", 
       RowBox[{"-", 
        RowBox[{"xiMax", "[", 
         RowBox[{"alpha0", ",", "beta"}], "]"}]}], ",", 
       RowBox[{"xiMax", "[", 
        RowBox[{"alpha0", ",", "beta"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Purple"}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ExMid+SSA\>\"", ",", "\"\<ExMid+Tau\>\"", ",", 
        "\"\<MN/2+SSA+MN/2\>\"", ",", "\"\<SSA/2+MN+SSA/2\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"beta", ",", 
     RowBox[{"2", "alpha0"}], ",", "0.25"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.677263125081874*^9, 3.6772632239199*^9}, {
  3.677263311576642*^9, 3.677263312408757*^9}, {3.677263354568912*^9, 
  3.677263354800552*^9}, {3.6772634381608047`*^9, 3.677263438496778*^9}, {
  3.677263482472826*^9, 3.6772635440232897`*^9}, {3.677272278133873*^9, 
  3.677272304840714*^9}, {3.677272348666337*^9, 3.677272350368413*^9}, {
  3.677272408732052*^9, 3.677272409203187*^9}, {3.677272446203115*^9, 
  3.677272448371292*^9}, {3.6772735618801003`*^9, 3.6772735772920303`*^9}, {
  3.6772753457947817`*^9, 3.677275354649456*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`beta$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`beta$$], 0.1, 0.25}}, Typeset`size$$ = {
    523., {118., 123.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`beta$11998$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`beta$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`beta$$, $CellContext`beta$11998$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`S9[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$], 
         $CellContext`S10[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$], 
         $CellContext`S11[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$], 
         $CellContext`S12[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$], 
         $CellContext`S0[$CellContext`xi]}, {$CellContext`xi, \
-$CellContext`xiMax[$CellContext`alpha0, $CellContext`beta$$], 
         $CellContext`xiMax[$CellContext`alpha0, $CellContext`beta$$]}, 
        PlotRange -> {0.8, 2.1}, 
        PlotStyle -> {Red, Blue, Green, Purple, Black}, 
        PlotLegends -> {
         "ExMid+SSA", "ExMid+Tau", "MN2+SSA+MN2", "SSA2+MN+SSA2", "Exact"}], 
      "Specifications" :> {{$CellContext`beta$$, 0.1, 0.25}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{570., {161., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.677263202665365*^9, 3.677263224833158*^9}, 
   3.677263313491927*^9, 3.6772633555504932`*^9, 3.677263439859908*^9, {
   3.677263536001384*^9, 3.6772635452601547`*^9}, {3.677272271817255*^9, 
   3.677272351069352*^9}, 3.677272410921049*^9, 3.677272449134883*^9, {
   3.6772734752171926`*^9, 3.6772734857914352`*^9}, 3.677273583020615*^9, 
   3.6772748942789507`*^9, 3.677275357339182*^9, 3.6775998890957413`*^9, 
   3.677852775162328*^9, 3.6778531200431433`*^9, 3.677860255456636*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`beta$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`beta$$], 0.1, 0.25}}, Typeset`size$$ = {
    533., {112., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`beta$12022$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`beta$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`beta$$, $CellContext`beta$12022$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`S9[$CellContext`xi, $CellContext`alpha0, \
$CellContext`beta$$] - $CellContext`S0[$CellContext`xi], \
$CellContext`S10[$CellContext`xi, $CellContext`alpha0, $CellContext`beta$$] - \
$CellContext`S0[$CellContext`xi], $CellContext`S11[$CellContext`xi, \
$CellContext`alpha0, $CellContext`beta$$] - $CellContext`S0[$CellContext`xi], \
$CellContext`S12[$CellContext`xi, $CellContext`alpha0, $CellContext`beta$$] - \
$CellContext`S0[$CellContext`xi]}, {$CellContext`xi, \
-$CellContext`xiMax[$CellContext`alpha0, $CellContext`beta$$], 
         $CellContext`xiMax[$CellContext`alpha0, $CellContext`beta$$]}, 
        PlotStyle -> {Red, Blue, Green, Purple}, 
        PlotLegends -> {
         "ExMid+SSA", "ExMid+Tau", "MN/2+SSA+MN/2", "SSA/2+MN+SSA/2"}], 
      "Specifications" :> {{$CellContext`beta$$, 0.1, 0.25}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{580., {156., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.677263202665365*^9, 3.677263224833158*^9}, 
   3.677263313491927*^9, 3.6772633555504932`*^9, 3.677263439859908*^9, {
   3.677263536001384*^9, 3.6772635452601547`*^9}, {3.677272271817255*^9, 
   3.677272351069352*^9}, 3.677272410921049*^9, 3.677272449134883*^9, {
   3.6772734752171926`*^9, 3.6772734857914352`*^9}, 3.677273583020615*^9, 
   3.6772748942789507`*^9, 3.677275357339182*^9, 3.6775998890957413`*^9, 
   3.677852775162328*^9, 3.6778531200431433`*^9, 3.6778602562520733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha0", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta0", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S9", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S10", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S11", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S12", "[", 
      RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], ",", 
     RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta0"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta0"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Purple", ",", "Black"}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ExMid+SSA\>\"", ",", "\"\<ExMid+Tau\>\"", ",", 
      "\"\<MN2+SSA+MN2\>\"", ",", "\"\<SSA2+MN+SSA2\>\"", ",", 
      "\"\<Exact\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Sk (alpha=``, beta=``)\>\"", ",", "alpha0", ",", "beta0"}], 
     "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"S9", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], "-", 
      RowBox[{"S0", "[", "xi", "]"}]}], ",", 
     RowBox[{
      RowBox[{"S10", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], "-", 
      RowBox[{"S0", "[", "xi", "]"}]}], ",", 
     RowBox[{
      RowBox[{"S11", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], "-", 
      RowBox[{"S0", "[", "xi", "]"}]}], ",", 
     RowBox[{
      RowBox[{"S12", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta0"}], "]"}], "-", 
      RowBox[{"S0", "[", "xi", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta0"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta0"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Purple"}], "}"}]}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ExMid+SSA\>\"", ",", "\"\<ExMid+Tau\>\"", ",", 
      "\"\<MN/2+SSA+MN/2\>\"", ",", "\"\<SSA/2+MN+SSA/2\>\""}], "}"}]}], ",", 
   
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Sk-Sk_exact (alpha=``, beta=``)\>\"", ",", "alpha0", ",", "beta0"}],
      "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.02"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.677262274506578*^9, 3.677262425820403*^9}, {
   3.677262458833885*^9, 3.677262616936289*^9}, {3.677262659013586*^9, 
   3.677262659233582*^9}, {3.677262691170377*^9, 3.677262692245775*^9}, {
   3.677262732600485*^9, 3.6772627398034983`*^9}, 3.677262795841654*^9, {
   3.677262830569203*^9, 3.6772629149718733`*^9}, {3.677264059619986*^9, 
   3.6772640617806787`*^9}, {3.677264217600195*^9, 3.67726423806225*^9}, {
   3.677264330003973*^9, 3.677264355376677*^9}, {3.67726442634201*^9, 
   3.677264434408888*^9}, {3.677264894373049*^9, 3.6772649212869787`*^9}, {
   3.67726496717143*^9, 3.677264997778943*^9}, {3.6772652144445353`*^9, 
   3.677265236744584*^9}, {3.6772652703333063`*^9, 3.677265277052498*^9}, {
   3.677272538838355*^9, 3.677272541667026*^9}, {3.677273829559347*^9, 
   3.677273896350699*^9}, {3.677274916287685*^9, 3.677274937554351*^9}, {
   3.677275329723236*^9, 3.677275339386908*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
P38juOg=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
++Tzeytl4AXqRPl/v0/4v98vwP///cL/AKyGAfA=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1: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
7Q2190I2rGn7tN6Xjm37MrvjDPKGn2tpi0F0zMV1leNJZJZKc2RWDB3b7yuV
bow8ouOjKhlPx2rkR+INkfv2KzRcS6Zj7o8rX+sjV3l481lm0rG7d9y9tyHn
B6xKq3xGx7RwAzF15PT79bA+j445nZf8oIZ865W830IpHRMrTeleh+z3rpZ+
uhLV/8KK8i+fyKPLq6SDoGOjIzzXViIfmnrPyGygY9uL1WupyHsEPO9JtNIx
I4OCbClkLbrMxmuddIyztKroX37Tqp3nXA9+omONDbjRv/wnCVMaf+UgHbN0
JJsEkfls3qYrDdMxb8Plfvz/8qHczxpEjdKxzQ4ih/iQx/ylB+d/0zGh6slD
PMif7+LXXBh0jDugxv9fflZrqptsxyQde/TOt/1f/tbbfKkynTlUXwtl/7/8
rqK3b45kLtExykQ0+S//K6vzNEucVwZzC2O/+ZcflvBdIspPQAbTF9Mu+pc/
FsGu2DQiLINdFbX/8C/fLGCZS/MBcRksVN5N7p8vUMXPVFBkMBg7FPEvP+3U
+nIBJRkZjFtDQemfj2qdenp/pQyW2NQy+i/f7f/y4bD/z4f7H8d81aY=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.5, 0, 0.5]], 
       LineBox[CompressedData["
1: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
Q/xW+MO+vGglVOxktMOD+NwGW82M60rILtG28Qjx35Tj9dGJSmitYMq82Xqw
Zwdv/Of0UAnFCWeHbSbeR3c9FqpVQg89I0LliaXUToRO1imh7VJ/pKSIX+6d
3Mv6SN7P1sidrT9TfyY90dxE+oPNlWeaSDzOrTd89FcJ7c1c/KJntn5R4vI3
S2Em8m/oWFRFfG2urn+FOBOVu2hupIhDtdrll8swUUjexMFSYtfd2uYzTCa6
Ey40nE+sHf/99UN1JmplD4nfIV58P/yg/EomWrM5vCqJmPlUi/ecDhMZ/raN
SSCebgrVt9RnoidnilyvEtf+p1E4vYuJGiw9hIJn6+c0G3cftWAiOvyAUxBx
3qbgwc/WTGRv6fDh1Gz9n+OX5Q8dmagvzK1rtj7wQEZQmsUJJuKOKgsdIt5d
tNjghR8TpXW85zoRb339sWVpIBPZejlJHiBe9ldNaTqUibKCJQ7ZEnPU3115
EM9EH78Mz+wi7tLz15C7xUR1/8nfNCX+tnP+mzO3mcigsnuLCXGFp6+ARSYT
KSXnNhoS5werppdnM5Ha79jyLcQZ12th6WMmGs9ZUIKILz5RCZoqYaIfHup/
9YmDXlUzXcuZyOj6bZXZekzPBu+n9ZiJNC/nHJ6t17QcqaIz35B4NEdpryU2
Eva6JvuBiUpP2D6drf9cz1ReceYzEx09XLRrtj5UdaPH0T0tpP3DMiWz9aOy
pkpC5T+YaG2d+KXZ+lIB+8qMJZ1MJL/5iuds/enIcffNMd1MpFMX67qCuOes
wo/JfvI8Zo7vbL1q61XqzBGaiZa2LYyfrW/9cOfYnPphJupRya6ZrX+tzJd/
pjfBRO9/5knNuqjyhVXmDBPtbF15bLZ+9sFnV44MvzJq+aPRNFtfm9QhGxMk
rIzokbu2s44eKtPqEldGgpoxA7P1usGCR97tllFGcVVjN2Z9UlHGrYyhjKTV
vu2Z9aGlpcJLlJXRyDutBbO2WX/o/vW5yqjGbYp/1v9XT4z+v574fwtIhJM=

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk (alpha=\\!\\(TraditionalForm\\`0.05`\\), \
beta=\\!\\(TraditionalForm\\`0.2`\\))\"", 
        StringForm["Sk (alpha=``, beta=``)", 0.05, 0.2], Editable -> False], 
       TraditionalForm], 
     PlotRange -> {{-6.283185050723043, 6.283185050723043}, {0.8, 2.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"ExMid+SSA\"", "\"ExMid+Tau\"", "\"MN2+SSA+MN2\"", "\"SSA2+MN+SSA2\"",
        "\"Exact\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.677262289188092*^9, {3.677262335539535*^9, 3.677262363540883*^9}, 
   3.677262394048398*^9, 3.677262429190975*^9, {3.677262497597558*^9, 
   3.6772625264111958`*^9}, 3.677262619050148*^9, 3.677262660278513*^9, 
   3.67726269333044*^9, {3.677262733886847*^9, 3.6772627408102694`*^9}, 
   3.6772627971659107`*^9, {3.6772628316335773`*^9, 3.677262883152236*^9}, 
   3.677262915997199*^9, 3.6772640634167624`*^9, {3.677264219443136*^9, 
   3.67726423943886*^9}, {3.677264340924397*^9, 3.6772643566947193`*^9}, 
   3.67726443615191*^9, {3.677264897481964*^9, 3.677264923386998*^9}, {
   3.677264968930463*^9, 3.677264998755084*^9}, {3.677265219870798*^9, 
   3.677265240395829*^9}, 3.677265279081683*^9, 3.677272335061051*^9, {
   3.677272527643523*^9, 3.6772725426535*^9}, 3.6772736896770163`*^9, {
   3.677273854168037*^9, 3.6772738973087873`*^9}, {3.6772749094775476`*^9, 
   3.677274938407181*^9}, 3.677275359991992*^9, 3.677599894712737*^9, 
   3.6778527824194593`*^9, 3.677853121204228*^9, 3.6778602574824677`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1:eJwd0Ak0lWkYB/D3Eh3dq0GWUmRLdleSaHoflbpMRYWmuJaSpVK2SXFTlklm
UEZywoxQJimlLIn0XZQstyxjuZZQSSqVQnSvmPfrO+c73/md//953+d8mvsD
d/lIIIT2k5f+jlmOj++/yODzFG9xXkSkQpt7YuVYMIOPjAt5GZapsHH97diD
U7MUOtDXnT6cDGnrXMcnS0UUcs6Sn7JPAE4gc1il6isVJfsst2v/Gbi1vHUd
DvxCIekNPr6CSFB/fenhyKFRCh17Dd04GLw+C5Z6biWObROsUwiG3O8ovMOQ
uK1dreJ1EOgqHzSvGX1PoQ9iV1ZSEJhwrPIzjxIH8HeZVgTC+uvdfzmEvKNQ
/KLMbOkjwD2i6lMSPkL2qyzmdvtBVrhDjYErccbPTaF/+MHgmZjlOdbEHkfK
31n5wYGsd91J4jcUquj3/p7pC4ebKxz8IomRDrv3gA9EmLmtVY0eppAXa0nO
Am9In8xkRsUPUajk8OhjD3fg540kOPgSb5t2m2nhwoiLBUvNlti25UyoLRfW
lj1jVcy9olBqGMfU1A06wxgLJ8KI2aY39BT3gsK0r5y/z0sKDWnX7VF3Aev8
4uQ1m4jjvS605jnDvj1IXkqT2Flt4o6JMxSVp8vn9r0gfYfxIlsncAwXKPQ5
ESeqbhZG74REkZnSjo2DFNKoaVP6fRuUFJy6qK5BvHgp0796K5SVphn2iAco
NPY85C5jK7iENRgphhLHf7hjnmAPKVMmpvH7+imUn3d/qnoLvPi13nSFGrFd
WtoylS3ALt/HrhE+J/NazJ8DN0PziVSzGUfiEd9hPz1bYIm+mQfhPgrVh1o4
PdwAbq4XVsuKeonttEwMN0BBhZFFQSlxdsGq6QwbsOd5rhkyIt4xHXBZGiBu
5tHaPUt7KBR03TXkgzV0cD2sJju7ST7lf3zSCnSqpqxSUoiTnS/rSlpBTaTB
OoEM8ZhboZepJczNnl9vM91FIbmFtRaN5nC1Zm+abznxmDCph2kO9nHanxJP
EAfpquvvWgUXZO9ld093Uiiq93LmKBtWLuuXDP3WQf7fgog9t41AMHCNm36f
OFvk9CnCEIKvBJdS4cSD8w30HQ2g0kDKjyVqJ/15NzXl9cDRyqgxT/QfOe/j
fbtpbZiYmdQSVBBnO4SrS2tDOp/ifYmgrbqFv1QLXnGcjEHcRvrtsV/cNSCe
qRbnU0nMvyV5TnE5GDcP9yfwiG1qPQd4anB8d0SyUNxKcqsb0cdUYZmq7dvZ
SmKb9Ean+Uug+rnsxhUnabOrWv5VAaZPznjwTAvpr9r9WFYJ8JvkQmVRM3GP
6/bf5CD+qI6ndwQx+tLlIVwIbZP35IpEz4gnmZsGWOA7byDUXvyU7Pc3E9gy
UJQQsiKNR4xy5nD4fBApSHe9FAtIzjhr2iUF5zSNrU/ONJHcebywWQKE+fz3
9SeJo/aqah5kgBbb+R+l740kt0x0VEJQhnno9vcG4pRFOzlijOoW3hVH0g7b
HizzDf+yPdfbbraeWEaQNfoV97s11L2YfUJ83p0vP471XnFPmJymbdset/Mz
Djk0ps+bq6Pn4+bcPuEHn2N7n5ymbZfD3jaKpcNVkhQRbX/z08Fv8Q50A++L
ekwsaH7aMIwzzuKxQkRbt1XSaQibpPk4cRiP6PxK5cAAPqH2bV5qdC3xkJdw
thfXXE0sG2TQjvopMFCIWUYa/sYxNXS/8k/jDry7uHhJhMQPo80WbTjbmtNU
F1NNLHcnSaoZv6vuOblIknZ+a4pOI15tf9TEK5ZPzM4y5j/GkS2MwZuStFs6
lVqrsdHiS8pTLIoYJcZUP8Ce542OpCo8pPv8oGtlOEW6utZscRWxxrgi5w5+
FOmi2qz2gNjrY8nK6/jrxNugAO1K2k1TEjlYP+DUExn9Cnr/B8pyqZj7SkH9
msl92k8fnYrCk7XDtaPccvq+H8//YE7b8g==
        "]], 
       LineBox[CompressedData["
1:eJwtzws01FkcB/D/TEjZlvVYjxRFiFZIbBv3Nyuz0sMOlciM5LFpa1G0eWyZ
LWxFDDtmhWWilfKIFGLWjoxHeY1nk8XBEZlqURgk9v737D3nd+75nN/vfu+9
m3yD3QKoBEF44iL3DOlmZt2xSiD+X8kszxyi7D+X861OIe8x0X6/osfY7Hjj
6Xi0Ldhitv5OFdl3v/wiHS3KMrJMcqpJW0d8uI0a2av3xmcKsPWDFIRFiLsm
dPot709si2rXiTLkmzKYzkiuwQ75qJH3GFGWYsze8f/C5qzNZgqR+IHGoLOH
EHsqMfu4CPHHA/N0hkgPVSWPNqEQXUHQ65O12Ca9pjOtiOaqbCuYJC1RvtPc
gVTifFcSLjzBfnU09nU3Gqp61MhaIV1454C3BJVMKnLMf6nDvm1QZNKP2IZM
j5VPRdhxzx4aDyGG5319MY80Y0vB6RGkn0id4G+sx5ZbLhgZRVNPjpSezSOd
7mqZNI6EsvwIB/MG7EvbBKFSxNm29LVaOWk37e6Ut8iCl9P5sL4RW8E4lP4O
Ec2z6bEHm7CNfoy1nkHilb1+7j2k51UUv5lDfOtMM2PWU2xWzr6oeRRyavK9
bJQ0zTOrZxHRshwETWeeYWtmH3H/iFS6UmNuzpCub6tbXkEldnYau+VagGCH
Fq0dowL7bNKAUgJpXos4Qg4YeSN/9Ku1Yht/0DFUgCnlazaXDNqw54dGataA
0LF/2aUAm9i8u6xECTgR2xv1drRjh+UVVq+DtGlpgc8mMRDCHY79yp8BkaCu
4hxAOvypkr0qBBqhMMu72IThft1wNfjSK9mOatmBrepppP058Ger+NIwbJqu
SW20JihyRuW6KklXekXPaoFEZNuaS+vEeb0B2cq6QDt+wjIhhjSbn/FwA+Qv
XE8Na8ImAt9OntKDcPNBFp3Rhd/frxJwZRNopcX8M3a8G/cb21KubgG2VbFb
ey62/l2DAL4RvGp5Xl4xju1DMbhYawyVFLPoq8E9OP+a97KeKXic7lA2je4F
gn9jY5brdhDKfwhVrcNWsYm86GUBJnxDyaLCcyA4EYZ0NUuY777Ab07ELnEY
OZRiBWloo+UPWRJ8v2xjbftOuHde075lAJtfLs353QYEhSrOZhte4HneF/QQ
WxjWWXViIgObcWW11GAXmMrGOQE3+3B+7a3IejuwMx/OFElI+2iYVNmDS0Bf
voHW3/g/0UrNZQhCu1qEwzxs8UQ91YsGgvulUyxuP7a9ul+UA7SN3VsSdGEH
KpS2rtkDQxtuK+qqDeDzbmVP0veAfAJPvy8ZO3/rdYbIEVwCoxjuSYNATNVU
q9o4QQhns4cxfQgIyXe3/LkHYMFMb7DXH9si1bFg/0G43LjePy4GO5wZ+JO8
C3CX1UNe1mF7JMkq2d/C4zOrr+Y6DOO8p+EV+1yB6vymQo82AsSBPekr6Yfh
V0q5ptbuUSCYY9d/02OCzcLNyGAWtuiQ18lCJvRNXRxoiMaWRJ+J+ooF+kP0
3PMibMWKR/7HvKG4pse86+BLIDq1d4Yd9oFnUbP0RJ8xILrtFz/W+AIxZx0m
F/cKCMMljbvzJyFIWiaeEr8BYsaqdLz9LJg6GcgOZ78Dov/8xF7vS1DrN0bN
vDEHbMontIX1sZCzKrVgULwIhPx7E51z8WAUZN8R37wMtF3Eg4Y6DmitT+Oq
e1JobK6tVeVaLhQ//7kh/gSFRuuWds5pc4HOPT1P/Z5CIx65T8JWLpxbB8zp
SOyWJtm0ExeOHTWvb+NRaFHqxU7DkVz4F1shc4c=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJw113k4VO0bB/BzxhJZspMlJEr2V5v1nkRIloiXECrSaiyVJTWltJBlkpdS
CdlKyL7OZK8oEdkjkvC+KUmW+N3++P0x17k+1/d+vs85z5w/ZuQP+dh6UgiC
+IWflau/1/ZaywMUVojIM9Oh4Dhoc42smPIlWfQCp10ywwzouPn4tfhxtPKn
cOFOBnSVVPcaHkIXvzwl/JIBHwW/L0TakiyWh1W7Ri4DJuvt9ZW10Tsiq7tC
GMCpLlvl8ZNgERY0o24xBugu5Ve3nSVY9AuisVx2sWBkkBt2bHaJSRwIGq1l
RkO83oHpmaJ5Jr3K2ok2egNMfXhGxat+Mem+5mVe0Vfgmew7PUOfH0xC8cCN
AblQWPc5oXrs+CST+C6bbr/NF9y/N0u5WaAvfm86xuMLKX+IoA4V9KLd7bhB
GiiJHdOumZxgEgavT2tG0EDdVCfz3mk0Z4+3Qq0PGGR1x1r5jTMJ+otito2n
wOWUpGdh0BiTGOu+yi/vDQ+CrGo2H0DTd67a3X4UBq9eln2ki/4vIKr96lE4
8mC8+9bCFyZBi5f4NeEFJ96WWx0NRcs5CV6s9IRgLecdkpdGmcQmgX/f+hyG
xJl7PPTrI0xC4ol48L6DwHo8FmHlhda8saep3hXG7LfyyhijaQ7rdum5wo7i
N7zly8NMIq3x3CtlF+g8S/L/PIsWea5JEz0AQr+9BLw9PzGJ/WOhNGUH0M0s
iNm2Cy23VPMu3x48HAlBDnl0a5TgDT17yCtNFEzpG2ISzRyrKXb7wTqoWajP
Dm38gceOYQuR81qiNkaDTCIzrak0wwoKsy/cWSeHJsaOdI9YQnFRvErPwke8
34GYjg2WYH/2paqI/4rf7/TKsQDGrLrGdY8BPC+vGI4hMxj6u0lDUQY9pnBd
bqsZaJZ6aNZ09eP8eSWZSFN4GxintWiNTt5xutxoN/DOz2nTDPuYRNPTNL+2
XeB84PYWvvleJvG7vvGGwS7ILlfdml2ETjjIH/LECMxD3LaNqKLzeLhGondC
+GLdDkepHuxfWhadMYQOl4M6M53deD89e91/G8CGqlkdBgNNXF2jTRpATehm
vWZudB7pbqegB8tL0QbU3x9wXjk1OnM7pNU4xXuVoqlBQhMj28A8XOFbZCA6
Wd6xR3Eb3OYrSe7+3YnnvcxmU7QFNkoPsPnPdeB87nA491/Q/DHDJbEMHePk
7XdMC3xTfYuYQeiprQ+SWzShYjPHUd759zivb6JmogHWOqqvHs+3Y1/IJ6WF
zfBzcWZ9czna/b7o5UVlSGQxQ34EowfbOe5yKMOwqZ0aLLQxCVZVfqz6RrjO
IxPuWYGmT7PpWCmB2tvRgYgQdLKfmeoZRTjnEBzTtfAO1//zmd6lANKSxl+X
KtDEmv3pIgrwop/PSPE8Ojnv68O/1wOP56Np38XWlfOIuv1dDgy/xOSIzb/F
/azW8o1Iw/XTG9wOB6PpYkEFNVLQNlMikDf/Bv0pkJIjCV7sH/3NF1qw30Et
NlUC8iL8FONDVnz6nEWuOMwLcX74tNCMz78nLbVeDKLk1XTPL77Gfn1VOUFR
6MpkTTSdRxOCPlUmIrBec/990T+vsN8tdDxMGIoNQ4jcPy9x/q3FZykhIBr4
ny+EoqkTH1TOCMIey5TDZktNOH9laLpTAAacXzYMLTWiA0NnPdfApmGXQPWL
aGJ3/QknfvA7PqUcstyAOfVCszMfVH4P6228iCZkmHdO8gJnkPgtEWIld7xi
HMEDNsQTQw96PbrmlUPJarh7zXAqh0ATotkWU9ygHu9pZ0rWYW5Y+jGcCwJl
5tjjLtWisyLChldBTVpk8SC54swzwhargFdVzlvtcg36XLJoFSc4FBSsDaas
OOM/QR1OSNY1fd1w+QX2R4gwqjlg/EXPeWG2Fefky1tyQGgrOfiUjYXuW8wI
YwdViQSxWV4mrt87eVKVHdyiVU/FCVVjPsdu2McGDM4XtVoSVejeHyUMNqgL
tZd8K1OJ8/FPg6zZ4NfPr7STChXo/msbhNhA+eSFRm7lcvQrS5ceCrgMC63L
UC9De1o1ZlAg6kBGgPGWUuxjD+APpgDrnd7rIZ0SzIfs+20oMG3WKn8RitE+
ez6pUECJdSRQ2qQI/S3wzWoKOG6fe1O2pxDXJ47b/0tCxLNbin/bFKy8X/c0
2kmoVlx//qf9c3ToddFKEqaSittinfPR5TV1GSQoiFgoa3jk4Xq24D93SHgi
xlxOaHmG/s0bFk6CAMfY0/aup2g1MekgEs5MCxzgH8lGnw1knCKhZ0hnlfm3
TOyzPVFwmARoPVQYNp+OLrlq7UxCWnWERzXHY/RUk+5+ElbnFPLPCaTieo3s
vVYk+Nzrr9CWfoR5vZS7OQmZwnxtfVYP0KJ37ExI8Js6qGrreXfl/ZPkNiJB
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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1:eJwl1Qk0lPsbB/CXLhHZSZaQpW65mHKFyTyWshXJlpQkZRvLzBhjEA0iRQol
siRLRSrRSplJiYpKNSpRqItcatzIJPF/Ov/3nN95z+d8f+9zfs/vnOe8Onui
3PeJEgTRi+v329lJxu6nzlIex4//XftjFiiHHhBILFvKIz6T3c69zIL+DEGJ
ihr6gv+I6YMsiG1/ISQpoLcL7kdUZUGlw6nLIaJoMcd6l5AsmNuordY9qMoj
BDKtLV8zod52zURdhSqPAyVK+8QyQX2995kgfTR/tbDW+TCouwYq5Sku4XEc
00xWzKQBY5w0+klRhceJWrFtjX8q5PZ528zIome44j1eqVDfmVAgK40u3rAm
Y3MqTFxqtbf8Q4VHVHyZmLZIBVrk9opjk8o8zoI/Huopp0LUV85OS74yj3i/
2ftqRwqETzx7eiwfc2q6IMU6BYKmIhosl2JuyiuhWyaD6MyUzE8ltEXnwx+k
ZDgzlxjWJIcuWtiW8WcyvFmYrbNeAm34AppUk8FZ7fIxq2klHrEm+wZ9mgNG
8IVqzVficda/eqtzgwPTGZF69jnoA3Kr2OYcyNCIOrlVEvcvPH08pywJfFfE
p/uKoTve7XmQlwSGa9JiA0XQgtbbIoeS4LlD0faYH4o84pT+QFFEEiyJbtMs
/IxW/fuQCzkJzj3SOtf/CK19oensm0R4wHp+I+oIOvIseVQtEfKT351np6OX
XWsPlE2EkKyhguQUtLm8+fCCRJAun43Pi0dzk6qlxveDR+dKuBmGZko6P+bu
h0Hd5LY5ZzRVR00teD+IdJHeHJVC13o86r+TAG6CM502C9H8sYkrVxOgVFbm
/pQoukEgPHwuAda7jl7ym1HgEVONGbuOJwDrSXnqX5/R2dOzGXsTYLRV0bjz
Ifrujao+mQR41TiVJp2CzlGN3E6Nh+U9gQm8RPSZZhl2QDzQf3TRmHHoi2tb
yrbFg4z55R29NHS7hqPchnhwuh5EqvVHz49oBmvGQ/OV172brNBqEPClKw4u
VN5emymU5xEK/HtmtnFQGDdl7jGJnvV/2mARB0dcSRR1AXoqvMOCFAfhwguO
F4fR3oKDu7XjwGRzgd+TbvTyRxTVeTbc/sY6JHUdrcHOXt3Mhse2pu8y6eia
P7fdtGVD0xJav0cE+vnggD2ZDbVjF/9RD0U/eFj8fi0bsvN1BRd3oxO7jhjo
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
        "]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.5, 0, 0.5]], 
       LineBox[CompressedData["
1:eJwl030wE3AYB/CfZXNCWaaXyzVdbun1LiHX8Ey2vFTMsubSpgijRS9rddbV
aCK2QnTciQrFdb2IXof9EtGh5PJydYUpWlnvL6pFv13P3XPPfe55vn8+C2NT
BfEUhJAXacsU/DIaAujOWMm4GjScVgjZLqlFEbYMzKn425MiKwCrp6sGtHZO
GIumnnMP5EF15d3VuRN0rGIpzdPvacA0dDVD884Rq6733cK6bHASduxMeDkT
I++L6hXumXCJ9eC7l84Bo2C1JEqZDsZZ/sH8RjuMitOOnNMchqTu0+n7Htli
1GNqHtEpgNu5f3z2ZRuMaGhniNVe6DL0zaXVUjH6XdVuPiIF1+KwV/uriSnV
X7dFSUG+6WHFcDmxIc722SopuNy5ubLxJHFp0EybN4mQrC3kymXEZQO+6RsT
geYj2GNYTHx4/WgHMwFA29XWVGaNUSRrgbE/DmrXtCgOaqZhZG2dlcGMgdCo
/mgHNfGeGYsiByVgOPSOU6EkZgjZwnIJMO452j1JJh4fmjPKlIDCV1zOCrHk
L1C5i8SwNuBHWy+VGOV8MXtEQ3Oo+zzPoxSMZAE1DxUi2LqLPflIQex22r3C
VwRfc8NGYlKIt+WarlNE4NYlv5IrJm5vObb91BY4Hn4/YIRN7KPNoF8WQmjk
1uSCCSuM8no/tL3fDD1ije7TXmLMk34u4ENvTlXHnGRiWSYrP5YPA7ebXvjH
EssVSWIPPgzSP//RCIjbO3f8rAyH8Vah75LVxI5LY84vCQPaSmbjjm8Ioztd
Z54EboC1k7VNPQpivMF5UwMP/JZ1PP6VQjzxVDqUwANO1OtXronEqmB6N50H
QTdmT6WILPetnS1SLkQmKMHOh3h71TBtfiC8KD2hyvoypUcDfh7UfA6s87t2
LOnnpB6pPggjstYA27j7ZtwoMV+lyhrzBs+i5WPiXmJO+NuyYG9YbKoJFdQR
f6pT73PwAvuzlXR2qiXfrao/7wH95pJy+7G/5D5aqzcuA1mDWnetz6wnH/Cx
YYEzxEsDTTWtxJySJN4sJ5AwKMzKestef1JuS4cI2dGM4gKLm2uLqNPB2yUt
JD3MYuvszsxv/u39txa6uVr8v/4B2Cd37Q==
        "]], 
       LineBox[CompressedData["
1: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
ve/NEuBm6UZZBv2Xf7X/AXxzUMY=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQ3ZAYGvhf9o89AxQ8sci0Mz0H5DdsW8IvKWLfd+v/
J/l7QL7D9St8rGL2FjXTlnO9A/GT39p+Ebfv2X9Y4AHvX6D+v+0ad6TtTdzk
Hnf5gvhHmXleKtq3Bl9uf3AGyE+QqrqopWWvlmd7sfv0P3uGBU+MI96a2rtZ
znVTuw3iVwg11pnZp7H83X3gFYivE5YuYG6/fNaeZV85/9szGJSaZ5tZ2Gsc
t66J9wDyJ1R0enVb2WsqWKkbHwXyL8jOsYiwtxfLnG2XG8/gwFDgzL1un4u9
hPSMKSKRjA4MO4JZp3zxt193vfFYdyKQfyR+krBegL3rlOwfTFkg+TRGwaQA
+yJe+5iPVUD+n6s2y08F2J/9/1T53Bwgf8K/NPt5gfZNT4w3tz8A8gsqJgr4
B9u/XXv+4q90JgcGgwjHE9fC7A85sPM/LGN2YJgjHW9ZHWf/7sMr0eN1QD7D
FC3D7XH2UgvPyaxtA/Ibnl0J+hxnX8Q4TatyGpC/pHiGcE68vdIhFTfBbUB+
VeG5I/oJ9o3OTrWOX4H8bfPvyqkn2ju41b5eWMziwNCkamqjmmy/z/vz8aQC
VgcGJQm9N7Hp9vESof5JU9gdGJJN/YuPF9gHnTIWFZ/C6cAgI6jSpVJmz77a
/MvhTm4Hhil7t0e9rbZP8t248N1KXocGTuctk+Ia7fmuLu89t5TfgWHZ55bj
R1vs9fm5VMSeCTgwaFzI0VvdYW95+hKv4xdBh4ajVrvbV/bYv/55c5rbByEH
B+Od0v32E+wLOGXYuxlFHA7wds/4FDPJfn73HLFVDKIOB/Y+djgROcV+ocgk
XS9BUYdqkXXuD6um2AMA/nkALA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk-Sk_exact (alpha=\\!\\(TraditionalForm\\`0.05`\\), \
beta=\\!\\(TraditionalForm\\`0.2`\\))\"", 
        StringForm["Sk-Sk_exact (alpha=``, beta=``)", 0.05, 0.2], Editable -> 
        False], TraditionalForm], 
     PlotRange -> {{-6.283185050723043, 6.283185050723043}, {0, 0.02}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"ExMid+SSA\"", "\"ExMid+Tau\"", "\"MN/2+SSA+MN/2\"", 
       "\"SSA/2+MN+SSA/2\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.677262289188092*^9, {3.677262335539535*^9, 3.677262363540883*^9}, 
   3.677262394048398*^9, 3.677262429190975*^9, {3.677262497597558*^9, 
   3.6772625264111958`*^9}, 3.677262619050148*^9, 3.677262660278513*^9, 
   3.67726269333044*^9, {3.677262733886847*^9, 3.6772627408102694`*^9}, 
   3.6772627971659107`*^9, {3.6772628316335773`*^9, 3.677262883152236*^9}, 
   3.677262915997199*^9, 3.6772640634167624`*^9, {3.677264219443136*^9, 
   3.67726423943886*^9}, {3.677264340924397*^9, 3.6772643566947193`*^9}, 
   3.67726443615191*^9, {3.677264897481964*^9, 3.677264923386998*^9}, {
   3.677264968930463*^9, 3.677264998755084*^9}, {3.677265219870798*^9, 
   3.677265240395829*^9}, 3.677265279081683*^9, 3.677272335061051*^9, {
   3.677272527643523*^9, 3.6772725426535*^9}, 3.6772736896770163`*^9, {
   3.677273854168037*^9, 3.6772738973087873`*^9}, {3.6772749094775476`*^9, 
   3.677274938407181*^9}, 3.677275359991992*^9, 3.677599894712737*^9, 
   3.6778527824194593`*^9, 3.677853121204228*^9, 3.677860258051806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha0", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta1", "=", "0.1"}], ";", 
  RowBox[{"beta2", "=", "0.15"}], ";", 
  RowBox[{"beta3", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"S11", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta1"}], "]"}], 
      RowBox[{"Boole", "[", 
       RowBox[{
        RowBox[{"Abs", "[", "xi", "]"}], "<", 
        RowBox[{"xiMax", "[", 
         RowBox[{"alpha0", ",", "beta1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"S11", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta2"}], "]"}], 
      RowBox[{"Boole", "[", 
       RowBox[{
        RowBox[{"Abs", "[", "xi", "]"}], "<", 
        RowBox[{"xiMax", "[", 
         RowBox[{"alpha0", ",", "beta2"}], "]"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"S11", "[", 
       RowBox[{"xi", ",", "alpha0", ",", "beta3"}], "]"}], 
      RowBox[{"Boole", "[", 
       RowBox[{
        RowBox[{"Abs", "[", "xi", "]"}], "<", 
        RowBox[{"xiMax", "[", 
         RowBox[{"alpha0", ",", "beta3"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"S0", "[", "xi", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"xi", ",", 
     RowBox[{"-", 
      RowBox[{"xiMax", "[", 
       RowBox[{"alpha0", ",", "beta3"}], "]"}]}], ",", 
     RowBox[{"xiMax", "[", 
      RowBox[{"alpha0", ",", "beta3"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<beta=``\>\"", ",", "beta1"}], "]"}], ",", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<beta=``\>\"", ",", "beta2"}], "]"}], ",", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<beta=``\>\"", ",", "beta3"}], "]"}], ",", 
      "\"\<Exact\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Sk (MN/2+SSA+MN/2,alpha=``)\>\"", ",", "alpha0"}], 
     "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6772749824225597`*^9, 3.6772749892296143`*^9}, {
  3.67727502179782*^9, 3.677275175124341*^9}, {3.677275251866255*^9, 
  3.677275320933271*^9}, {3.677275406098584*^9, 3.677275429364008*^9}, {
  3.677275470601409*^9, 3.677275541888286*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJwV2nk0VF8cAHD7vgxmQpaUki1laRO+TyJUQpL8kqUI2YoUQiiUUoRsqdBi
LUsqyXtJJEuISJQiidK8mbEv87v+mTmf8969797v/b537j3nu9rN39adi4OD
4wj6Wf4XT3f3HsJphAvbO5mTRQetG0dPVL+iEWLpjs+XbXUhpvbDCxoRoxG0
jgvZL+AR7edTGnH9c2zDshNdWn3mymjEH3pyFjdyqTXjjXgpjaj+nJ7Pg9yG
ScutK6QRkbSM77zIfzcZnNZ/QCNUIcWWH1lktWvT/lwaQRFOmBZA1pSIVXLP
oREMs4h2IeS9nEVnQzNpBPuz34AIsg/5oe16Go1oqndSFEe++p217n4yjXBY
vfemBHJxh2x4dSKNWKm8w4CK3PLaqOvDFRoxuUJTVhp5vOyYxs9YGrH9mJL6
SmSh3PjouWgaURwn66+ArJ5c8lk8kkbEK8iOKiF7n56O0z9LI55F6QSrIl9x
k/+2P5BGfOK0TtBELrQ13uLuTyOW7MO6NiGP6SQMXz9BI3wWuLn1kb2YisY/
D9GIAU3FDivk+CGT9LkDNGI6ayzWDvnRR89/4tY0gunfG+CIPFpRflvfnEas
ZSl/90D2DDKbu76NRhg2duhGL7c/ftLmvh6NWMfDkXB5ub3djUfVm2jE/Syv
FUnIv/T67H+q0gj5V4tNd5E9Jn0r9GVRvHJu5dchc81Nis1T0fiENh1rQb6z
FO79kkIj2iTdnT8h9/InrjYQoBH7NGoo48iWK0uvG05TCcnH7w5JT9JhRHHL
+CKDSnDr/+NWRo5RrjWrnaASqd7Df7WQazTbFo1GqISDr33YbmQtmDiJdVOJ
yGdrwsOQ35sEN3J0UAlf7TiZy8gnzJfWvG6hElPOk2Qa8l0bsT7jeipxkSru
XIEseVzL3KSCSrw7uVr5H/J0vN9asyQq8ftOrOPpKTqkXJuK5LtGJQxn0/ti
kDclR3xpiKcSpxLNMlKRvbMSk3dfoBIb+7M7XyD3l5RyWPhTie1GLlt4p+lA
dE7079lHJYYlxVseIh/pCd4mYkElugYX9V8hz35Zutmyi0oMPDH63Yms81Ns
zz4DKqG+7Tc3Gzl/WuuFlQaVuBlgpes4g9ZH3j/VRpBKNJYbxMrP0sFxfWis
Iy+V4G89aqCHrKlz6ewxTirxRueE+l7k9t1Zh8/MShHxtCOl55GlAxsVMn5L
EYpGmw8NIj9oWvVgsEmK+H2fY1v5HB3qg9ur/K9IEd7myrcuLNAhLerLw3Ox
UsT1C2uP30H2vDqSHhUtRYiqtnvXIovkLoTeDJUiGmNOrFtEPtCqCs+8pYgL
L9xswhfp8EM5qnHJUorwjXe4Gb9EB84O7d5rwlLEiFOoQTMHCdb0O63G/FLE
Ptn6FBZyjrjYm0kuKQLXCtJV5CTBwGqsxGlOkpB38N91Gjm4OTdmw29JQnWo
4pkCFwljb6U2tjZIEhnX1OajuEnoqp68JBItSfQKPnt1gY+ENX3HwohwScKI
p1OmAvnUbEdAUIgkEfCG8eonsti20v/6AySJsyqNI3v4SbB46qFd7CxJNF2y
rZITIKH2cU//HkNJQuqdi3eTIAmP8l/oJsxIEOcLDikcFSUhI2Ry2wGWBCEW
+mkoHfmKlbaRHF2CGHBZmPyI7DPzyLzolwRxz/bjoqUYCZv2pjs1f5IgeEI+
3jEQJ+EFMzhO+KkEodQusF9LgoT3O/W+JJySIEJ6+s/spZHwUjpg8ICvBLF7
QGvpBnLxn6Kfcl4SxJYA855u5MQ0ZXqRiwRRcDP2vMsKEg6MSfK27JcgFsM1
0kOkSehPIrVEtCSIkRU9Bi9lSfg7WBp9dYxC/COKr4crkkCt8VW4PUIh8Ovn
djQi69/SfF7yg0Lo//ihI7GKhNh9hX/b+ihEXoUx7wNkper7DhLNFKKBnDP4
qESC3c1srbQiClG3pWyVgTIar+mVvjs+FCLIRWTWXJWEH0oWZ554UoimmZRT
2cgCC/yU18cpxERM7g46sl35JdMfRyhETZLs23Q1EiYUo56s3Uchxt+trvir
jtZv5mxswQYKoZvSqPZwAwlSB5uPewyIExU2PzkcdUlw1BPPG+gSJ26w/vES
yHelDny3axEnru1bOq2iR4JmZ5+TyUtxwqjFIZaFbLZ/zF4pQ5zY8TIiM3UL
CecsBC367MSJhiM1r8a3kzBguHuDVYsY8XVGZdMYRsJDlTeTm1+KEntjFC1N
rElwkBR1NqoQJSwHxrBXyEJL9u/MikQJd16NB1tt0Hp3j2UeyhIlapzdX22w
Ret9URILCRMlUjedUl1lR8Lz765XanaIEvk1H0HagYR32RyrTGpEiPtPvLid
XUj4LWlkbv1KmDC7oDnjdpqEb17KHReeChO5h2viZ5C7CQHHshJh4k6MWnZi
IAmv/T6elMwRJoK/ue2rCUL5+N7zeleEMLFHauinwlmUz9E3PzlgwoTiQPzB
uTASCsjR465vhIhAHt1ouVgS7pi3/U16KURkvGccrENOvVMRXFchRIzZjb/0
iiMhal9EvHK+EEF4ZGPV8SQcLpAq/nlRiHBfernDLYEEQVcjppeZELH4We5U
2w0SvNpvRp1uEiSCLb/VymWjeFmD1CwhSFBMtOt/Ipu3j+VHPhckAomJK09u
k6DSbvzu6kNBYseXVmfzOyQMf/gn9vCSIPH8jalhVC4JLh/2ZH8xFiRumiic
lykgwb6N+9muagEiIlT9348qtJ5Wj82bywSIrDKumoZnJGxuc+yzKRAgmnbd
cC96jvK7rWzxaLoAEf8o3vZsNQmdrc67QoIFCG26e6lsLQn7Wl92lOgIEGuO
U8wuvyVhV0vgnxVF/MQ2sxlOuW70PXJYV6CVx0+8+sNBEf5EwszwJ3ezLH4i
ZdWVuXnk4sXt384k8BMNtwjPwV4SaBs5OrtO8hOuWNCbin4SRpKuPkvW5Cem
mttMLg2TEH/ofrRYKR9hE/3BpI+F3o8he1B5wEd8IkZrfk2i712AwIJhDh9x
7ThVZ2qKBHr8yTO+iXzEWhsGdcUsin+1tmeLHx9xJsz8i+siCeoKtfuubOQj
YtwcjqnzMaD1xycZvjJegrs2KSxOhgFK6VZfAx/xEsbqjZrtsgwI2teQ9/0O
LzHecFBnpRwD5J8/1XqVyEtUZPAZlyswwPtayq4gH16CmJ7NZKxhAN8224Af
63mJsLCbL59uYABca22szeEhDqq5itruYkDyTtNrmmk8xKqt8fnvTBkwMl1j
m3mNh+CPtmrCdjMg0a144Mx5HqLyZM6bzZYM6N+awNR05CEokoYVOtYMOPfD
fFUWjYewj9poHnqEAWVb64PPXuUmpEqlsf3BDLB06PlP9CI3sXKxk2CeZcCP
c2NYXhg3McN9mTszhAHUaorwB29uwpCP0TN+ngHBBk53VCy4icKbnQv5MQzQ
N55q7OZF1zdtMPFPYkCdpaqsXiQXMS46OxxUygDHkzuWmoK5CNcMnj32TxjA
TLAacvbjIpyL3eu2lzNgbWtQSYITF1F+XIbOV8WA2P2vjYd2cBFO9Bcp1a/Q
+OwcvZNnOAnr7Irzl1sZ0Ol09SX9FCeRFHcyvG+CAd1X7jdLe3MSJySVbb7S
GdD7rPaLkRsnsXf47K5hBgO+SZDzV205CfnkxylTUwz48/aggZouJ2FbrrJ+
MxvFX2vVK1cWByHbeSBSnsIE/aWy2s5gDqL12U6VR7pMMNRobpv14yAG0/pO
TG5mAuYw/FXpBAfhddJWxXQbE3aXr2D7HeIg7ofnqvwxYIKdRxgIb+MgpkbZ
iQ5mTPiSfflCHIONX3Cy+FZymAk7DR/HeE0v4eaZ6mfcopmw47fv02MjSzjb
RV8eLjFBL1Xzl1P3Eq4Yt1l3VTwT1v8tsLStWMKzsrfX/77GBJHb+RI7/Jfw
MExy/lEGE3oWMu6I/FrErR2FZLrKmOBTc/Hl408LeE61xEnOn0xw9zT5W/B2
AX9/1/ffwVEmHKVyrcqvXMDPbepJKB1ngo1PZHR68gK+ObtZ2YfBhC3yoRZR
Vgt4gX/5aVkOFnCe9++xbZjHS8yzXhjLsyBthyNz8ukcrvok+i/zEAvcOdaF
ST6YwxPXY2Up/7FA7+0/ro1pc/ghmfzy7c4s6LC6JOkZPIfbbdC9eMODBSJu
T7T7tszh1n6RC6fOsCA6ni+g9tks7q3jsE4whQV+3eV/Yl/M4Co0k9tPulhg
mBkelFcwg69MNacO96L2zuYLeMYMLhdyIFp+gAUFowPCsyEzuOF/gkeyf7Jg
eF5A46T+DJ6yjizvnWKB4xpnr/0vp3E9+Rx3i5WTsNtfeET61RTedEjXf6v7
JAjEukUOFk3hqT3r/SO8J+F99guZgswp3OOxgF6L/yRYvT+xR//cFK4BClrn
QyfBbl39kyO6U/hFrtk2rRuT4PLlfNi9gklcSRdbO1IzCaG7JygaaSxc8HSm
Wq/cFBgcNS1kXmThCj/OSQusmYLFoGyTmkAWvj+q6xOoTsGFXMvgfTYs/LTb
67EGvSmIW3zwxV+Ehe9Nm7bUs5qClArnB5XRTPzuJ/Hx5OgpKF3VscPIn4Hv
93lNTSWnYE7EmXroKAO32TQeVTwzBaZzf/7472PgwitmnFrYU9DfJZBzT4OB
98Rahq4TmwahKxgH7yiJFwnpDBlqTIMH63F9swuJD3p200ROTINiU+K+w7Z0
/NJtm60GP5F/pteOev/BGUanAs0XZsCFbJFz3vMHT69P4WHwzELuIkdIt8Yf
vCo3kj9PdBZUVnjp1v0Zx9Xuue+WWzULWru3P8ryG8d/xGV8O7ZzFgwLPidZ
nR7Du0R1R/ddmYUjvivdK0NG8QOrV3VvWTUHGZNZwhfih3G7pBNWSYfngbg/
mmDlMYxfvXHJIPL4PIwe3CyisGsYP/Bw3ijAfx62VbWJVLOH8LflR5sdL83D
p2BOMVbwEF7pmTmwt2weJGc8KJ7uP/DrKu8lQwQX4OqcNs165yB+RavR/cSL
BagsjEhVVBrEf7/zsreuX4Cqp2kaffPfcIZyhNzmDwtwMLhJkxr4DS/aJsND
Di9A8rTWxnjXr/gqs4d71CmLIDI3qxtg1I97ifuqurgvAnvpuiE204OPvTX3
uSewBPl1h9M8nvfg4r31LQ0SS2ARq/zv6rke3EepLu/byiW4Kfrs7ueZT7hW
h+f1Mc0lWC//lTtwthuffudi4WS9BPu3a76/P/cRH9SY0D6TsgSshck1LdUf
8Xmu4u2Ps5cgg8DDGKEf8cbu9xK9+UswtPvABpjvxC/MfBOYrFyCs/ahN3rn
O/ADvnrkga4lMPp1o2TF3Ae84u5GU3dxNqDjmPOx0A+4c2VBjdcKNnROPqM8
mWvDa1pbAh0U2ODB8y3QYr4VL7UsjWeqsyFx9Qb98wvN+GNn/1oZUzb0PkJb
yfPNeGv963sn9rBhzSa727TF9/jM5457OTZsqDIK43i82ITrBFEZb5zY8PW/
pobvS4242+b3H4aD2KA6dOScVmQjbsbek+QbyobT3nS1MHYDbpx7MLg/kg18
IdLXqBwN+JBP5KuTV9igleZ+YDdnPS4b+4xpkcOGcwqzPClRb1D+GEYu5rKh
Lv9q1SDnGzxXbvvJ1IdssK+okA3lqsMHWypSTz1hQ3g752AxN4EnVJa86ybY
oCmTvmJaBMdjWVYLN+vZ4Hxd0zdFshbX3LqgveUdG+rDD678oFCD29ADuVQ+
sGGK9TvAR/klrtuUsD+wkw1qPhGNgmrV+Ok6W+78bhQfx4dBu/Se4/N7TCmP
v7CB6NjR/H37MzwymLbu8lc2MM3bV0dCFd7r+VPa7DsbHLbOtr2wrMRFHbTl
PUfYkFB6bd0h6wr8nL4Ss2WUDbXr1pxnHSzH/dfN61DH2aBM3aO20fUJPjq3
P9biHxuKVuDs9NZS/ILDaa+tJBsovKPFH3uL8f8Eeuz4mWw4w6Q4ig0X4nvX
Zei+YLGh7/t2fot/j/D08vWMvVNsgHa3ypi5B7joh90RddNsyK9NcK3lvY97
vF7RKDvLBqGSSrFZSh6u+034le0cG/yzBl7qyt/D7a3mbHzn2fBISrSz3yoH
774tGeK1gNaPflTT1j0T19YfVtm9yAaD1iexjWFpOPvZURu+JTbwF3J9N0hO
xu/PdP57gJwrWhB83OYanqLCmlNls2Fr416N/RGX8IH4Xp+ryLc4v+OB9mG4
4aY5rAP5wm9r22SXE/jzkK1B08jPiQs+wo/3w13vjzxs5Il8cx6R7EC07znD
+IX8I/3CPrl7URB5X8OoHNnqW3/6pqDL8NrQY8wJuT9ZnpGbdwM0K+fnxtB4
JKve39pwLQX4V6ucOYxs/vmc4fPgdLCRinEuQPOJWFAZ2umSDVs6JOv60Hz7
rnvXj6y9CyF+Wx/8RfEIumcsXSybC/tfVaz4geIlXiHjfUosHxaphaueo3gW
1v+r2cL9AF4zMtv8Z9hg+qlBfGH6IXgHHtMRRPEf/HXb7fWfAniQv+O/i5Ns
WCG8V2DvpxKI+11losRgQ5m88n8SzY9B7XakujGdDSrSi/bj357Awpectbsm
UL6pdhU86SqHDKsnj+m/UT6WwQGpDxVQ9MvidOYvNvynX7RwpqkS3u2PKVL5
ifJ5T/T+HbVV0I7rMEe+oXzv+jtz+/kzKEwNMZQbYEOS0+FcjorncALmz+j0
offFf9Pk24fV8KupY4tQFxvckr9mWifVwpdcj69uDWzgXLiowbiLww+FMhHX
Oja0l9O+WjgQMJ6u4WFUy4YA+Rq/8ROv4cPY4aBbT9nw5J/ADa24N3BDeWFn
E3p/L6w94sAWq4ehrMO8jbfZYH34sVJ7Wj0Uvrdvvp/OBnrdwbJTD95CiAnF
kz+RDZvScjsr3zZC5SsTW7ezbOBonsy8tO8dnB1Yl+Z/Cj2fbX7MvvsdsB3s
BFxOoud7/WNODzeBXtvwvfGj6PkGBrQdPC3wxWCDQNUuNqSTY0Uuq9vhRaHT
CSdh1N9VKsXCvR3Ut4v8V8fNBk8VoyDtgnbYXPswTnxhCbb9l2TApd0BeJ7n
z2N/lqC3fmtrHtYJqeXZsNS8BDLpFydGnLtAXjbkl1ncEqQbKWr75vRCW32L
RBZ9EQrPSBu2DPSCfEFK+5Ffi1BTTLHQUPgMu//8jJD6ugjfV3K7/s76DM9f
zte5NC+C+vSvG+4ZfVDslHIx+j66/3EZ3SmlH5IUdqYqOixCwI01DutNB+FP
WbFm5PMFuMlZJS2zYxic2D+SD5yehy2zGaH+TsPg/GldwcET89BHDx9oiByG
TyM9bY5H5kFp0DTvTP0wuCj6LPiZzUNpbbfWx30/wZWyKefNynl4HzZpmugy
Aq7cx62N6+eAY0oviCd2FK73G++NkpuD/L8yPf89GgVGavvHDRJzsPvnwvaK
96Mw+Phq+ne+OUjsqme7iv+G5K8m2s6MWZCvsEvA039DuID6cGXTLGwNCMoN
LRqDBy98kvpCZsFvrKKd3v4HLhmqeJ4ZnIElPfWnDxl/4Ow1Q5GDPTNwLfJu
xlHqXzj9vOCgYdsMFFOvubUc+gvCJu709TUzMGbkwXr49S8YO97+7J4+Aydu
ysg4/5lA55YGsXjbGdiUU/t4JIYOCYTkzcDWaTj3ZnZ1XQod/j3seOb7dhqI
Ub2U2/fpcOQ5qyLg1TTs1y06Z9dIB2vXadWkkmnwe3fLuE6IROMfebEjcRpK
GAEfbyeRYDlhdFXPZhrUdytP291hgPF1K8W0gSnIPmArJfaYARvEabJyPVMg
7hK1sbGWAdoeR80etk8B69y3E9u/MuBX61vl7jdT8Kowq1dBgYnOye0HYwun
wFqMWj2SyYRNPovvt4dMQXA3T/i5NBbYvYz2rEH7zdHvuhnaD1jQwne8WX7F
FPw34fZ07CkLujgcH8RQpgDjf/33SDcLLufaFB3nnQLB7eFHjamTwNdqjAX+
m4Ts7EkQSp6E9EVN7lf1k/D62AhX9jW0jyzn4PoUOAmY4mXRgpwpUGydULnh
NwlEr4ZM1eMp+CXDnLT2Qt53akN7xxSEeZacGjk6CbVbFw7xrJiGvIK0BWfL
SagWlizxyZkGtauSNrFrJqG8wvCQ4eMZsPbKdfPsYYGO36CrJTEDe56HWI12
sqBMNcbnUMcMzPRJjfq2seDJ7XdRp5gzsHY6nO/KWxaUxh0ovr8V7TNNlVbx
VrKg8D8vTjFiFoL8qVYcySzI5U4t+to+B99lu5N7bViw976GS9PgHOyYyIo0
tmLBlFkdtZI+B5t6f2SUWrLA8sq/8MuUeXBTCjVONWEBg2JprWc9DzTt/sab
m1lgoshmXf4wDwsjfgo2K9F5Y5uX0ea2BbjHt+VSwQgTEvvYjFVfF4CuKLsh
cYgJ286nPRSaWIDq86vdggeZcBV/QxkUXYTq9cquNn3ovGemOHRl3yJ0Fj3T
0W5jwqUDH+MGWxZBPCtqc0oVE1T8DDsS0Hdkxr/Kr+kyE8y23zZT+bIE7klH
69bGMdH+bPElMbYEl36x56MvMuFhZs2DSUE20NLdJM0jmaDauOO8szkb7L6u
d2cFMUFNSX+97lt0fX1kRKcLE1Z4ZRn5OnNgT8fvHLyqz4QHVntC9E9wYHwm
hbcM0fl2i958Bb8/B5bCYWFLovOvPdtRLTeCA/teXL/WRZsJaakrqT23ObCs
DPVRR1UmSNdl/Mb6OTAuV7WddSuYICOXnkI9zIllRSwNm0wyoLQnqiHBlRN7
dvX3FUkmA0xTTs5weXNiXNe+FA+h8/tpUThChqL7b3kfuvaHAa3sn8pt2ZyY
Ke3k2OIQA6KHdSviBjkxN8V/2jYfGfC35EPH3AkuLKfENrmwggEXvV9wnw7g
wri3j6XWlTFg5fq8zb/PcWHnN7hU9KP3zvxucEbPZS7s2b32TdLFDMhNVnCt
LOLCdHkpv/PzGeBw9iTd9x8XNhv8b0opjQF1GL/492BuTPl7163LoQyYoI/R
GiO4se9bDxksnEP932uTL4nlxjzWpfkFnEXj50xTD0njxuwHPwU5BTFgTd1a
M4kqbqztZmeXhR8Dokx2hhtPcmN5ZbetvN0YgJmFj98L5MFMyQDh2j0M8Jly
YcSF8WCH+0vnj1oyIP3BrlnfGB7MwadzJ6cFA+h8Ivz6N3mw0dyrHyzMGHC3
MXNNZzkP9rwi7dkYxgC2+fPDXAwebFHwgL/3FgbU7mE2ugXwYtssw+wOrUHt
OykNjHO82FFBLg2+1QxQdtSqj47ixa7Y2h2tWsWAeE8vIjeZF/M59KRrpQID
bC99e/6jkhfL+abcyZRmwEhtc4HbLC/2YsO/B8OiDBDTyU9wi+bDJL38xqvm
SHCWObjfLYUfK28ozm3rIUHlps8a12x+TPbSP7O+TyRMiF6cdM7nxzYcD2gd
6SYhgrsiy6mSH9v7xzecq4uEnAnKqEMXP1ax02v/rnYS+utbLuynCmDpCdx0
+jsSHE7tKjdIEcDk96kKjFaTYPtelyadIojJTRmcULpHQvfnx+/+Zgliu8OS
Glzvovt/a5yvzxPERjYfasu7Q4KTwNqhUxWCmFVmWZdaDgmeZtSylk5BjD2t
VWSYRUJkHWtvtIQQNqdmNxWTSkJx9dOLfxOFsHt+20dir5DAX7SV9eayMOZy
eDRldzAJN5L+5uxKFsZ8q07ev3eGhJXn8izeZgpjQ37eBxaCSNA0Fb/TUCSM
vdOOvVQRiMb7bcSiqVUYS/GV1VE7heYrlXanTUIEs9pvp6XtQ4LeeZbl5wwR
bKBw6ddjNxLc9pXdmygQxexAwWGvDQlR611Xfy0TxQIv2x3ptCbhLqfEvdYX
ophtjVabA/LA04C7xU2i2HRh4KzHfjR/xU13vH+LYs9EJo7H7yNh37/S7BFV
MezVmmCzbxYkbEsqvvX1oRjmP5jK7ttJwqGTR6TbHoth2V90ZP2Qg01Fbr16
Joa9fRecxolcMXsyLbtRDGOVtVarGZOg5aaR6vhLDOuOfZMbASQo6xYmf1IR
xzLFHcr0DUgQ6354re2+OPbRN+7X7GYSdGOTeDxLxTEljaDuG8gOW8PCOJ+J
YzeozlqqyHkZVl5678SxoXT6Kgc9NL6jk7syx8Qxtwi32RodEsoCVy+VS1Ow
xsQfxpkbSfiy4Pc04ggFs3tXsvqeGgl+3UMBzS4U7GZeTf8uZI5SB00Zdwpm
+DBjdlQV5aPzzrwyXwqWv1h2SAc54DUtaTiCgl0Sl8tpUiGBN7bGx/IeBbNa
ZK4UWkvCRnGhtStGKFiDkLxShyIJSjplH6zGKNiW0HRKNDLloENY3AQFc1g7
fkgXmZ75oHNmioKx9xqNpSmQ8ETFJOoLvwSWsapP2k2eBB2j81/vqklg+wvf
eQmsROvtO5Gu4SuBXYijJd6kkbD2Ruqu46cksC13r01bIVMrDOjZZyTQfGvK
hJBZM1d2i0VIYNK1V6VjqCQ8vbh+ip4ogW1evy7/rBQJW7JdDlQ9kcCG1pzP
8pcgYXtzp6gxC/WXlv09QxS1/zWlrD0jgVmTmzmPIZfyyOmvXpDANDiz3TSR
1xod8+DkkcROidmP4SJofmXM2tdSkpj4oLHQmDAJI2nUgJ26ktiqlujTlmjf
k+xm32lyWhLLbz29egc/yq/I0FHdYEmscjTCRARZIDtnSTlUEuOdGM4b4EP7
pO4RdZ5oSUym0XFVFLKn+dmY+iRJTOGc/tJ7XhKMtNL1TMsksZLWIjNvHhLG
Zz+nmdElMYkL8y6fOElQ58p6lMCSxGSfQFcRsqfQker2GUms5/jZa1HIwyu/
DjhySmFycLhjA3L/jh9r/SWlsPcHZLIvc5DQEj5WfktPCvO4XrTeik0Hodii
+v5tUli5r/3EemTzRJ9Pqw2lsPpir1lO5PqcidkiUymso8env2qJDq9wBkbY
S2G0NM+PysilnPNto+eksM8lX08JLdLhj2DN4IZwKayb+1bQ6AId1CXDGaej
pLBRPcfqBuQHa9i0xctSmHz7Y7GLyDkm3E4SWVJYwvyJXk7k65eEx7e/ksKS
c2S/Cc7TIUBQnj+Bk4qVXMjQ3zNLhxBhx5g4Xiq2dXq9li5ytGg6O0aQiu3M
3Owoh3xTgjpzXoKKBa25/d+fGTpUyYr89ltNxTzE9nAlIS+oLby3NaZiEdas
ruFpOvBq6u/eb0rFzM5OWLYji2mde7PHgorlnX4y8xJ5lQ7r5S4bKhav5jZ/
E3mn/p/iLa5UjPH9aLYZcrxlf+LKKCoWcHTTrqopOiTtXSksfYmKDWdw6NxH
zrRyiJO6TMUs+Nj2KchFtl2RIklUzJr3uFkgcptjS8DSXSrWyBx6oYvcc0To
71w+FfMz0XdZizx41Nxr+hEVe9Fz3pCGTLrVu9KfUDGb2YfZ05N0oJ6ssf1B
ULGZhPo/tcgKvnNtX+upWE1eoUUZsor/tj1f3lExpR07B/KQtwZWmnS1U7Ev
97wfLdcvOIYV6zUMIl/91XoI+U5C9opCDhpWra5qvcSiA1+vSEwyDw0raF5r
zlquX1kb/i9UgIapWh8MGkPe9srp3R4KDWsYNfLqQW6fUAz9u4qGMbdV1lcg
b9lxfaRbmYa9WPPBqQg5O45tW7uehs3azannLdeXKA1qXN9Iw1qLTrneXK7v
sL03sAlo2HGPUKPg5fqRHAlLWRMadn1tyVn/5Xqcsagqzt00TJrVOeyJnBXj
dr3TioZ5iI87Hllu3945X21Lw+qNeo7ZL7eXN/HMs6dhd80K71oj6z1VNg46
SsPW1c4+NUXO5EwpOeJGw6z7AxIxZA4rnpWmHjRsfmN95g7k1pFhBs2Php0c
n7TSWW6ve9B56RQNM2r5MLVhuX3k2+aRMzTsftf5TrXlehWZB/nPwmnY0ePm
69Ys1+8cXyFxNwrFQ+tYtiKyTllsePwlGpb80GK3HHL64tTvgMs0bFFrbp0M
MtvihP3hazRsAwRuoy33l9ZTZ5yExneyIkJyub8fuzeqp9Kwj84vZpbrh3Q2
Ps+SzEDXf8Q8EF3uL0xVYD4bjadDIl4YeakxPWjoLg3rXOd2WxD5OFXwe3M+
DaPRA0eW65feu4Tsq3xEw3oczY7xIWuX/H6RXUzDKgt6pZbrndJnD6tcekLD
zm5Xn1muj1oyfZ/sW0nD5C7oU5Z9PFmfffA5ireI4JHleqr3XwtPGtWgfIhL
/bJcf7VJQ65XhaBh+eXfEpe9e6vmtzvInvIrLy/7fyzSNWU=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1: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
7Q2190I2rGn7tN6Xjm37MrvjDPKGn2tpi0F0zMV1leNJZJZKc2RWDB3b7yuV
bow8ouOjKhlPx2rkR+INkfv2KzRcS6Zj7o8rX+sjV3l481lm0rG7d9y9tyHn
B6xKq3xGx7RwAzF15PT79bA+j445nZf8oIZ865W830IpHRMrTeleh+z3rpZ+
uhLV/8KK8i+fyKPLq6SDoGOjIzzXViIfmnrPyGygY9uL1WupyHsEPO9JtNIx
I4OCbClkLbrMxmuddIyztKroX37Tqp3nXA9+omONDbjRv/wnCVMaf+UgHbN0
JJsEkfls3qYrDdMxb8Plfvz/8qHczxpEjdKxzQ4ih/iQx/ylB+d/0zGh6slD
PMif7+LXXBh0jDugxv9fflZrqptsxyQde/TOt/1f/tbbfKkynTlUXwtl/7/8
rqK3b45kLtExykQ0+S//K6vzNEucVwZzC2O/+ZcflvBdIspPQAbTF9Mu+pc/
FsGu2DQiLINdFbX/8C/fLGCZS/MBcRksVN5N7p8vUMXPVFBkMBg7FPEvP+3U
+nIBJRkZjFtDQemfj2qdenp/pQyW2NQy+i/f7f/y4bD/z4f7H8d81aY=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
        
        "]]}, {}}, {{}, {}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Sk (MN/2+SSA+MN/2,alpha=\\!\\(TraditionalForm\\`0.05`\\))\"", 
        StringForm["Sk (MN/2+SSA+MN/2,alpha=``)", 0.05], Editable -> False], 
       TraditionalForm], 
     PlotRange -> {{-6.283185050723043, 6.283185050723043}, {0.8, 2.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox["\"beta=\\!\\(TraditionalForm\\`0.1`\\)\"", 
        StringForm["beta=``", 0.1], Editable -> False], 
       InterpretationBox["\"beta=\\!\\(TraditionalForm\\`0.15`\\)\"", 
        StringForm["beta=``", 0.15], Editable -> False], 
       InterpretationBox["\"beta=\\!\\(TraditionalForm\\`0.2`\\)\"", 
        StringForm["beta=``", 0.2], Editable -> False], "\"Exact\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.677275176582755*^9, {3.677275256992165*^9, 3.6772753031560163`*^9}, 
   3.677275362417841*^9, {3.677275411282971*^9, 3.677275430177124*^9}, 
   3.677275542751893*^9, 3.677599899216889*^9, 3.677852785687706*^9, 
   3.6778531223303957`*^9, 3.67786025865075*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1120},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 130, 1, 97, "Title"],
Cell[713, 25, 52, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[790, 30, 101, 1, 68, "Section"],
Cell[894, 33, 849, 19, 55, "Input"],
Cell[1746, 54, 677, 20, 77, "Input"],
Cell[2426, 76, 574, 17, 77, "Input"],
Cell[3003, 95, 1127, 38, 77, "Input"],
Cell[4133, 135, 684, 18, 55, "Input"],
Cell[4820, 155, 788, 23, 55, "Input"],
Cell[5611, 180, 1447, 45, 55, "Input"],
Cell[7061, 227, 810, 24, 55, "Input"],
Cell[7874, 253, 1210, 33, 99, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9121, 291, 230, 3, 68, "Section"],
Cell[CellGroupData[{
Cell[9376, 298, 116, 1, 47, "Subsection"],
Cell[9495, 301, 1708, 51, 121, "Input"],
Cell[CellGroupData[{
Cell[11228, 356, 1034, 30, 99, "Input"],
Cell[12265, 388, 984, 17, 32, "Output"],
Cell[13252, 407, 984, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14273, 429, 929, 28, 55, "Input"],
Cell[15205, 459, 2256, 53, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17510, 518, 316, 4, 47, "Subsection"],
Cell[17829, 524, 1114, 34, 99, "Input"],
Cell[CellGroupData[{
Cell[18968, 562, 869, 27, 99, "Input"],
Cell[19840, 591, 767, 14, 32, "Output"],
Cell[20610, 607, 769, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21416, 626, 883, 27, 55, "Input"],
Cell[22302, 655, 2255, 54, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24606, 715, 232, 3, 47, "Subsection"],
Cell[24841, 720, 2573, 75, 143, "Input"],
Cell[CellGroupData[{
Cell[27439, 799, 1185, 33, 99, "Input"],
Cell[28627, 834, 1097, 19, 32, "Output"],
Cell[29727, 855, 1097, 19, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30861, 879, 928, 28, 55, "Input"],
Cell[31792, 909, 2321, 54, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34162, 969, 314, 5, 47, "Subsection"],
Cell[34479, 976, 2894, 84, 143, "Input"],
Cell[CellGroupData[{
Cell[37398, 1064, 1339, 37, 99, "Input"],
Cell[38740, 1103, 1175, 20, 32, "Output"],
Cell[39918, 1125, 1173, 20, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41128, 1150, 978, 29, 55, "Input"],
Cell[42109, 1181, 2311, 55, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44469, 1242, 267, 5, 47, "Subsection"],
Cell[44739, 1249, 1470, 44, 99, "Input"],
Cell[CellGroupData[{
Cell[46234, 1297, 869, 27, 99, "Input"],
Cell[47106, 1326, 662, 13, 32, "Output"],
Cell[47771, 1341, 664, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48472, 1359, 881, 27, 55, "Input"],
Cell[49356, 1388, 1841, 45, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51246, 1439, 152, 2, 47, "Subsection"],
Cell[51401, 1443, 1676, 49, 99, "Input"],
Cell[CellGroupData[{
Cell[53102, 1496, 869, 27, 99, "Input"],
Cell[53974, 1525, 688, 13, 32, "Output"],
Cell[54665, 1540, 690, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55392, 1558, 978, 29, 55, "Input"],
Cell[56373, 1589, 2062, 49, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58484, 1644, 174, 3, 47, "Subsection"],
Cell[58661, 1649, 1832, 53, 99, "Input"],
Cell[CellGroupData[{
Cell[60518, 1706, 1040, 31, 99, "Input"],
Cell[61561, 1739, 615, 12, 32, "Output"],
Cell[62179, 1753, 615, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62831, 1770, 881, 27, 55, "Input"],
Cell[63715, 1799, 1680, 42, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65444, 1847, 166, 3, 47, "Subsection"],
Cell[65613, 1852, 1855, 56, 99, "Input"],
Cell[CellGroupData[{
Cell[67493, 1912, 974, 30, 99, "Input"],
Cell[68470, 1944, 600, 12, 32, "Output"],
Cell[69073, 1958, 599, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69709, 1975, 881, 27, 55, "Input"],
Cell[70593, 2004, 1452, 37, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72094, 2047, 129, 1, 47, "Subsection"],
Cell[72226, 2050, 2122, 63, 143, "Input"],
Cell[CellGroupData[{
Cell[74373, 2117, 974, 30, 99, "Input"],
Cell[75350, 2149, 542, 11, 32, "Output"],
Cell[75895, 2162, 542, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76474, 2178, 907, 28, 55, "Input"],
Cell[77384, 2208, 1943, 48, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79376, 2262, 186, 2, 47, "Subsection"],
Cell[79565, 2266, 1766, 50, 99, "Input"],
Cell[CellGroupData[{
Cell[81356, 2320, 974, 30, 99, "Input"],
Cell[82333, 2352, 599, 12, 32, "Output"],
Cell[82935, 2366, 597, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83569, 2383, 955, 28, 55, "Input"],
Cell[84527, 2413, 1880, 45, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86456, 2464, 136, 1, 47, "Subsection"],
Cell[86595, 2467, 770, 22, 77, "Input"],
Cell[CellGroupData[{
Cell[87390, 2493, 869, 27, 99, "Input"],
Cell[88262, 2522, 1050, 27, 48, "Output"],
Cell[89315, 2551, 1007, 25, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90359, 2581, 982, 29, 55, "Input"],
Cell[91344, 2612, 3034, 75, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94427, 2693, 181, 2, 47, "Subsection"],
Cell[94611, 2697, 866, 24, 77, "Input"],
Cell[CellGroupData[{
Cell[95502, 2725, 869, 27, 99, "Input"],
Cell[96374, 2754, 1071, 27, 48, "Output"],
Cell[97448, 2783, 975, 23, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98460, 2811, 1027, 29, 55, "Input"],
Cell[99490, 2842, 3073, 76, 54, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102624, 2925, 187, 2, 68, "Section"],
Cell[CellGroupData[{
Cell[102836, 2931, 2173, 58, 187, "Input"],
Cell[105012, 2991, 984, 13, 32, "Output"],
Cell[105999, 3006, 970, 13, 32, "Output"],
Cell[106972, 3021, 983, 13, 32, "Output"]
}, Open  ]],
Cell[107970, 3037, 6393, 175, 297, "Input"],
Cell[114366, 3214, 240, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[114631, 3225, 3994, 94, 165, "Input"],
Cell[118628, 3321, 17788, 299, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136453, 3625, 527, 13, 55, "Input"],
Cell[136983, 3640, 935, 13, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137967, 3659, 116, 1, 68, "Section"],
Cell[138086, 3662, 352, 9, 55, "Input"],
Cell[138441, 3673, 6393, 175, 297, "Input"],
Cell[144837, 3850, 240, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[145102, 3861, 152, 2, 47, "Subsection"],
Cell[CellGroupData[{
Cell[145279, 3867, 3639, 73, 99, "Input"],
Cell[148921, 3942, 4357, 77, 352, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153315, 4024, 7263, 189, 297, "Input"],
Cell[160581, 4215, 53753, 948, 277, "Output"],
Cell[214337, 5165, 53733, 948, 277, "Output"],
Cell[268073, 6115, 54718, 964, 277, "Output"],
Cell[322794, 7081, 54593, 963, 277, "Output"],
Cell[377390, 8046, 91520, 1605, 277, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468947, 9656, 1364, 36, 77, "Input"],
Cell[470314, 9694, 2311, 44, 328, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472662, 9743, 1441, 38, 99, "Input"],
Cell[474106, 9783, 24509, 452, 265, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[498652, 10240, 1995, 47, 77, "Input"],
Cell[500650, 10289, 3147, 56, 354, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[503846, 10351, 223, 3, 47, "Subsection"],
Cell[CellGroupData[{
Cell[504094, 10358, 3585, 92, 121, "Input"],
Cell[507682, 10452, 2780, 53, 346, "Output"],
Cell[510465, 10507, 2803, 50, 336, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513305, 10562, 4044, 99, 165, "Input"],
Cell[517352, 10663, 89074, 1556, 277, "Output"],
Cell[606429, 12221, 40468, 748, 284, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646934, 12974, 2597, 68, 121, "Input"],
Cell[649534, 13044, 63030, 1116, 277, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
