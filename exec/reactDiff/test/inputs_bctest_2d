! WARNING: gfortran has shown some issues reading matrices of rank higher than 2 from namelists
! be careful and check values are read correctly (e.g., c_bc)

! Options for low Mach equations
&probin_common
 
  ! Problem specification
  !----------------------
  dim_in = 2                       ! 2D or 3D  
  prob_lo(1:2) = 0.d0 0.d0         ! physical lo coordinate
  prob_hi(1:2) = 1.d0 1.d0         ! physical hi coordinate

  n_cells(1:2) = 32 32             ! number of cells in domain
  max_grid_size(1:2) = 16 16       ! max number of cells in a box
  fixed_dt = 1.d-3                 ! time step (if positive, fixed)
  max_step = 25                    ! maximum number of time steps
  plot_int = 25                    ! Interval for writing a plotfile (for visit/amrvis)

!  n_cells(1:2) = 64 64             ! number of cells in domain
!  max_grid_size(1:2) = 32 32       ! max number of cells in a box
!  fixed_dt = 0.5d-3                ! time step (if positive, fixed)
!  max_step = 50                    ! maximum number of time steps
!  plot_int = 50                    ! Interval for writing a plotfile (for visit/amrvis)

!  n_cells(1:2) = 128 128           ! number of cells in domain
!  max_grid_size(1:2) = 64 64       ! max number of cells in a box
!  fixed_dt = 0.25d-3               ! time step (if positive, fixed)
!  max_step = 100                   ! maximum number of time steps
!  plot_int = 100                   ! Interval for writing a plotfile (for visit/amrvis)

  ! Time-step control
  !----------------------

  ! Controls for number of steps between actions (for HydroGrid see below)
  !----------------------
  chk_int = 0                      ! Interval for writing a checkpoint
  prob_type = 3                    ! 3=1+sin^2(pi*x) * sin^2(pi*y)
  restart = -1                     ! checkpoint restart number
  print_int = 1                    ! how often to output EOS drift and sum of conserved quantities

  ! stochastic forcing amplitudes (1 for physical values, 0 to run them off)
  variance_coef_mass = 0.d0 ! global scaling epsilon for stochastic mass forcing

  ! Initial conditions
  !----------------------
  initial_variance = 0.d0   ! multiplicative factor for initial fluctuations
                            ! (if negative, total momentum is set to zero)

  ! Algorithm control / selection
  !----------------------

  ! random number seed
  ! 0        = unpredictable seed based on clock
  ! positive = fixed seed
  seed = 0

  ! Boundary conditions
  !----------------------
  ! BC specifications:
  ! -1 = periodic
  ! 100 = no-slip wall      (Dir condition for normal vel; Dir velocity condition for trans vel)
  ! 101 = no-slip reservoir (Dir condition for normal vel; Dir velocity condition for trans vel)
  ! 200 = slip wall         (Dir condition for normal vel; Dir traction condition for trans vel)
  ! 201 = slip reservoir    (Dir condition for normal vel; Dir traction condition for trans vel)
  ! For a complete list see bc.f90
  bc_lo(1:2) = 101 101
  bc_hi(1:2) = 101 101

  ! Control for analyze_spectra.90 for calling HydroGrid
  !----------------------
  hydro_grid_int = 0    ! How often to call updateHydroGrid
                        ! 0 if never
                        ! negative for projectHydroGrid custom analysis
                        ! positive for updateHydroGrid

  project_dir = 0         ! Projection direction (1=x, 2=y, 3=z)
  ! Meaning: 0=analyze 3D data only (no projection needed for HydroGrid, 
  !          but still need projection if stats_int>0)
  ! +dim=project along dim then analyze 2D only,
  ! -dim=analyze 3D and then project along dim so we also analyze 2D data
  ! It is better to use the conserved variables but it does not quite work for staggered

  max_grid_projection(1:1) = 32  ! parallelization parameters
  stats_int = -1                 ! Project grid for analysis
                                 ! If positive, how often to compute mean and 
                                 ! standard deviation over reduced dimensions
  n_steps_save_stats = -1 ! How often to dump HydroGrid output files
  n_steps_skip = 0        ! How many steps to skip
  analyze_conserved = T   ! T = analyze n, F=analyze mole fractions x

/

! reaction/diffusion number fraction code
&probin_reactdiff

  ! Problem description
  !----------------------
  nspecies = 1             ! number of species
  nreactions = 1           ! number of reactions
  
  ! Control of algorithm
  !----------------------
  diffusion_type = 1       ! 0=explicit trapezoidal predictor/corrector
                           ! 1=Crank-Nicolson semi-implicit
                           ! 2=explicit midpoint
  reaction_type = 1        ! 0=first-order tau leaping or CLE
                           ! 1=second-order tau leaping or CLE
                           ! 2=SSA
  use_Poisson_rng = -1     ! Only used for reaction_type = 0, 1
                           ! If -1 do deterministic chemistry
                           ! If 1 do tau leaping (Poisson increments),
                           ! If 0 do Chemical Langevin Equation (CLE) (Gaussian increments)
  splitting_type = 3       ! 0=D + R (first-order splitting)
                           ! 1=(1/2)R + D + (1/2)R (Strang option 1)
                           ! 2=(1/2)D + R + (1/2)D (Strang option 2)
                           ! 3=Strang option 2 with inhomogeneous boundary conditions
  avg_type = 1             ! how to compute n on faces for stochastic weighting
                           ! 1=arithmetic, 2=geometric, 3=harmonic
  
  ! Initial and boundary conditions
  !----------------------
  n_bc(1,1:2,1) = 1.0 1.0 ! n_i boundary conditions (dir,lohi,species)
  n_bc(2,1:2,1) = 1.0 1.0 ! n_i boundary conditions (dir,lohi,species)

  ! Diffusion     
  !----------------------                          
  D_Fick(1) = 0.1d0                   ! Fickian diffusion coeffs
  diffusion_stencil_order = 1         ! diffusion boundary stencil order
  mg_verbose = 0                      ! implicit diffusion solve verbosity
  cg_verbose = 0                      ! implicit diffusion solve bottom solver verbosity
  implicit_diffusion_rel_eps = 1.d-10 ! relative eps for implicit diffusion solve
  implicit_diffusion_abs_eps = -1.d0  ! absolute eps for implicit diffusion solve
  
  ! Chemical reactions
  !----------------------
  cross_section = 1.d0 ! thickness (in 2D) of cell

  ! Whether to compute chemical rates using classical LMA or integer-based one
  include_discrete_LMA_correction = F

  ! LMA chemical reaction rate for each reaction (assuming Law of Mass holds)
  chemical_rates(1) = 100.d0

  ! stoichiometric factors for each reaction (species,LHS(1)/RHS(2),reaction)
  ! Example: For N1 + 2*N2 -> N3 use
  ! stoichiometric_factors(1:3,1,1) = 1 2 0
  ! stoichiometric_factors(1:3,2,1) = 0 0 1
  stoichiometric_factors(1,1,1) = 2
  stoichiometric_factors(1,2,1) = 0

/
