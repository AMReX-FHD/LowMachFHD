! sample inputs file containing the defaults found in the namelists

&probin_common

  ! Problem specification
  !----------------------
  dim_in = 2                   ! 2D or 3D  
  prob_lo(1:2) = 0.d0 0.d0     ! physical lo coordinate
  prob_hi(1:2) = 64.d0 64.d0   ! physical hi coordinate
  n_cells(1:2) = 64 64         ! number of cells in domain
  max_grid_size(1:2) = 32 32   ! max number of cells in a box

  ! Time-step control
  !----------------------
  fixed_dt = 1.d0        ! time step (if positive, fixed)
  cfl = 0.5d0            ! cfl number (used if fixed_dt<0) to determine time step
                         ! could be advective or diffusive CFL (code dependent)

  ! Controls for number of steps between actions (for HydroGrid see below)
  !----------------------
  max_step = 100       ! maximum number of time steps
  plot_int = 10        ! Interval for writing a plotfile (for visit/amrvis)
  chk_int = 0          ! Interval for writing a checkpoint
  prob_type = 4        ! sets the problem type
  restart = -1         ! checkpoint restart number
  print_int = 1        ! how often to output diagnostics to screen

  ! stochastic forcing amplitudes (1 for physical values, 0 to run them off)
  variance_coef_mass = 1.d0 ! global scaling epsilon for stochastic mass forcing

  ! Algorithm control / selection
  !----------------------
  ! random number seed
  ! 0        = unpredictable seed based on clock
  ! positive = fixed seed
  seed = 1

  ! Initial conditions
  !----------------------
  initial_variance = 0.d0  ! multiplicative factor for initial fluctuations
                           ! (if negative, total momentum is set to zero)

  ! Boundary conditions
  !----------------------
  ! BC specifications:
  ! -1 = periodic
  ! 100 = no-slip wall      (Dir condition for normal vel; Dir velocity condition for trans vel)
  ! 101 = no-slip reservoir (Dir condition for normal vel; Dir velocity condition for trans vel)
  ! 200 = slip wall         (Dir condition for normal vel; Dir traction condition for trans vel)
  ! 201 = slip reservoir    (Dir condition for normal vel; Dir traction condition for trans vel)
  ! For a complete list see bc.f90
  bc_lo(1:2) = -1 -1
  bc_hi(1:2) = -1 -1

  ! Control for analyze_spectra.90 for calling HydroGrid
  !----------------------
  hydro_grid_int = 0    ! How often to call updateHydroGrid
                        ! 0 if never
                    	! negative for projectHydroGrid custom analysis
                        ! positive for updateHydroGrid

  project_dir = 0       ! Projection direction (1=x, 2=y, 3=z)
  ! Meaning: 0=analyze 3D data only (no projection needed for HydroGrid, 
  !          but still need projection if stats_int>0)
  ! +dim=project along dim then analyze 2D only,
  ! -dim=analyze 3D and then project along dim so we also analyze 2D data
  ! It is better to use the conserved variables but it does not quite work for staggered

  max_grid_projection(1:1) = 128 ! parallelization parameters
  stats_int = -1                 ! Project grid for analysis
                                 ! If positive, how often to compute mean and 
                                 ! standard deviation over reduced dimensions
  n_steps_save_stats = -1        ! How often to dump HydroGrid output files
  n_steps_skip = 0               ! How many steps to skip
  analyze_conserved = F          ! Should we use conserved variables for the analysis
                                 ! (does not work well)
  center_snapshots = F           ! Should we use cell-centered momenta for the analysis
                                 ! (will smooth fluctuations)
                                               
  histogram_unit = -1            ! If positive, write the values of the densities
                                 ! to a file for histogramming

/

&probin_reactdiff

  ! Problem description
  !----------------------
  nspecies = 2     ! number of species
  nreactions = 0   ! number of reactions
  
  ! Control of algorithm
  !----------------------
  temporal_integrator = 0        ! 0=D + R (first-order splitting)
                                 ! 1=(1/2)R + D + (1/2)R (Strang option 1)
                                 ! 2=(1/2)D + R + (1/2)D (Strang option 2)
                                 ! -1=unsplitting forward Euler
                                 ! -2=unsplitting explicit midpoint 
  diffusion_type = 3             ! Only used for splitting schemes
                                 ! 0=explicit trapezoidal predictor/corrector
                                 ! 1=Crank-Nicolson semi-implicit
                                 ! 2=explicit midpoint
                                 ! 3=multinomial
  midpoint_stoch_flux_type = 1   ! for midpoint diffusion schemes, (split and unsplit)
                                 ! corrector formulation of noise
                                 ! K(nold) * W1 + K(nold)         * W2
                                 ! K(nold) * W1 + K(npred)        * W2
                                 ! K(nold) * W1 + K(2*npred-nold) * W2
  reaction_type = 0              ! Only used for splitting schemes
                                 ! 0=first-order tau leaping or CLE
                                 ! 1=second-order tau leaping or CLE
                                 ! 2=SSA
  use_Poisson_rng = 1            ! Only used for reaction_type = 0, 1
                                 ! If -1 do deterministic chemistry
                                 ! If 1 do tau leaping (Poisson increments),
                                 ! If 0 do Chemical Langevin Equation (CLE) (Gaussian increments)
  inhomogeneous_bc_fix = F       ! use the Einkemmer boundary condition fix (split schemes only)
  avg_type = 3                   ! how to compute n on faces for stochastic weighting
                                 ! 1=arithmetic, 2=geometric, 3=harmonic
  
  ! Initial and boundary conditions
  !----------------------
  n_init_in(1,1:2) = 100.d0 10.d0 ! Initial values to be used in init_n.f90

  ! Diffusion     
  !----------------------                          
  D_Fick(1:2) = 0.1d0 0.01d0            ! Fickian diffusion coeffs

/
